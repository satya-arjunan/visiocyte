/* resample_swc_func.cpp
 * This is a plugin to resample neuron swc subject to a fixed step length.
 * 2012-03-02 : by Yinan Wan
 */

#include <visiocyte_interface.h>
#include "visiocyte_message.h"
#include "resample_swc_func.h"
#include "resampling.h"
#include "customary_structs/visiocyte_neurontoolbox_para.h"
#include <vector>
#include <iostream>
#include "../sort_neuron_swc/openSWCDialog.h"

using namespace std;

const QString title = QObject::tr("Resample Neuron");

bool export_list2file(QList<NeuronSWC> & lN, QString fileSaveName, QString fileOpenName)
{
	QFile file(fileSaveName);
	if (!file.open(QIODevice::WriteOnly|QIODevice::Text))
		return false;
	QTextStream myfile(&file);
	myfile<<"# generated by Visiocyte Plugin resample_swc"<<endl;
	myfile<<"# source file(s): "<<fileOpenName<<endl;
	myfile<<"# id,type,x,y,z,r,pid"<<endl;
	for (VISIOCYTELONG i=0;i<lN.size();i++)
    {
        myfile << lN.at(i).n <<" " << lN.at(i).type << " "<< lN.at(i).x <<" "<<lN.at(i).y << " "<< lN.at(i).z << " "<< lN.at(i).r << " "
               <<lN.at(i).pn <<" " << lN.at(i).seg_id <<" " << lN.at(i).level;
        for (int j=0;j<lN.at(i).fea_val.size();j++)
            myfile <<" " << lN.at(i).fea_val.at(j);
        myfile << "\n";
    }

	file.close();
	cout<<"swc file "<<fileSaveName.toStdString()<<" has been generated, size: "<<lN.size()<<endl;
	return true;
};

int resample_swc(VISIOCYTEPluginCallback2 &callback, QWidget *parent)
{
	QString fileOpenName;
    OpenSWCDialog * openDlg = new OpenSWCDialog(0, &callback);
    if (!openDlg->exec())
        return 0;
    fileOpenName = openDlg->file_name;
	double step = 0;
	NeuronTree nt;
	if (fileOpenName.toUpper().endsWith(".SWC") || fileOpenName.toUpper().endsWith(".ESWC"))
	{
		bool ok;
        nt = openDlg->nt;
		step = QInputDialog::getDouble(parent, "Please specify the resampling step length","Step length:",1,0,2147483647,0.1,&ok);
		if (!ok)
			return 0;
	}
	
	NeuronTree result = resample(nt, step);
	
    QString fileDefaultName;
    if(fileOpenName.toUpper().endsWith(".SWC"))
        fileDefaultName = fileOpenName+QString("_resampled.swc");
    else
        fileDefaultName = fileOpenName+QString("_resampled.eswc");

	//write new SWC to file
	QString fileSaveName = QFileDialog::getSaveFileName(0, QObject::tr("Save File"),
			fileDefaultName,
			QObject::tr("Supported file (*.swc)"
                ";;Neuron structure	(*.eswc)"
				));
	if (!export_list2file(result.listNeuron,fileSaveName,fileOpenName))
	{
		visiocyte_msg("fail to write the output swc file.");
		return 0;
	}


	return 1;
}

bool resample_swc(const VISIOCYTEPluginArgList & input, VISIOCYTEPluginArgList & output)
{
	cout<<"Welcome to resample_swc"<<endl;
	vector<char*>* inlist = (vector<char*>*)(input.at(0).p);
	vector<char*>* outlist = NULL;
	vector<char*>* paralist = NULL;

	if(input.size() != 2) 
	{
		printf("Please specify both input file and step length parameter.\n");
		return false;
	}
	paralist = (vector<char*>*)(input.at(1).p);
	if (paralist->size()!=1)
	{
		printf("Please specify only one parameter - the resampling step length.\n");
		return false;
	}
	double step = atof(paralist->at(0));

	QString fileOpenName = QString(inlist->at(0));
	QString fileSaveName;
	if (output.size()==0)
	{
		printf("No outputfile specified.\n");
		fileSaveName = fileOpenName + "_resampled.swc";
	}
	else if (output.size()==1)
	{
		outlist = (vector<char*>*)(output.at(0).p);
		fileSaveName = QString(outlist->at(0));
	}
	else
	{
		printf("You have specified more than 1 output file.\n");
		return false;
	}

	NeuronTree nt;
	if (fileOpenName.toUpper().endsWith(".SWC") || fileOpenName.toUpper().endsWith(".ESWC"))
		nt = readSWC_file(fileOpenName);
	
	NeuronTree result = resample(nt,step);
	if (!export_list2file(result.listNeuron, fileSaveName, fileOpenName))
	{
		printf("fail to write the output swc file.\n");
		return false;
	}

	return true;
}

bool resample_swc_toolbox(const VISIOCYTEPluginArgList & input)
{
	visiocyte_neurontoolbox_paras * paras = (visiocyte_neurontoolbox_paras *)(input.at(0).p);
	NeuronTree nt = paras->nt;
	QString fileOpenName = nt.file;
	
	bool ok;
	double step = QInputDialog::getDouble(0, "Please specify the resampling step length","Step length:",1,0,2147483647,0.1,&ok);
	if (!ok)
		return true;
	
	NeuronTree result = resample(nt,step);
	QString fileDefaultName = fileOpenName+QString("_resampled.swc");
	//write new SWC to file
	QString fileSaveName = QFileDialog::getSaveFileName(0, QObject::tr("Save File"),
			fileDefaultName,
			QObject::tr("Supported file (*.swc)"
				";;Neuron structure	(*.swc)"
				));
	if (!export_list2file(result.listNeuron,fileSaveName,fileOpenName))
	{
		visiocyte_msg("fail to write the output swc file.");
		return false;
	}

	return true;

}
