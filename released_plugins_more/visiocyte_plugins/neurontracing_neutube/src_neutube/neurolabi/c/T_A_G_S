
alignconf.c,49
int main(13,241
#define MAX_FILE_NUMBER 40,778

alignresult.c,16
int main(9,145

alignstack.c,17
int main(15,303

alignstack_batch.c,17
int main(14,273

arinfo.c,17
int main(11,151

bwdist.c,17
int main(23,442

bwinv.c,17
int main(12,141

bwmorph.c,17
int main(20,310

bwsolid.c,17
int main(20,329

chainfeat.c,17
int main(13,228

cropstack.c,48
static int get_int_arg(16,243
int main(25,421

ct017.c,17
int main(11,168

detect_soma.c,17
int main(13,233

detect_soma2.c,17
int main(13,233

diadem.c,17
int main(15,281

diadem_b1.c,17
int main(15,290

diadem_c1_data.c,17
int main(11,167

diadem_d1.c,81
static int load_align(31,760
static void parse_align(74,1687
int main(96,2153

diadem_d1_data.c,47
static void upsample(12,199
int main(39,1092

diadem_d1_merge.c,90
int Detect_Threshold(18,352
Graph* Count_Region_Touching_Size(49,989
int main(154,3465

diadem_d1_recon.c,52
int main(29,615
#define MAX_TILE_NUMBER 397,10913

diadem_d1_split.c,17
int main(31,695

diadem_d1_stitch.c,17
int main(28,597

diadem_d1_watershed.c,17
int main(25,555

diadem_e1_data.c,17
int main(12,186

drawmask.c,17
int main(20,381

edswc.c,144
static int skip_argument(24,446
static int help(109,1600
#define SVG_VIEW_MAX_X 151,3538
#define SVG_VIEW_MAX_Y 152,3565
int main(154,3593

edtube.c,127
#define FORCE_PROGRESS13,238
static int skip_argument(24,477
static double locseg_chain_confidence(49,806
int main(72,1374

extract_line.c,17
int main(16,335

extract_lobster_neuron.c,28
INIT_EXCEPTION_MAIN(11,170

find_soma.c,17
int main(19,395

fitseg.c,17
int main(10,202

fly_neuron_arbor.c,28
INIT_EXCEPTION_MAIN(16,366

fly_neuron_blobmask.c,28
INIT_EXCEPTION_MAIN(26,635

fly_neuron_bundle.c,28
INIT_EXCEPTION_MAIN(14,309

fly_neuron_bundle_label.c,28
INIT_EXCEPTION_MAIN(17,411

fly_neuron_bundle_seed.c,28
INIT_EXCEPTION_MAIN(19,455

fly_neuron_chain_feat.c,28
INIT_EXCEPTION_MAIN(12,184

fly_neuron_export.c,28
INIT_EXCEPTION_MAIN(11,167

fly_neuron_grow_bundle.c,28
INIT_EXCEPTION_MAIN(16,367

fly_neuron_highpass.c,28
INIT_EXCEPTION_MAIN(21,487

fly_neuron_highpass_binarize.c,28
INIT_EXCEPTION_MAIN(17,394

fly_neuron_holemask.c,28
INIT_EXCEPTION_MAIN(15,334

fly_neuron_holeobj.c,28
INIT_EXCEPTION_MAIN(14,320

fly_neuron_label.c,28
INIT_EXCEPTION_MAIN(24,597

fly_neuron_label2.c,28
INIT_EXCEPTION_MAIN(24,593

fly_neuron_lowpass.c,28
INIT_EXCEPTION_MAIN(17,391

fly_neuron_lowpass_binarize.c,28
INIT_EXCEPTION_MAIN(10,199

fly_neuron_mask.c,28
INIT_EXCEPTION_MAIN(16,366

fly_neuron_seed.c,28
INIT_EXCEPTION_MAIN(25,601

fly_neuron_smoothsoma.c,28
INIT_EXCEPTION_MAIN(15,343

fly_neuron_soma.c,28
INIT_EXCEPTION_MAIN(17,395

fly_neuron_soma_model.c,28
INIT_EXCEPTION_MAIN(23,549

fly_neuron_test.c,28
INIT_EXCEPTION_MAIN(20,481

gen_adult_fly_neuron.c,26
INIT_EXCEPTION_MAIN(7,95

gen_fly_neuron.c,27
INIT_EXCEPTION_MAIN(9,157

gen_fly_neuron2.c,27
INIT_EXCEPTION_MAIN(8,134

gen_fly_neuron3.c,26
INIT_EXCEPTION_MAIN(7,95

gen_fly_neuron4.c,26
INIT_EXCEPTION_MAIN(7,95

gen_fly_neuron_a1.c,28
INIT_EXCEPTION_MAIN(10,182

gen_mouse_neuron.c,28
INIT_EXCEPTION_MAIN(10,182

gen_mouse_neuron2.c,28
INIT_EXCEPTION_MAIN(10,182

gen_mouse_neuron3.c,28
INIT_EXCEPTION_MAIN(10,182

gen_mouse_single.c,28
INIT_EXCEPTION_MAIN(11,207

gentestdata.c,149
INIT_EXCEPTION_MAIN(26,529
static void create_data(52,1026
static void create_data3(78,1636
static void create_data2(112,2330
int main(159,3399

hex.c,17
int main(16,211

imbinarize.c,17
int main(28,612

imexpr.c,15
int main(5,76

iminfo.c,17
int main(11,173

imop.c,17
int main(12,192

impath.c,17
int main(27,572

improj.c,17
int main(11,172

imsample.c,17
int main(10,145

lobster_neuron_seed.c,28
INIT_EXCEPTION_MAIN(15,321

make_trace_vrml.c,45
INIT_EXCEPTION_MAIN(14,289
int main(27,644

neuron_blob_soma.c,28
INIT_EXCEPTION_MAIN(17,395

parsediadem.c,253
static Geo3d_Scalar_Field* read_node_file(16,312
Swc_Tree_Node *Find_Closest_Branch_Point(Find_Closest_Branch_Point54,1205
Swc_Tree_Node *Find_Closest_Leaf_Point(Find_Closest_Leaf_Point87,2121
BOOL Is_Existing_In_Field(122,3155
int main(135,3451

pfeat.c,17
int main(12,197

reconstruct_neuron.c,463
void normalize_dir(42,1080
char* full_path(52,1225
char *get_chain_path(get_chain_path63,1452
char *get_new_chain_path(get_new_chain_path73,1672
char *get_new_chain_vrml_path(get_new_chain_vrml_path83,1899
Locseg_Chain *get_chain(get_chain104,2387
static void neuron_structure_suppress(114,2617
static void neuron_structure_suppress(157,3776
static void kill_locseg_chain_array(212,5155
static void swc_tree_remove_zjump(222,5320
int main(302,7155

regionmerge.c,90
int Detect_Threshold(18,352
Graph* Count_Region_Touching_Size(49,973
int main(150,3341

resamplestack.c,28
INIT_EXCEPTION_MAIN(10,177

rmsobj.c,17
int main(13,206

single_neuron_blobmask.c,28
INIT_EXCEPTION_MAIN(25,616

single_neuron_soma.c,28
INIT_EXCEPTION_MAIN(15,342

sort_seed.c,17
int main(38,857

stitchstack.c,285
char** splitstack(22,467
static Stack *read_stack_b(read_stack_b63,1644
static int load_align(116,2798
static int **load_conn(load_conn158,3721
static int lsm_thumbnail_flag(243,5525
static int skip_argument(257,5793
static int rearrange_arguments(306,6433
int main(356,7330

testarray.c,424
#define FORCE_PROGRESS17,304
int main(20,354
  struct A 199,4192
    int array[array200,4205
  struct A 219,4535
    int array[array220,4548
  struct B 223,4574
    int width;224,4587
    int height;225,4602
    int depth;226,4618
  struct A 247,4848
    int array[array248,4861
  struct B 251,4887
      int width;253,4912
      int height;254,4929
      int depth;255,4947
      int size[size256,4964

testarraylist.c,28
INIT_EXCEPTION_MAIN(13,212

testarraytrans.c,28
INIT_EXCEPTION_MAIN(12,195

testbifoldneuroseg.c,17
int main(16,321

testbitmask.c,28
INIT_EXCEPTION_MAIN(12,177

testbwdist.c,28
INIT_EXCEPTION_MAIN(19,378

testbwmorph.c,17
int main(19,384

testcmdloop.c,251
typedef struct _Cmd_Entry 5,60
  char *cmd;cmd6,88
  void (*execute)execute7,101
} Cmd_Entry;8,123
void quit(10,137
void greet(15,165
void explore(20,205
void getcmd(25,266
Cmd_Entry Cmd_Map[Cmd_Map32,358
void run(38,444
int main(58,776

testcolor.c,28
INIT_EXCEPTION_MAIN(11,163

testdatastruct.c,15
int main(5,68

testdlist.c,17
int main(12,191

testerror.c,27
INIT_EXCEPTION_MAIN(9,107

testgeo3d.c,28
INIT_EXCEPTION_MAIN(23,478

testgraph.c,17
int main(29,619

testgsllinalg.c,28
INIT_EXCEPTION_MAIN(10,134

testhistogram.c,28
INIT_EXCEPTION_MAIN(11,162

testimagearray.c,28
INIT_EXCEPTION_MAIN(10,201

testimagelib.c,15
int main(4,46

testimgfilter.c,28
INIT_EXCEPTION_MAIN(23,536

testimglib.c,239
int load_data(55,1251
Image *loadTestImage(loadTestImage129,2898
Stack *loadTestStack(loadTestStack135,3020
Stack *loadTestStack2(loadTestStack2148,3284
Stack *loadBinaryStack(loadBinaryStack161,3491
INIT_EXCEPTION_MAIN(174,3695

testimglib2.c,238
int load_data(44,900
Image *loadTestImage(loadTestImage118,2547
Stack *loadTestStack(loadTestStack124,2669
Stack *loadTestStack2(loadTestStack2137,2929
Stack *loadBinaryStack(loadBinaryStack150,3132
INIT_EXCEPTION_MAIN(163,3332

testmath.c,17
int main(10,138

testmatrix.c,17
int main(13,204

testmcstack.c,17
int main(10,146

testmicnuc.c,28
INIT_EXCEPTION_MAIN(12,253

testneurochain.c,388
INIT_EXCEPTION_MAIN(43,1090
double Locseg_Chain_Find_Segment(95,2001
void Compute_Orientation(120,2563
BOOL Locseg_Chain_Orientation(157,3328
double Locseg_Chains_Dist(270,5092
double Find_Overlapping(326,6680
int is_chains_connected(347,7161
int main(422,8822
  typedef struct _Test_Struct 2070,53741
    int n;2071,53773
    int scores;2072,53841
  } Test_Struct;2073,53889

testneuronstruct.c,16
int main(8,173

testneuroseg.c,28
INIT_EXCEPTION_MAIN(25,609

testneurotrace.c,28
INIT_EXCEPTION_MAIN(41,997

testobjdetect.c,28
INIT_EXCEPTION_MAIN(28,632

testperceptor.c,28
INIT_EXCEPTION_MAIN(19,399

testrand.c,17
int main(13,200

testsampling.c,28
INIT_EXCEPTION_MAIN(15,269

testscalarfield.c,17
int main(19,399

testspgrow.c,17
int main(25,547

teststack.c,17
int main(24,521

teststackcode.c,28
INIT_EXCEPTION_MAIN(18,358

teststackdraw.c,28
INIT_EXCEPTION_MAIN(20,394

teststackmath.c,15
int main(5,86

teststacknbr.c,230
INIT_EXCEPTION_MAIN(18,334
#define IN_BOUND_2D(25,436
static inline int *boundary_pixels_2d(boundary_pixels_2d28,523
#define IN_BOUND(45,976
static inline int *boundary_pixels_3d(boundary_pixels_3d48,1089
int main(85,2314

teststacktile.c,16
int main(9,122

teststitch.c,17
int main(14,248

teststring.c,17
int main(13,198

testswc.c,43
void validate_swc(21,381
int main(32,554

testsystem.c,82
INIT_EXCEPTION_MAIN(14,211
typedef double test_t[test_t16,235
int main(18,262

testtarray.c,28
INIT_EXCEPTION_MAIN(14,224

testthreshold.c,28
INIT_EXCEPTION_MAIN(14,307

testtiffio.c,45
INIT_EXCEPTION_MAIN(17,339
int main(33,644

testutilities.c,17
int main(19,309

testvoxelgraph.c,28
INIT_EXCEPTION_MAIN(12,195

testvrml.c,61
INIT_EXCEPTION_MAIN(11,233
#  define CIRCLE_NUMBER 79,1866

testwatershed.c,17
int main(28,609

testxml.c,76
processNode(14,214
streamFile(47,956
int main(67,1480
int main(174,3793

tifinfo.c,17
int main(14,180

trace_fly_neuron.c,28
INIT_EXCEPTION_MAIN(22,545

trace_fly_neuron2.c,91
INIT_EXCEPTION_MAIN(29,715
#define TRY_NEXT_SEED(147,3567
#define STOP_TRACING(151,3653

trace_fly_neuron3.c,91
INIT_EXCEPTION_MAIN(28,704
#define TRY_NEXT_SEED(142,3465
#define STOP_TRACING(146,3551

trace_lobster_neuron.c,28
INIT_EXCEPTION_MAIN(22,545

trace_lobster_neuron2.c,28
INIT_EXCEPTION_MAIN(22,545

trace_neuron.c,17
int main(35,834

trace_neuron2.c,17
int main(40,962

trace_neuron3.c,52
static void print_command(40,998
int main(56,1288

trace_particle.c,17
int main(17,337

trace_seed.c,42
static int help(25,576
int main(53,1297

trace_single_neuron.c,28
INIT_EXCEPTION_MAIN(26,647

trace_tube.c,17
int main(26,497

tubefeat.c,17
int main(13,245

tz_3dgeom.c,272
static double Ar[Ar13,204
static double* init_a_rxz(23,454
double* Transform_3d(59,1258
double* Rotate_XZ(96,2205
double* Rotate_XZ2(163,3895
double* Rotate_Z(171,4081
double* Scale_XY(210,4845
double* Scale_X_Rotate_Z(234,5330
double* Scale_Y_Rotate_Z(265,6034

tz_array.c,230
#define MIN_DOUBLE 8,122
void array_error(10,148
void array_warning(18,311
void arraycpy(31,684
void array_print(54,1231
int array_write(134,3136
int array_read(165,3896
int array_writet(197,4744
int array_readt(239,5675

tz_arrayqueue.c,662
Arrayqueue* New_Arrayqueue(10,159
void Free_Arrayqueue(20,327
void Construct_Arrayqueue(25,381
void Clean_Arrayqueue(35,616
Arrayqueue* Make_Arrayqueue(44,738
void Kill_Arrayqueue(51,873
void Default_Arrayqueue(57,951
void Print_Arrayqueue(65,1070
void Initialize_Arrayqueue(85,1391
int Arrayqueue_Size(95,1548
int Arrayqueue_Max(115,1804
void Arrayqueue_Attach(136,2089
void Arrayqueue_Add_First(142,2193
void Arrayqueue_Add_Last(156,2478
void Arrayqueue_Update_Tail(173,2802
int Arrayqueue_To_Index(183,2972
int Arrayqueue_To_Array(200,3269
int Arrayqueue_Dequeue(217,3568
void Arrayqueue_Enqueue(228,3723
BOOL Arrayqueue_Is_Empty(233,3813

tz_arraytrans.c,907
static void* get_array(16,308
static void set_array(54,1110
#define DEFINE_GET_DATA_AT(95,1951
DEFINE_GET_DATA_AT(106,2233
void* Detach_Array(139,3487
static void* new_data(152,3725
Array_Link* New_Array_Link(188,4690
void* Delete_Array_Link(206,5077
Array_Link* Image_To_Stack(225,5622
#define TZ_SET_MATRIX(239,5913
Array_Link* Image_To_Matrix(251,6200
#define TZ_SET_GM(289,7041
Array_Link* Image_To_Gm(306,7533
#define TZ_SET_GV(330,8142
Array_Link* Image_To_Gv(346,8535
Array_Link* Stack_To_Image(387,9709
Array_Link* Stack_Slice_To_Image(408,10156
Array_Link* Stack_To_Matrix(429,10657
Array_Link* Stack_To_Gm(475,11705
Array_Link* Stack_To_Gv(489,11985
Array_Link* Mar_To_Image(526,12910
Array_Link* Mar_To_Stack(573,13926
Array_Link* Mar_To_DMatrix(629,15164
Array_Link* Mar_To_Object_3d(661,15863
Array_Link* DMatrix_To_Gm(691,16564
Array_Link* FMatrix_To_Stack(708,16905

tz_arrayview.c,300
Image Image_View_Stack(20,369
Image Image_View_Stack_Slice(40,704
Image Image_View_Mar(65,1240
Stack Stack_View_DMatrix(111,2145
Stack Stack_View_FMatrix(145,2756
Stack Stack_View_Image(179,3367
Matlab_Array Matlab_Array_View_Int_Arraylist(193,3626
DMatrix DMatrix_View_Matlab_Array(222,4210

tz_bifold_neuroseg.c,391
Bifold_Neuroseg* New_Bifold_Neuroseg(16,293
void Delete_Bifold_Neuroseg(26,494
void Set_Bifold_Neuroseg(31,560
void Reset_Bifold_Neuroseg(48,916
void Fprint_Bifold_Neuroseg(53,1047
void Print_Bifold_Neuroseg(60,1341
int Bifold_Neuroseg_Var(65,1438
void Bifold_Neuroseg_Set_Var(81,1886
int Bifold_Neuroseg_Var_Mask_To_Index(88,2070
Geo3d_Scalar_Field* Bifold_Neuroseg_Field(93,2213

tz_bitmask.c,150
void Print_Bitmask(18,248
void Bitmask_Set_Bit(29,461
BOOL Bitmask_Get_Bit(41,686
int Bitmask_To_Index(51,840
Bitmask_t Index_To_Bitmask(69,1125

tz_color.c,286
Rgb_Color* New_Rgb_Color(13,192
void Delete_Rgb_Color(18,299
Rgb_Color* Make_Rgb_Color(23,359
void Set_Color(31,507
void Set_Color_Hsv(41,696
void Set_Color_Jet(113,1765
void Print_Rgb_Color(121,1955
Tiff_Colormap* New_Tiff_Colormap(126,2070
void Delete_Tiff_Colormap(136,2275

tz_complex.c,270
void fftw_cadd(4,44
void fftw_csub(10,139
void fftw_cmul(16,236
void fftw_conjg(24,399
fftw_complex* fftw_cadd_array(34,653
fftw_complex* fftw_csub_array(43,816
fftw_complex* fftw_cmul_array(52,979
fftw_complex* fftw_conjg_array(61,1142
void fftw_print(70,1281

tz_complex_f.c,284
void fftwf_cadd(4,44
void fftwf_csub(10,142
void fftwf_cmul(16,242
void fftwf_conjg(24,407
fftwf_complex* fftwf_cadd_array(34,667
fftwf_complex* fftwf_csub_array(43,835
fftwf_complex* fftwf_cmul_array(52,1003
fftwf_complex* fftwf_conjg_array(61,1171
void fftwf_print(70,1314

tz_cont_fun.c,428
Variable_Set *New_Variable_Set(New_Variable_Set12,157
Variable_Set *Construct_Variable_Set(Construct_Variable_Set24,387
Variable_Set *Make_Variable_Set(Make_Variable_Set37,681
void Delete_Variable_Set(44,842
void Clean_Variable_Set(49,902
void Kill_Variable_Set(60,1089
void Variable_Set_Update_Link(67,1212
void Variable_Set_Add_Link(81,1488
Make_Continuous_Function(87,1640
void Free_Continuous_Function(102,1999

tz_coordinate_3d.c,647
void Print_Coordinate_3d(13,209
void Set_Coordinate_3d(18,324
void Coordinate_3d_Copy(25,453
double* Coordinate_3d_Double_Array(30,575
void Coordinate_3d_Add(36,659
void Coordinate_3d_Sub(45,902
void Coordinate_3d_Neg(54,1147
double Coordinate_3d_Norm(62,1317
void Coordinate_3d_Unitize(67,1457
double Coordinate_3d_Distance(77,1646
void Coordinate_3d_Scale(88,1950
void Coordinate_3d_Cross(95,2080
double Coordinate_3d_Dot(104,2340
double Coordinate_3d_Normalized_Dot(110,2514
double Coordinate_3d_Length_Square(126,2865
double Coordinate_3d_Angle2(131,3008
double Coordinate_3d_Cos3(154,3545
double Coordinate_3d_Cos4(177,4089

tz_cuboid_i.c,278
DEFINE_ZOBJECT_INTERFACE(5,72
void Clean_Cuboid_I(17,279
void Print_Cuboid_I(27,450
void Cuboid_I_Size(34,640
void Cuboid_I_Set_S(49,954
BOOL Cuboid_I_Is_Valid(60,1222
int Cuboid_I_Volume(70,1432
Cuboid_I* Cuboid_I_Intersect(83,1694
int Cuboid_I_Overlap_Volume(99,1986

tz_darray.c,3434
#    undef HAVE_INLINE11,216
#    define INLINE_SUPPRESSED12,239
#    define HAVE_INLINE17,370
void darray_error(23,461
void darray_warning(31,626
double darray_max(38,784
double darray_max_l(56,1079
double darray_min(74,1345
double darray_min_l(92,1640
double darray_max_m(111,1948
double darray_max_n(143,2443
double darray_max_ml(177,2946
double darray_min_m(209,3456
double darray_min_ml(241,3951
double* darray_abs(273,4461
double* darray_neg(283,4586
double* darray_add(293,4706
double* darray_addc(301,4837
double* darray_cadd(309,4957
double* darray_sub(315,5052
double* darray_subc(323,5176
double* darray_csub(331,5296
double* darray_mul(336,5390
double* darray_mulc(345,5520
double* darray_div(353,5641
double* darray_div_i(374,6023
double* darray_divc(393,6366
double darray_dot(407,6583
double darray_dot_n(418,6755
double darray_dot_nw(431,6980
double* darray_sqr(474,7664
double* darray_sqrt(482,7777
double* darray_scale(503,8143
double* darray_max2(517,8506
double* darray_min2(530,8684
void darray_threshold(542,8861
double* darray_fun1(557,9267
double* darray_fun1_max(572,9538
double* darray_fun1_i2(605,10119
double* darray_fun1_i2_max(617,10352
double* darray_fun2(649,10910
double* darray_fun3(661,11114
double* darray_cumsum(684,11543
double* darray_cumsum_m(692,11661
double* darray_cumsum2(707,11881
double darray_sum(728,12252
double darray_sum_n(737,12385
double darray_abssum(749,12559
double darray_sum_h(763,12807
double darray_centroid(776,13029
double darray_centroid_d(793,13288
void darray_linsum1(816,13847
void darray_linsum2(894,15576
double* darray_blocksum(979,17670
void darray_linsum1_part(1007,18198
void darray_linsum2_part(1106,20404
double darray_sqsum(1186,22354
double darray_norm(1197,22525
double darray_simscore(1202,22620
double* darray_blockmean(1232,23464
double* darray_shiftdim2(1288,24496
double darray_mean(1308,24843
double darray_mean_n(1313,24939
double darray_sum_d(1318,25045
double darray_mean_d(1328,25186
double darray_mean_d_m(1338,25343
double darray_var(1357,25651
double darray_cov(1376,25930
double* darray_malloc(1397,26260
double* darray_calloc(1407,26434
double* darray_malloc2(1416,26567
double* darray_malloc3(1422,26686
double* darray_copy(1428,26821
void darray_clean_edge3(1436,27007
void darray_printf(1449,27305
void darray_print2(1459,27479
void darray_fprint2(1477,27768
void darray_print3(1491,28029
int darray_write(1504,28283
double* darray_read(1521,28559
int darray_read2(1539,28879
int darray_fscanf(1556,29155
#define DARRAY_FSCANF(1558,29209
double* darray_load_matrix(1576,29522
double* darray_load_csv(1619,30301
void darraycpy(1661,31001
void darraycpy2(1666,31121
void darraycpy3(1684,31537
void darray_qsort(1714,32349
  #define  MAX_LEVELS 1716,32401
  #undef MAX_LEVELS1767,33347
int darray_binsearch(1770,33370
void darray_myqsort(1800,33869
double darray_uint8_corrcoef(1855,34819
double darray_corrcoef_m(1882,35334
double darray_corrcoef(1910,35877
double darray_corrcoef_n(1935,36338
fftw_complex* darray_fft(1973,37511
double* darray_ifft(2001,38313
double* darray_convolve(2031,39060
double* darray_avgsmooth(2080,40334
double* darray_curvature(2101,40873
double* darray_curvature(2122,41274
double* darray_cendiff(2169,42180
int darray_iszero(2183,42441
double* darray_contarray(2201,42739
void darray_reverse(2221,43008

tz_dimage_lib.c,1785
double* Cumsum_Image_D(19,361
fftw_complex* Image_FFT_D(98,2360
double *Image_IFFT_D(Image_IFFT_D122,2902
double* Convolve_Image_D(147,3541
double* Correlate_Image_D(191,4499
double* Normcorr_Image_D(200,4717
DMatrix* Gaussian_2D_Filter_D(312,7893
DMatrix* Mexihat_3D1_D(354,8833
DMatrix* Mexihat_2D_D(402,9895
#define FILTER_IMAGE_D(437,10711
DMatrix* Filter_Image_D(462,11600
DMatrix* Get_Double_Matrix3(508,12526
double* Get_Double_Array_Pad(561,13861
fftw_complex* Stack_FFT_D(615,15084
double* Stack_IFFT_D(636,15575
double* Convolve_Stack_D(666,16255
double* Correlate_Padstack_D(691,16888
#define CORRELATE_STACK_PART(748,18701
double* Correlate_Stack_Part_D(796,20600
#define STACK2_CORRELATE(825,21500
#undef STACK2_CORRELATE862,22423
#undef CORRELATE_STACK_PART866,22471
DMatrix* Normcorr_Stack_D(872,22637
DMatrix* Normcorr_Stack_White_D(1100,28137
DMatrix* Normcorr_Stack_Part_D(1244,31946
double Align_Stack_D(1412,36297
double Align_Stack_C_D(1435,36745
double Align_Stack_MR_D(1505,38580
DMatrix* Ring_Filter_D(1759,45624
DMatrix* Mexihat_3D_D(1803,46645
DMatrix* Gaussian_3D_Filter_D(1852,47790
static inline double gauss_d2_factor(1902,48942
DMatrix* Gaussian_3D_D2_Filter_D(1913,49308
DMatrix* Geo3d_Scalar_Field_To_Filter_D(1963,50484
#define FILTER_STACK_D(1987,51116
DMatrix* Filter_Stack_D(2021,52236
#define FILTER_STACK_FAST_D(2068,53234
DMatrix* Filter_Stack_Fast_D(2106,54666
DMatrix* Filter_Stack_Block_D(2315,59984
void Correct_Filter_Stack_D(2383,62081
DMatrix* El_Stack_D(2478,64558
DMatrix* El_Stack_D(2560,66552
DMatrix* El_Stack_D(2612,67845
DMatrix* El_Stack_L_D(2683,69772
DMatrix* El_Stack_D(2759,72052
Stack *Stack_Line_Paint_D(Stack_Line_Paint_D2794,73012
DMatrix* Stack_Pixel_Feature_D(2919,76417

tz_dmatrix.c,1824
static void dmatrix_error(22,379
static inline size_t dmatrix_asize(30,551
void Default_DMatrix(33,665
DEFINE_OBJECT_MANAGEMENT(39,740
DMatrix* Make_3d_DMatrix(63,1231
void DMatrix_Copy(73,1419
DMatrix* Crop_DMatrix(89,1882
#define MATRIX_BLOCK_STATE_INC(186,4178
void DMatrix_Copy_Block(201,4519
DMatrix* DMatrix_Blocksum(277,6921
DMatrix* DMatrix_Blocksum_Part(431,11076
DMatrix* DMatrix_Blocksum_Part2(547,13863
DMatrix* DMatrix_Blockmean(610,15419
DMatrix* DMatrix_Blockmean_Part(664,16564
void DMatrix_Print(705,17532
void DMatrix_Print_Part(742,18358
void DMatrix_Write(780,19368
DMatrix* DMatrix_Read(793,19731
double DMatrix_Max(814,20163
double DMatrix_Max_P(827,20446
void DMatrix_Clean_Edge(893,21889
double DMatrix_Scale(906,22135
DMatrix* darray2dmatrix(918,22396
DMatrix DMatrix_View_Array(943,22979
void DMatrix_Set_Zero(962,23279
DMatrix* Constant_DMatrix(972,23436
DMatrix* DMatrix_Zeros(984,23679
DMatrix* DMatrix_Ones(996,23934
DMatrix* DMatrix_Add(1001,24037
DMatrix* DMatrix_Addc(1012,24333
DMatrix* DMatrix_Sub(1020,24489
DMatrix* DMatrix_Subc(1031,24785
DMatrix* DMatrix_Mul(1039,24943
DMatrix* DMatrix_Div(1050,25239
DMatrix* DMatrix_Sqr(1062,25563
DMatrix* DMatrix_Sqrt(1070,25708
DMatrix* DMatrix_Negative(1078,25855
DMatrix* DMatrix_Max2(1089,26044
DMatrix* DMatrix_Min2(1101,26351
DMatrix* DMatrix_Partial_Diff(1113,26660
void DMatrix_Threshold(1165,27774
void DMatrix_Abs_Threshold(1176,27997
#define MATRIX_ABS 1187,28230
#undef MATRIX_ABS1188,28253
#define MATRIX_ABS 1189,28271
DMatrix* DMatrix_Eigen3_Coeff2(1192,28297
DMatrix* DMatrix_Eigen3_Coeff1(1207,28638
DMatrix* DMatrix_Eigen3_Coeff0(1225,29158
DMatrix* DMatrix_Eigen3_Coeffd(1245,29740
DMatrix* DMatrix_Eigen3_Solution_Score(1286,30852
DMatrix* DMatrix_Eigen3_Curvature(1342,32355

tz_double_linked_list.c,869
Double_List* Double_List_New(17,275
void Double_List_Set_Data(26,466
void Double_List_Removeall(37,708
void Double_List_Unlinkall(52,1004
void Kill_Double_List(61,1136
Double_List* Double_List_Add(76,1479
Double_List* Double_List_Add_Last(90,1807
void Double_List_Remove(107,2206
void Double_List_Remove_Last(116,2353
double Double_List_Unlink(135,2667
Double_List* Double_List_Next(154,2962
Double_List* Double_List_Last(163,3113
BOOL Double_List_Is_Empty(175,3278
int Double_List_Length(190,3516
double* Double_List_To_Array(212,4114
void Print_Double_List(257,4954
void Print_Double_List_Compact(277,5313
void Print_Double_List_F(286,5435
Double_List* Double_Queue_En(308,5863
double Double_Queue_De(321,6144
double Double_Queue_Peek(329,6334
void Double_Stack_Push(338,6473
double Double_Stack_Pop(348,6662
double Double_Stack_Peek(353,6740

tz_error.c,289
#define Error_Code 8,121
const static char *Error_Msg[Error_Msg10,148
const char* tz_errmsg(37,732
int Get_Error_Code(90,1660
#define Print_Exception(97,1723
void tz_error(103,1919
void tz_warn(110,2141
void Print_Exception(119,2391
void tz_error(124,2504
void tz_warn(131,2641

tz_farray.c,3082
#    undef HAVE_INLINE11,216
#    define INLINE_SUPPRESSED12,239
#    define HAVE_INLINE17,370
void farray_error(23,461
void farray_warning(31,626
float farray_max(38,784
float farray_max_l(56,1077
float farray_min(74,1341
float farray_min_l(92,1634
float farray_max_m(111,1940
float farray_max_ml(146,2457
float farray_min_m(178,2965
float farray_min_ml(210,3458
float* farray_abs(242,3966
float* farray_neg(252,4089
float* farray_add(262,4207
float* farray_addc(270,4335
float* farray_cadd(278,4452
float* farray_sub(284,4544
float* farray_subc(292,4665
float* farray_csub(300,4782
float* farray_mul(305,4873
float* farray_mulc(314,5000
float* farray_div(322,5118
float* farray_div_i(343,5495
float* farray_divc(362,5834
double farray_dot(376,6048
float* farray_sqr(388,6219
float* farray_sqrt(396,6330
float* farray_scale(417,6694
float* farray_max2(431,7050
float* farray_min2(444,7225
void farray_threshold(456,7399
float* farray_fun1(471,7802
float* farray_fun1_max(486,8069
float* farray_fun1_i2(519,8643
float* farray_fun1_i2_max(531,8872
float* farray_fun2(563,9424
float* farray_fun3(575,9624
float* farray_cumsum(598,10048
float* farray_cumsum_m(606,10164
float* farray_cumsum2(621,10382
float farray_sum(642,10750
float farray_abssum(652,10881
float farray_sum_h(666,11126
float farray_centroid(679,11346
double farray_centroid_d(696,11601
void farray_linsum1(719,12159
void farray_linsum2(797,13885
float* farray_blocksum(882,15975
void farray_linsum1_part(910,16500
void farray_linsum2_part(1009,18702
float* farray_blockmean(1098,21015
float* farray_shiftdim2(1154,22044
float farray_mean(1174,22388
double farray_sum_d(1180,22482
double farray_mean_d(1190,22622
double farray_mean_d_m(1200,22778
double farray_var(1219,23085
double farray_cov(1238,23363
float* farray_malloc(1259,23691
float* farray_calloc(1269,23862
float* farray_malloc2(1278,23992
float* farray_malloc3(1284,24110
float* farray_copy(1290,24244
void farray_clean_edge3(1298,24425
void farray_printf(1311,24722
void farray_print2(1321,24895
void farray_fprint2(1339,25183
void farray_print3(1353,25443
int farray_write(1366,25696
float* farray_read(1383,25970
int farray_read2(1401,26287
int farray_fscanf(1418,26561
#define FARRAY_FSCANF(1420,26614
float* farray_load_matrix(1438,26926
float* farray_load_csv(1481,27703
void farraycpy(1523,28401
void farraycpy2(1528,28518
void farraycpy3(1546,28931
void farray_qsort(1576,29740
  #define  MAX_LEVELS 1578,29791
  #undef MAX_LEVELS1629,30736
int farray_binsearch(1632,30759
void farray_myqsort(1662,31256
double farray_uint8_corrcoef(1717,32203
double farray_corrcoef_m(1744,32713
double farray_corrcoef(1772,33254
fftwf_complex* farray_fft(1809,34381
float* farray_ifft(1837,35189
float* farray_convolve(1867,35937
float* farray_avgsmooth(1916,37211
float* farray_curvature(1937,37746
float* farray_curvature(1958,38143
float* farray_cendiff(2005,39043
int farray_iszero(2019,39301
float* farray_contarray(2037,39616
void farray_reverse(2057,39883

tz_fftw.c,230
fftw_comp* fftw_complex_comp(32,779
void fftw_complete_2d(62,1465
fftw_complex* fftw_malloc_r2c_1d(82,1804
fftw_complex* fftw_malloc_r2c_2d(89,1954
fftw_complex* fftw_malloc_r2c_3d(95,2113
void fftw_pack_c2r_result(101,2282

tz_fftwf.c,240
fftwf_comp* fftwf_complex_comp(32,781
void fftwf_complete_2d(62,1476
fftwf_complex* fftwf_malloc_r2c_1d(82,1817
fftwf_complex* fftwf_malloc_r2c_2d(89,1973
fftwf_complex* fftwf_malloc_r2c_3d(95,2138
void fftwf_pack_c2r_result(101,2313

tz_fimage_lib.c,1772
float* Cumsum_Image_F(19,362
fftwf_complex* Image_FFT_F(98,2348
float *Image_IFFT_F(Image_IFFT_F122,2896
float* Convolve_Image_F(147,3538
float* Correlate_Image_F(191,4500
float* Normcorr_Image_F(200,4717
FMatrix* Gaussian_2D_Filter_F(312,7879
FMatrix* Mexihat_3D1_F(354,8819
FMatrix* Mexihat_2D_F(402,9881
#define FILTER_IMAGE_F(437,10697
FMatrix* Filter_Image_F(462,11582
FMatrix* Get_Float_Matrix3(508,12508
float* Get_Float_Array_Pad(561,13835
fftwf_complex* Stack_FFT_F(615,15053
float* Stack_IFFT_F(636,15550
float* Convolve_Stack_F(666,16234
float* Correlate_Padstack_F(691,16869
#define CORRELATE_STACK_PART(748,18678
float* Correlate_Stack_Part_F(796,20575
#define STACK2_CORRELATE(825,21472
#undef STACK2_CORRELATE862,22395
#undef CORRELATE_STACK_PART866,22443
FMatrix* Normcorr_Stack_F(872,22609
FMatrix* Normcorr_Stack_White_F(1100,28105
FMatrix* Normcorr_Stack_Part_F(1244,31910
float Align_Stack_F(1412,36256
float Align_Stack_C_F(1435,36701
float Align_Stack_MR_F(1505,38533
FMatrix* Ring_Filter_F(1759,45571
FMatrix* Mexihat_3D_F(1803,46592
FMatrix* Gaussian_3D_Filter_F(1852,47737
static inline double gauss_d2_factor(1902,48889
FMatrix* Gaussian_3D_D2_Filter_F(1913,49255
FMatrix* Geo3d_Scalar_Field_To_Filter_F(1963,50431
#define FILTER_STACK_F(1987,51063
FMatrix* Filter_Stack_F(2021,52179
#define FILTER_STACK_FAST_F(2068,53177
FMatrix* Filter_Stack_Fast_F(2106,54605
FMatrix* Filter_Stack_Block_F(2315,59934
void Correct_Filter_Stack_F(2383,62031
FMatrix* El_Stack_F(2478,64507
FMatrix* El_Stack_F(2560,66501
FMatrix* El_Stack_F(2612,67794
FMatrix* El_Stack_L_F(2683,69720
FMatrix* El_Stack_F(2759,72000
Stack *Stack_Line_Paint_F(Stack_Line_Paint_F2794,72960
FMatrix* Stack_Pixel_Feature_F(2919,76363

tz_fmatrix.c,1859
static void fmatrix_error(22,379
static inline size_t fmatrix_asize(30,551
void Default_FMatrix(33,664
DEFINE_OBJECT_MANAGEMENT(39,739
FMatrix* Make_3d_FMatrix(63,1227
void FMatrix_Copy(73,1415
FMatrix* Crop_FMatrix(89,1877
#define MATRIX_BLOCK_STATE_INC(186,4172
void FMatrix_Copy_Block(201,4513
FMatrix* FMatrix_Blocksum(277,6914
FMatrix* FMatrix_Blocksum_Part(431,11069
FMatrix* FMatrix_Blocksum_Part2(547,13854
FMatrix* FMatrix_Blockmean(610,15410
FMatrix* FMatrix_Blockmean_Part(664,16555
void FMatrix_Print(705,17523
void FMatrix_Print_Part(742,18349
void FMatrix_Write(780,19358
FMatrix* FMatrix_Read(793,19720
float FMatrix_Max(814,20151
float FMatrix_Max_P(827,20432
void FMatrix_Clean_Edge(893,21873
float FMatrix_Scale(906,22119
FMatrix* farray2fmatrix(918,22378
FMatrix* darray2fmatrix(945,23022
FMatrix FMatrix_View_Array(976,23777
void FMatrix_Set_Zero(995,24076
FMatrix* Constant_FMatrix(1005,24233
FMatrix* FMatrix_Zeros(1017,24475
FMatrix* FMatrix_Ones(1029,24730
FMatrix* FMatrix_Add(1034,24833
FMatrix* FMatrix_Addc(1045,25129
FMatrix* FMatrix_Sub(1053,25284
FMatrix* FMatrix_Subc(1064,25580
FMatrix* FMatrix_Mul(1072,25737
FMatrix* FMatrix_Div(1083,26033
FMatrix* FMatrix_Sqr(1095,26357
FMatrix* FMatrix_Sqrt(1103,26502
FMatrix* FMatrix_Negative(1111,26649
FMatrix* FMatrix_Max2(1122,26838
FMatrix* FMatrix_Min2(1134,27145
FMatrix* FMatrix_Partial_Diff(1146,27454
void FMatrix_Threshold(1198,28568
void FMatrix_Abs_Threshold(1209,28790
#define MATRIX_ABS 1220,29022
#undef MATRIX_ABS1221,29045
#define MATRIX_ABS 1222,29063
FMatrix* FMatrix_Eigen3_Coeff2(1225,29090
FMatrix* FMatrix_Eigen3_Coeff1(1240,29431
FMatrix* FMatrix_Eigen3_Coeff0(1258,29951
FMatrix* FMatrix_Eigen3_Coeffd(1278,30533
FMatrix* FMatrix_Eigen3_Solution_Score(1319,31645
FMatrix* FMatrix_Eigen3_Curvature(1375,33148

tz_geo3d_ball.c,386
Geo3d_Ball* New_Geo3d_Ball(14,256
void Delete_Geo3d_Ball(22,400
void Kill_Geo3d_Ball(27,460
void Geo3d_Ball_Default(32,531
void Geo3d_Ball_Copy(40,670
Geo3d_Ball* Copy_Geo3d_Ball(45,776
void Print_Geo3d_Ball(53,922
void Geo3d_Ball_Draw_Stack(59,1091
Geo3d_Scalar_Field* Geo3d_Ball_Field(106,2355
#define GEO3D_BALL_MEAN_SHIFT_EPS 128,2892
void Geo3d_Ball_Mean_Shift(130,2932

tz_geo3d_circle.c,693
Geo3d_Circle* New_Geo3d_Circle(17,319
void Delete_Geo3d_Circle(26,515
void Kill_Geo3d_Circle(31,583
void Geo3d_Circle_Default(36,664
void Geo3d_Circle_Copy(46,886
Geo3d_Circle* Copy_Geo3d_Circle(51,1000
void Print_Geo3d_Circle(59,1153
void Geo3d_Circle_Points(66,1418
void Geo3d_Circle_Rotate_Vector(91,2118
double Geo3d_Circle_Vector_Angle(110,2675
int Geo3d_Circle_Plane_Point(130,3289
int Geo3d_Unit_Circle_Plane_Point(160,4123
Geo3d_Circle_Array_Points(188,4818
Geo3d_Circle* Make_Geo3d_Circle_Array(256,7033
void Geo3d_Circle_Swc_Fprint(268,7296
void Geo3d_Circle_Swc_Fprint_T(274,7460
void Geo3d_Circle_Swc_Fprint_Z(291,7874
Swc_Node* Geo3d_Circle_To_Swc_Node(297,8065

tz_geo3d_cuboid.c,95
DEFINE_ZOBJECT_INTERFACE(5,76
void Clean_Geo3d_Cuboid(17,307
void Print_Geo3d_Cuboid(27,498

tz_geo3d_ellipse.c,688
Geo3d_Ellipse* New_Geo3d_Ellipse(10,224
void Delete_Geo3d_Ellipse(21,435
void Kill_Geo3d_Ellipse(26,507
void Default_Geo3d_Ellipse(31,593
void Geo3d_Ellipse_Copy(43,872
Geo3d_Ellipse* Copy_Geo3d_Ellipse(48,962
void Print_Geo3d_Ellipse(55,1123
void Geo3d_Ellipse_Center(64,1467
double Geo3d_Ellipse_Point_Distance(71,1646
Geo3d_Ellipse* Geo3d_Ellipse_Interpolate(100,2504
Swc_Node* Geo3d_Ellipse_To_Swc_Node(150,4318
coordinate_3d_t* Geo3d_Ellipse_Sampling(172,4811
void Geo3d_Ellipse_First_Vector(208,5742
void Geo3d_Ellipse_Second_Vector(219,6147
void Geo3d_Ellipse_Normal_Vector(230,6553
Geo3d_Ellipse_Array_Sampling(240,6834
double Geo3d_Ellipse_Vector_Angle(311,9061

tz_geo3d_point_array.c,482
void Geo3d_Point_Array_Copy(15,269
void Geo3d_Point_Array_Translate(21,415
void Geo3d_Point_Array_Rotate(32,637
void Geo3d_Point_Array_Scale(38,828
void Geo3d_Point_Array_Bend(49,1049
double** Geo3d_Point_Array_Distmat(69,1504
int Geo3d_Point_Array_Closest(102,2165
void Geo3d_Point_Array_Swc_Fprint(126,2711
DEFINE_ZOBJECT_INTERFACE(146,3185
void Clean_Geo3d_Point_Array(154,3322
void Print_Geo3d_Point_Array(160,3431
Geo3d_Point_Array* Make_Geo3d_Point_Array(170,3609

tz_geo3d_scalar_field.c,1605
void Stack_Fit_Score_Copy(23,436
void Fprint_Stack_Fit_Score(28,562
void Print_Stack_Fit_Score(42,868
void Stack_Fit_Score_Fwrite(47,965
Stack_Fit_Score* Stack_Fit_Score_Fread(60,1355
void reset_geo3d_scalar_field(72,1714
Geo3d_Scalar_Field* New_Geo3d_Scalar_Field(79,1843
void Delete_Geo3d_Scalar_Field(88,2073
Construct_Geo3d_Scalar_Field(94,2171
void Clean_Geo3d_Scalar_Field(114,2730
Geo3d_Scalar_Field* Make_Geo3d_Scalar_Field(121,2873
void Kill_Geo3d_Scalar_Field(129,3050
Resize_Geo3d_Scalar_Field(137,3203
Geo3d_Scalar_Field* Copy_Geo3d_Scalar_Field(162,3838
void Print_Geo3d_Scalar_Field(171,4150
void Print_Geo3d_Scalar_Field_Info(181,4437
Geo3d_Scalar_Field* Read_Geo3d_Scalar_Field(186,4565
void Write_Geo3d_Scalar_Field(204,5083
void Geo3d_Scalar_Field_Export_Visiocyte_Marker(219,5504
Geo3d_Scalar_Field *Geo3d_Scalar_Field_Import_Apo(Geo3d_Scalar_Field_Import_Apo238,5928
void Geo3d_Scalar_Field_Boundbox(294,7022
void Geo3d_Scalar_Field_Draw_Stack(312,7518
static double field_stack_fit_statistic(345,8312
double* Geo3d_Scalar_Field_Stack_Sampling(381,9135
double* Geo3d_Scalar_Field_Stack_Sampling_W(404,9690
double* Geo3d_Scalar_Field_Stack_Sampling_M(433,10388
double Geo3d_Scalar_Field_Stack_Score(455,10949
double Geo3d_Scalar_Field_Stack_Score_M(617,15356
Geo3d_Scalar_Field* Geo3d_Scalar_Field_Merge(755,19306
void Geo3d_Scalar_Field_Translate(781,20068
void Geo3d_Scalar_Field_Center(787,20238
void Geo3d_Scalar_Field_Centroid(808,20690
void Geo3d_Scalar_Field_Cov(837,21398
void Geo3d_Scalar_Field_Ort(875,22462
void Geo3d_Scalar_Field_Pca(883,22656

tz_geo3d_utils.c,1184
#    undef HAVE_INLINE10,179
#    define INLINE_SUPPRESSED11,202
#    define HAVE_INLINE17,357
#define TZ_DIST_3D_EPS 29,594
void Geo3d_Translate_Coordinate(42,1074
void Geo3d_Coordinate_Offset(58,1417
void Geo3d_Rotate_Coordinate(77,1869
void Geo3d_Orientation_Normal(98,2422
void Geo3d_Normal_Orientation(107,2646
void Geo3d_Coord_Orientation(115,2859
void Geo3d_Rotate_Orientation(130,3162
double Geo3d_Dot_Product(139,3470
void Geo3d_Cross_Product(145,3608
double Geo3d_Orgdist_Sqr(154,3823
double Geo3d_Orgdist(159,3915
double Geo3d_Dist_Sqr(164,4009
double Geo3d_Dist(174,4218
double Geo3d_Angle2(184,4426
void Geo3d_Lineseg_Break(205,4898
#define GEO3D_LINESEG_DIST2_EPS 214,5121
static int geo3d_line_line_dist(219,5249
static int geo3d_point_line_dist(274,6509
double Geo3d_Line_Line_Dist(303,7158
double Geo3d_Lineseg_Lineseg_Dist(348,8973
#  undef BREAK_IS_IN_RANGE393,10289
#define BREAK_IS_IN_RANGE(395,10323
double Geo3d_Lineseg_Dist2(484,13136
#  undef BREAK_IS_IN_RANGE531,14585
#define BREAK_IS_IN_RANGE(533,14619
#define GEO3D_POINT_LINESEG_EPS 597,16924
double Geo3d_Point_Lineseg_Dist(598,16972
void Geo3d_Cov_Orientation(674,19325

tz_geo3d_vector.c,354
void Set_Geo3d_Vector(15,251
void Copy_Geo3d_Vector(22,361
double Geo3d_Vector_Length_Square(29,485
double Geo3d_Vector_Length(34,603
void Geo3d_Vector_Orientation(39,704
void Geo3d_Vector_Normalize(62,1120
void Print_Geo3d_Vector(72,1299
double Geo3d_Vector_Distance(77,1397
double Geo3d_Vector_Dot(93,1773
double Geo3d_Vector_Angle2(107,2131

tz_geoangle_utils.c,63
double Normalize_Radian(14,238
double Radian_Normdiff(29,512

tz_geometry.c,136
double Vector_Angle(19,338
double DistancePointEllipseSpecial(54,797
Ellipse_Point_Distance(105,2231
BOOL Point_In_Ellipse(208,4510

tz_graph.c,1970
#define GROWTH_FACTOR 21,402
Graph* New_Graph(23,427
void Delete_Graph(37,715
void Construct_Graph(42,767
void Clean_Graph(66,1400
Graph* Make_Graph(82,1660
void Kill_Graph(89,1836
Graph* Copy_Graph(95,1914
void Print_Graph(115,2427
void Print_Graph_Info(144,3032
BOOL Graph_Is_Directed(156,3275
void Graph_Set_Directed(161,3350
BOOL Graph_Is_Weighted(173,3608
void Graph_Set_Weighted(182,3726
static void graph_edge_grow(196,4039
void Graph_Add_Edge(236,5356
void Graph_Add_Weighted_Edge(257,5805
void Graph_Remove_Edge(266,6003
void Graph_Remove_Edge_List(282,6448
int Graph_Remove_Vertex(317,7178
void Graph_Update_Edge_Table(341,7685
void Graph_Expand_Edge_Table(366,8346
int Graph_Edge_Index(383,8868
int Graph_Edge_Index_U(398,9163
void Graph_Insert_Node(408,9348
void Graph_Normalize_Edge(424,9708
void Graph_Remove_Duplicated_Edge(439,10019
int Graph_Edge_Count(460,10588
double** Graph_Weight_Matrix(476,10917
int* Graph_Degree(520,11874
int* Graph_In_Degree(546,12471
int* Graph_Out_Degree(575,13143
int** Graph_Adjmat(605,13853
int** Graph_Neighbor_List(650,15038
int** Graph_Child_List(692,16302
void Graph_Cut_Leaves(734,17505
void Graph_Prune(756,17985
int* Graph_Shortest_Path(791,18827
int* Graph_Shortest_Path_E(917,21782
int* Graph_Shortest_Path_Maxmin(1017,24052
void Graph_To_Mst(1120,26442
#define GRAPH_MST_CHANGE_TREE_ID(1141,26996
void Graph_To_Mst2(1154,27317
Graph* Graph_Connected_Subgraph(1254,29851
Graph* Graph_Main_Subgraph(1360,32604
Arrayqueue Graph_Traverse_B(1401,33492
void Graph_To_Dot_File(1442,34487
int* Graph_Toposort(1476,35227
void Graph_Clean_Root(1523,36313
void Graph_Move_Edge(1575,37552
void Graph_Mwt(1591,37956
#define GHM_SUB_TO_IND(1678,40273
#define GHM_MATRIX_VALUE_FROM_IND(1679,40324
int construct_edge_loop(1681,40403
double loop_match_score(1711,40934
void correct_match(1725,41228
#define LARGE_WEIGHT 1742,41657
BOOL** Graph_Hungarian_Match(1745,41740

tz_graph_utils.c,490
void Graph_Wmat_Neighbor_List(17,300
void Graph_Edge_Neighbor_List(35,690
void Graph_Edge_Child_List(61,1529
static int extract_min_b(81,2084
void Graph_Shortest_Path_From_Adjmat(108,2472
void Graph_Print_Path(151,3510
int Graph_Mst_From_Adjmat(162,3743
BOOL Is_Adjmat_Connected(257,6761
int* Adjmat_Isolate(287,7328
#define ADJMAT_HUNGARIAN_IS_ZERO(324,7976
#define ADJMAT_HUNGARIAN_IS_EQUAL(325,8025
#define ADJMAT_HUNGARIAN_COMPARE(326,8096
double Adjmat_Hungarian(327,8163

tz_graph_workspace.c,513
Graph_Workspace* New_Graph_Workspace(15,336
void Free_Graph_Workspace(48,1076
#define CLEAN_GRAPH_WORKSPACE_FIELD(53,1140
void Clean_Graph_Workspace(59,1282
void Kill_Graph_Workspace(80,1774
void Graph_Workspace_Load(90,1904
void Graph_Workspace_Reload(96,2036
void Graph_Workspace_Prepare(104,2200
void Graph_Workspace_Alloc(167,4173
BOOL Graph_Workspace_Allocated(188,4669
BOOL Graph_Workspace_Ready(193,4797
void Graph_Workspace_Set_Readiness(198,4917
void Graph_Workspace_Set_Allocation(204,5064

tz_gsl_linalg.c,91
void Gsl_Linalg_Invert(22,381
void Gsl_Matrix_Sycom(40,697
void Mat3d_Eigen_Coef(55,880

tz_iarray.c,2730
#    undef HAVE_INLINE11,216
#    define INLINE_SUPPRESSED12,239
#    define HAVE_INLINE17,370
void iarray_error(22,437
void iarray_warning(30,602
int iarray_max(37,760
int iarray_max_l(55,1049
int iarray_min(73,1309
int iarray_min_l(91,1598
int iarray_max_m(110,1900
int iarray_max_ml(145,2413
int iarray_min_m(177,2917
int iarray_min_ml(209,3406
int* iarray_abs(241,3910
int* iarray_neg(251,4028
int* iarray_add(261,4142
int* iarray_addc(269,4264
int* iarray_cadd(277,4375
int* iarray_sub(283,4461
int* iarray_subc(291,4576
int* iarray_csub(299,4687
int* iarray_mul(304,4772
int* iarray_mulc(313,4893
int* iarray_div(321,5005
int* iarray_div_i(342,5368
int* iarray_divc(361,5699
double iarray_dot(375,5903
int* iarray_sqr(387,6070
int* iarray_sqrt(395,6177
int* iarray_scale(416,6537
int* iarray_max2(430,6879
int* iarray_min2(443,7048
void iarray_threshold(455,7216
int* iarray_fun1(470,7613
int* iarray_fun1_max(485,7872
int* iarray_fun1_i2(518,8432
int* iarray_fun1_i2_max(530,8653
int* iarray_fun2(562,9193
int* iarray_fun3(574,9385
int* iarray_cumsum(597,9799
int* iarray_cumsum_m(605,9911
int* iarray_cumsum2(620,10125
int iarray_sum(641,10487
int iarray_abssum(651,10612
int iarray_sum_h(665,10850
int iarray_centroid(678,11066
double iarray_centroid_d(697,11376
void iarray_linsum1(720,11932
void iarray_linsum2(798,13652
int* iarray_blocksum(883,15734
void iarray_linsum1_part(911,16253
void iarray_linsum2_part(1010,18447
int* iarray_blockmean(1099,20756
int* iarray_shiftdim2(1155,21779
int iarray_mean(1175,22117
double iarray_sum_d(1181,22205
double iarray_mean_d(1191,22343
double iarray_mean_d_m(1201,22497
double iarray_var(1220,22802
double iarray_cov(1239,23078
int* iarray_malloc(1260,23402
int* iarray_calloc(1270,23567
int* iarray_malloc2(1279,23691
int* iarray_malloc3(1285,23807
int* iarray_copy(1291,23939
void iarray_clean_edge3(1299,24110
void iarray_printf(1312,24405
void iarray_print2(1322,24576
void iarray_fprint2(1340,24860
void iarray_print3(1354,25116
int iarray_write(1367,25367
int* iarray_read(1384,25637
int iarray_read2(1402,25948
int iarray_fscanf(1419,26218
#define IARRAY_FSCANF(1421,26269
int* iarray_load_matrix(1439,26581
int* iarray_load_csv(1482,27354
void iarraycpy(1524,28049
void iarraycpy2(1529,28160
void iarraycpy3(1547,28567
void iarray_qsort(1577,29370
  #define  MAX_LEVELS 1579,29419
  #undef MAX_LEVELS1630,30362
int iarray_binsearch(1633,30385
void iarray_myqsort(1663,30878
double iarray_uint8_corrcoef(1718,31819
double iarray_corrcoef_m(1745,32319
double iarray_corrcoef(1773,32856
int iarray_iszero(1801,33314
int* iarray_contarray(1819,33621
void iarray_reverse(1839,33884

tz_iimage_lib.c,33
IMatrix* Get_Int_Matrix3(11,210

tz_image_array.c,718
#define DEFINE_IMAGE_ARRAY(16,287
#define DEFINE_IMAGE_ARRAY_ALL(19,414
#define IMAGE_ARRAY_MAX_INDEX(24,623
#define IMAGE_ARRAY_MAX_INDEX_M(32,818
int Image_Array_Max_Index(54,1413
int Image_Array_Max_Index_M(59,1546
#define IMAGE_ARRAY_MIN_INDEX(84,2120
#define IMAGE_ARRAY_MIN_INDEX_M(92,2315
int Image_Array_Min_Index(114,2910
int Image_Array_Min_Index_M(119,3043
#define IMAGE_ARRAY_MINMAX_INDEX(144,3617
#define IMAGE_ARRAY_MINMAX_INDEX_M(156,3954
void Image_Array_Minmax_Index(183,4725
void Image_Array_Minmax_Index_M(189,4887
#define IMAGE_ARRAY_HIST_M(210,5447
int* Image_Array_Hist(238,6359
int* Image_Array_Hist_M(244,6502
double Image_Array_Sum(271,7086
double Image_Array_Mean(289,7457

tz_image_attribute.c,124
int Image_Channel_Number(12,169
int Image_Pixel_Number(21,292
int Image_Pixel_Bsize(26,379
int Image_Array_Bsize(31,448

tz_image_code.c,636
#define NEIGHBOR_LABEL 20,369
#define BRANCH_LABEL 21,398
#define TRUE 22,425
#define FALSE 23,440
#define STACK_LABEL_OBJECT_RECOVER_CHORD25,457
#undef STACK_LABEL_OBJECT_RECOVER_CHORD27,537
void Set_Chkcon(37,801
int Get_Chkcon(42,857
void Set_Connection(54,1088
int Get_Con2d(60,1180
Image* Image_Level_Code(78,1774
Image* Image_Branch_Code(130,3127
Stack* Stack_Level_Code(183,4517
Stack* Stack_Level_Code_Constraint(224,5405
Stack* Stack_Branch_Code(279,6884
Level_Code* Stack_Region_Grow(332,8281
int Stack_Label_Object(464,11415
int Stack_Label_Object_Constraint(542,13388
Stack* Stack_Boundary_Code(627,15119

tz_image_disp.c,102
static Image* image_to_imdata(20,375
ImlibImage* lim_load_image(36,671
void Display_Image(109,2146

tz_image_io.c,1340
#define __USE_BSD9,123
static int lsm_thumbnail_flag(21,387
static inline unsigned int get_integer_tag(35,676
static void image_ifd_size(65,1276
Image* Read_Raw(90,1938
int Is_Tiff(119,2654
static void sprint_file_bundle_sc(129,2856
int Is_Fbdf(150,3507
int Is_Lsm(160,3709
int Is_Raw(170,3910
#define FB_PREFIX_LENGTH 180,4111
#define FB_SUFFIX_LENGTH 181,4140
void initfb(183,4169
void freefb(189,4307
int Load_Fbdf(204,4627
void Tiff_Size(257,5554
void Lsm_Size(300,6404
void Stack_Size_F(341,7170
void Print_Tiff_Info(383,8064
void Print_Lsm_Info(439,9500
Stack *Read_Lsm_Stack(Read_Lsm_Stack711,16081
void Write_Lsm_Stack(828,18583
void Write_Raw_Stack(889,19869
Stack* Read_Raw_Stack_C(932,20803
Stack* Read_Raw_Stack(1021,22900
Stack* Read_Raw_Stack_Slice(1026,22990
Stack* Read_Stack_U(1107,24943
Stack* Read_Xml_Stack(1129,25498
void Write_Stack_U(1145,25841
Mc_Stack* Read_Mc_Stack(1174,26546
Stack* Read_Sc_Stack(1336,30483
Tiff_Image* Mc_Stack_Tiff_Image(1457,33172
void Write_Mc_Stack(1495,34226
void Fix_Lsm_File(1598,36908
File_Bundle_S *Parse_Stack_Name_S(Parse_Stack_Name_S1659,38150
static void Sprint_File_Bundle_S(1698,39065
Stack *Read_Stack_Planes_S(Read_Stack_Planes_S1708,39394
void Clean_File_Bundle_S(1747,40163
Stack *Read_Stack_Planes_Sc(Read_Stack_Planes_Sc1760,40395

tz_image_lib.c,697
uint8* Unpack_Image(33,714
int Get_Pixel_Number(49,960
double* Get_Double_Array(58,1187
float* Get_Float_Array(94,2099
#define IMAGE_REAL_ARRAY(127,2900
double* Image_Double_Array(132,3034
float* Image_Float_Array(169,3797
Image* Scale_Float_Image(211,4717
Image* Scale_Double_Image(255,5873
void Print_Image_Info(316,7470
void Zero_Image(327,7702
void Copy_Image_Array(357,8324
Image* Crop_Image(371,8677
double* Cumsum_Image(436,10307
Image* Reflect_Image(513,12173
void Print_Image_Value(582,14082
Image* Resize_Image(619,14899
int* Image_Hist_M(658,15845
int* Image_Hist(732,17630
void Empty_Image(738,17702
BOOL Is_Image_Empty(750,17861
Image* Image_Block_Sum(762,18079

tz_image_relation.c,120
BOOL Image_Same_Size(9,135
BOOL Image_Same_Kind(18,333
BOOL Image_Same_Attribute(27,501
BOOL Image_Identical(37,725

tz_image_trans.c,72
Mc_Stack Mc_Stack_View_Stack(8,146
Mc_Stack* Stack_To_Mc_Stack(21,431

tz_imatrix.c,1754
static void imatrix_error(22,379
static inline size_t imatrix_asize(30,551
void Default_IMatrix(33,662
DEFINE_OBJECT_MANAGEMENT(39,737
IMatrix* Make_3d_IMatrix(63,1219
void IMatrix_Copy(73,1407
IMatrix* Crop_IMatrix(89,1867
#define MATRIX_BLOCK_STATE_INC(186,4160
void IMatrix_Copy_Block(201,4501
IMatrix* IMatrix_Blocksum(277,6900
IMatrix* IMatrix_Blocksum_Part(431,11055
IMatrix* IMatrix_Blocksum_Part2(547,13836
IMatrix* IMatrix_Blockmean(610,15392
IMatrix* IMatrix_Blockmean_Part(664,16537
void IMatrix_Print(705,17505
void IMatrix_Print_Part(742,18331
void IMatrix_Write(780,19336
IMatrix* IMatrix_Read(793,19696
int IMatrix_Max(814,20125
int IMatrix_Max_P(827,20402
void IMatrix_Clean_Edge(893,21839
int IMatrix_Scale(906,22085
IMatrix* iarray2imatrix(918,22340
IMatrix* darray2imatrix(945,22980
IMatrix IMatrix_View_Array(976,23730
void IMatrix_Set_Zero(995,24027
IMatrix* Constant_IMatrix(1005,24184
IMatrix* IMatrix_Zeros(1017,24424
IMatrix* IMatrix_Ones(1029,24679
IMatrix* IMatrix_Add(1034,24782
IMatrix* IMatrix_Addc(1045,25078
IMatrix* IMatrix_Sub(1053,25231
IMatrix* IMatrix_Subc(1064,25527
IMatrix* IMatrix_Mul(1072,25682
IMatrix* IMatrix_Div(1083,25978
IMatrix* IMatrix_Sqr(1095,26302
IMatrix* IMatrix_Sqrt(1103,26447
IMatrix* IMatrix_Negative(1111,26594
IMatrix* IMatrix_Max2(1122,26783
IMatrix* IMatrix_Min2(1134,27090
IMatrix* IMatrix_Partial_Diff(1146,27399
void IMatrix_Threshold(1198,28513
#define MATRIX_ABS 1210,28734
IMatrix* IMatrix_Eigen3_Coeff2(1213,28759
IMatrix* IMatrix_Eigen3_Coeff1(1228,29100
IMatrix* IMatrix_Eigen3_Coeff0(1246,29620
IMatrix* IMatrix_Eigen3_Coeffd(1266,30202
IMatrix* IMatrix_Eigen3_Solution_Score(1307,31314
IMatrix* IMatrix_Eigen3_Curvature(1363,32817

tz_int_arraylist.c,1192
const static int Growth_Coeff 16,245
static void int_arraylist_grow(24,408
void Print_Int_Arraylist(49,1126
Int_Arraylist* New_Int_Arraylist(61,1357
Int_Arraylist* Int_Arraylist_New(74,1687
void Int_Arraylist_Free(101,2282
Int_Arraylist* Make_Int_Arraylist(107,2358
void Kill_Int_Arraylist(128,2845
Int_Arraylist* Int_Arraylist_Wrap(134,2921
int Int_Arraylist_At(149,3200
int Int_Arraylist_Last(154,3287
int* Int_Arraylist_At_R(159,3373
void Int_Arraylist_Add(171,3630
void Int_Arraylist_Insert(180,3784
int Int_Arraylist_Take(195,4110
void Int_Arraylist_Set(205,4318
void Int_Arraylist_Swap(226,4741
int Int_Heap_Depth(245,5172
int Int_Heap_Node_At(266,5631
void Print_Int_Heap(285,5945
int Int_Heap_Parent(307,6493
int Int_Heap_Leftchild(324,6918
int Int_Heap_Small_Child(345,7404
void Int_Heap_Add(364,7803
int Int_Heap_Remove(392,8477
#define PARENT_INDEX(413,8975
BOOL Verify_Int_Heap(422,9082
int Int_Heap_Small_Child_I(436,9358
void Int_Heap_Add_I(450,9660
void Int_Heap_Update_I(475,10388
int Int_Heap_Remove_I(493,10965
int Int_Heap_Remove_I_At(519,11716
void Print_Int_Heap_I(551,12624
int Verify_Int_Heap_I(567,12941
void Int_Heap_Sort(599,13622

tz_int_doubly_linked_list.c,714
#undef _DEBUG_13,191
Int_Dlist* Int_Dlist_New(19,287
void Int_Dlist_Remove_All(32,521
void Int_Dlist_Set_Data(47,738
Int_Dlist *Int_Dlist_Head(Int_Dlist_Head52,809
Int_Dlist *Int_Dlist_Tail(Int_Dlist_Tail65,977
Int_Dlist* Int_Dlist_Next(78,1145
int Int_Dlist_Length(94,1433
Int_Dlist* Locate_Int_Dlist(125,1956
Int_Dlist* Append_Int_Dlist(152,2356
Int_Dlist* Int_Dlist_Remove_End(174,2646
Int_Dlist* Int_Dlist_Remove_Node(208,3214
Int_Dlist* Int_Dlist_Add(244,3868
void Int_Dlist_Insert(280,4562
int Int_Dlist_Unlink(304,5020
BOOL Int_Dlist_Is_Empty(319,5227
int* Int_Dlist_To_Array(339,5813
void Print_Int_Dlist(384,6637
void Print_Int_Dlist_Compact(404,6994
void Print_Int_Dlist_F(413,7112

tz_int_histogram.c,772
int Int_Histogram_Length(14,226
int Int_Histogram_Min(19,291
int Int_Histogram_Max(24,353
int Int_Histogram_Quantile(29,429
int* Int_Histogram_Array(53,799
const int* Int_Histogram_Const_Array(58,859
#define INT_HISTOGRAM_VALIDATE_RANGE(63,937
void Print_Int_Histogram(75,1239
void Int_Histogram_Range(94,1540
double Int_Histogram_Slope(107,1761
int Int_Histogram_Mode(133,2390
int* Int_Histogram_Diff(163,2902
int Int_Histogram_Triangle_Threshold(178,3192
int Int_Histogram_Triangle_Threshold2(256,5066
int Int_Histogram_Triangle_Threshold2(343,7070
int Int_Histogram_Rc_Threshold(422,8962
int Int_Histogram_Stable_Point(462,9637
int* Int_Histogram_Equalize(503,10391
int* Int_Histogram_Equal_Map(527,10954
int* Int_Histogram_Equal_Info_Map(578,12070

tz_int_linked_list.c,760
Int_List* Int_List_New(17,263
void Int_List_Set_Data(26,436
void Int_List_Removeall(37,666
void Int_List_Unlinkall(52,950
void Kill_Int_List(61,1073
Int_List* Int_List_Add(76,1404
Int_List* Int_List_Add_Last(90,1708
void Int_List_Remove(107,2080
void Int_List_Remove_Last(116,2218
int Int_List_Unlink(135,2517
Int_List* Int_List_Next(154,2794
Int_List* Int_List_Last(163,2933
BOOL Int_List_Is_Empty(175,3083
int Int_List_Length(190,3312
int* Int_List_To_Array(212,3901
void Print_Int_List(257,4708
void Print_Int_List_Compact(277,5049
void Print_Int_List_F(286,5165
Int_List* Int_Queue_En(308,5581
int Int_Queue_De(321,5838
int Int_Queue_Peek(329,6013
void Int_Stack_Push(338,6143
int Int_Stack_Pop(348,6314
int Int_Stack_Peek(353,6380

tz_interface.c,23
int Input_Dialog(5,65

tz_intpair_map.c,667
Intpair_Map_Entry* New_Intpair_Map_Entry(7,111
void Delete_Intpair_Map_Entry(19,390
Intpair_Map* New_Intpair_Map(24,466
Intpair_Map* Make_Intpair_Map(29,533
void Reset_Intpair_Map(47,942
void Clean_Intpair_Map(68,1359
void Delete_Intpair_Map(77,1517
void Kill_Intpair_Map(82,1577
void Intpair_Map_Set_Base(88,1675
static int intpair_map_code(98,1856
int Intpair_Map_Value(103,1971
int Intpair_Map_Add(120,2330
int Intpair_Map_Remove(160,3131
void Intpair_Map_Refresh(201,3938
void Print_Intpair_Map_Entry(206,3989
void Print_Intpair_Map(213,4193
void Intpair_Map_Iterator_Start(231,4652
Intpair_Map_Entry *Intpair_Map_Next(Intpair_Map_Next236,4738

tz_local_bifold_neuroseg.c,671
Local_Bifold_Neuroseg* New_Local_Bifold_Neuroseg(16,302
void Delete_Local_Bifold_Neuroseg(26,556
void Set_Local_Bifold_Neuroseg(31,640
void Reset_Local_Bifold_Neuroseg(43,1041
void Print_Local_Bifold_Neuroseg(49,1191
double Local_Bifold_Neuroseg_Score(59,1654
int Local_Bifold_Neuroseg_Var(72,2011
void Local_Bifold_Neuroseg_Set_Var(81,2239
Local_Bifold_Neuroseg_Field(90,2481
int Local_Bifold_Neuroseg_Param_Array(99,2766
int Local_Bifold_Neuroseg_Var_Mask_To_Index(114,3162
void Local_Bifold_Neuroseg_Validate(128,3540
double Local_Bifold_Neuroseg_Score_G(134,3741
double Local_Bifold_Neuroseg_Score_Gv(151,4193
double Fit_Local_Bifold_Neuroseg(156,4342

tz_local_neuroseg.c,5953
#    undef HAVE_INLINE12,181
#    define INLINE_SUPPRESSED13,204
#    define HAVE_INLINE21,426
Local_Neuroseg* New_Local_Neuroseg(56,1252
void Delete_Local_Neuroseg(66,1469
void Kill_Local_Neuroseg(71,1541
void Set_Local_Neuroseg(76,1628
void Default_Local_Neuroseg(87,1991
Local_Neuroseg* Copy_Local_Neuroseg(97,2156
void Local_Neuroseg_Copy(105,2347
void Fprint_Local_Neuroseg(111,2505
void Print_Local_Neuroseg(122,2761
Local_Neuroseg *Local_Neuroseg_Import_Xml(Local_Neuroseg_Import_Xml127,2863
void Local_Neuroseg_Fwrite(190,4709
Local_Neuroseg* Local_Neuroseg_Fread(200,4936
void Write_Local_Neuroseg_Array(230,5510
Local_Neuroseg* Read_Local_Neuroseg_Array(248,5948
void Local_Neuroseg_Axis_Position(272,6449
void Local_Neuroseg_Axis_Coord_N(281,6744
void Local_Neuroseg_Center(287,6916
void Local_Neuroseg_Top(296,7191
void Local_Neuroseg_Bottom(305,7452
void  Set_Neuroseg_Position(325,8062
void  Get_Neuroseg_Position(374,9348
void Local_Neuroseg_Normal(379,9483
BOOL Local_Neuroseg_Hit_Test(392,9886
BOOL Local_Neuroseg_Hit_Test2(413,10523
const static double Min_Axis_Dist 451,11541
BOOL Local_Neuroseg_Axis_Test(453,11584
BOOL Local_Neuroseg_Contain_Axis(491,12452
void Local_Neuroseg_Stack_Position(508,12863
Stack* Local_Neuroseg_Substack(514,13044
double Local_Neuroseg_Score_P(548,13973
double Local_Neuroseg_Score_Pm(565,14557
double Local_Neuroseg_Score_W(581,15160
void Local_Neuroseg_Draw_Stack(600,15701
void Local_Neuroseg_Label(615,16122
BOOL Local_Neuroseg_Has_Stack_Value(751,19967
void Local_Neuroseg_Label_G(827,21760
void Local_Neuroseg_Label_C(913,23788
void Local_Neuroseg_Label_W(984,25670
int Local_Neuroseg_Var_Mask_To_Index(1179,30709
int Local_Neuroseg_Var_Mask_To_Index_R(1193,31073
int Local_Neuroseg_Var(1213,31769
void Local_Neuroseg_Set_Var(1221,31966
void Local_Neuroseg_Set_Var_W(1228,32154
void Local_Neuroseg_Validate(1236,32371
double Fit_Local_Neuroseg_Pr_M(1253,32821
double Fit_Local_Neuroseg_Pr(1324,34688
double Fit_Local_Neuroseg_P(1396,36661
double Fit_Local_Neuroseg_Pm(1406,37042
double Fit_Local_Neuroseg_W(1417,37456
double Local_Neuroseg_Orientation_Search(1476,39096
double Local_Neuroseg_Orientation_Search_C(1600,42301
double Local_Neuroseg_Orientation_Search_B(1658,43896
void Local_Neuroseg_Orientation_Adjust(1725,45828
double Local_Neuroseg_Position_Search(1755,46662
double Local_Neuroseg_Radius_Search(1788,47537
double Local_Neuroseg_Scale_Search(1818,48255
double Local_Neuroseg_R_Scale_Search(1847,48949
void Local_Neuroseg_Position_Adjust(1890,50090
int Local_Neuroseg_Height_Search_P(1911,50659
int Local_Neuroseg_Height_Search_W(2042,53699
int Local_Neuroseg_Height_Search_E(2069,54300
BOOL Local_Neuroseg_Good_Score(2095,54927
Local_Neuroseg* Next_Local_Neuroseg(2104,55160
void Flip_Local_Neuroseg(2121,55606
void Local_Neuroseg_Fprint_Vrml(2147,56184
static void local_neuroseg_field_shift(2198,57726
Geo3d_Scalar_Field* Local_Neuroseg_Field_S(2227,58435
Geo3d_Scalar_Field* Local_Neuroseg_Field_Sp(2241,58834
Geo3d_Scalar_Field* Local_Neuroseg_Field_Z(2254,59221
Geo3d_Ball* Local_Neuroseg_Ball_Bound(2268,59631
void Local_Neuroseg_From_Geo3d_Circle(2281,59914
double* Local_Neuroseg_Height_Profile(2293,60288
int Local_Neuroseg_Param_Array(2321,60976
int Local_Neuroseg_Param_Array_W(2336,61326
double Local_Neuroseg_Score_G(2351,61701
double Local_Neuroseg_Score_Gw(2368,62097
double Local_Neuroseg_Score_Gvw(2386,62539
double Local_Neuroseg_Score_Gv(2391,62683
double Local_Neuroseg_Score_R(2396,62818
double Local_Neuroseg_Score_Gvm(2419,63386
Local_Neuroseg_Plane* Local_Neuroseg_To_Plane(2439,63845
Local_Neuroseg* Local_Neuroseg_From_Plane(2461,64431
Geo3d_Circle* Local_Neuroseg_To_Circle(2476,64847
Local_Neuroseg_To_Circle_Z(2508,65658
Local_Neuroseg_To_Circle_T(2537,66481
Local_Neuroseg_To_Ellipse_Z(2546,66724
Local_Neuroseg_To_Ellipse_T(2569,67350
Local_Neuroseg_Central_Ellipse(2578,67586
Local_Neuroseg_Halo_Points(2586,67804
void Local_Neuroseg_Scale_Z(2604,68260
void Local_Neuroseg_Scale_XY(2632,69324
void Local_Neuroseg_Scale(2669,70399
void Local_Neuroseg_Change_Top(2709,71618
void Local_Neuroseg_Change_Bottom(2738,72332
void Local_Neuroseg_Set_Bottom_Top(2766,73001
void Local_Neuroseg_Change_Height(2791,73623
void Local_Neuroseg_Break_Gap(2796,73735
void Local_Neuroseg_Chop(2832,74619
void Local_Neuroseg_Chop(2853,75205
double Local_Neuroseg_Average_Signal(2873,75848
double Local_Neuroseg_Average_Weak_Signal(2883,76117
void Local_Neuroseg_To_Geo3d_Ellipse_Z(2944,77879
void Local_Neuroseg_To_Ellipse(2957,78297
int Local_Neuroseg_Stack_Feature(2977,78816
double Local_Neuroseg_Optimize(3049,80566
double Local_Neuroseg_Optimize_W(3135,82782
double Local_Neuroseg_Array_Maxr(3166,83541
int Local_Neuroseg_Hit_Mask(3180,83826
double Local_Neuroseg_Center_Sample(3231,84894
double Local_Neuroseg_Top_Sample(3241,85175
double Local_Neuroseg_Planar_Dist(3265,85738
double Local_Neuroseg_Planar_Dist_L(3282,86198
void Local_Neuroseg_Stretch(3296,86594
void Local_Neuroseg_Swc_Fprint(3325,87487
void Local_Neuroseg_Swc_Fprint_T(3331,87669
double Local_Neuroseg_Point_Dist(3344,88175
double Local_Neuroseg_Lineseg_Dist(3414,90013
double Local_Neuroseg_Dist2(3454,91052
double Local_Neuroseg_Lineseg_Dist_S(3465,91351
double Local_Neuroseg_Point_Dist_S(3515,92567
#define LOCAL_NEUROSEG_STACK(3642,95756
Stack* Local_Neuroseg_Stack(3664,96493
void Local_Neuroseg_Rotate(3723,97806
void Local_Neuroseg_Translate(3729,97977
double Local_Neuroseg_Intersect(3736,98151
#define LOCAL_NEUROSEG_FIX_ON_EPS 3756,98637
Neuropos_Reference_e Local_Neuroseg_Fixon(3758,98677
#define LOCAL_NEUROSEG_TANGENT_COMPARE_EPS 3787,99417
int Local_Neuroseg_Tangent_Compare(3789,99466
double *Locseg_Conn_Feature(Locseg_Conn_Feature3847,101098
double Local_Neuroseg_Zscore(3924,103344
Local_Neuroseg* Local_Neuroseg_From_Field(3935,103597

tz_local_neuroseg_doubly_linked_list.c,1072
#undef _DEBUG_13,202
Local_Neuroseg_Dlist* Local_Neuroseg_Dlist_New(19,331
void Local_Neuroseg_Dlist_Remove_All(32,631
void Local_Neuroseg_Dlist_Set_Data(50,946
Local_Neuroseg_Dlist *Local_Neuroseg_Dlist_Head(Local_Neuroseg_Dlist_Head55,1052
Local_Neuroseg_Dlist *Local_Neuroseg_Dlist_Tail(Local_Neuroseg_Dlist_Tail68,1264
Local_Neuroseg_Dlist* Local_Neuroseg_Dlist_Next(81,1476
int Local_Neuroseg_Dlist_Length(97,1797
Local_Neuroseg_Dlist* Locate_Local_Neuroseg_Dlist(128,2364
Local_Neuroseg_Dlist* Append_Local_Neuroseg_Dlist(155,2808
Local_Neuroseg_Dlist* Local_Neuroseg_Dlist_Remove_End(177,3186
Local_Neuroseg_Dlist* Local_Neuroseg_Dlist_Remove_Node(211,3842
Local_Neuroseg_Dlist* Local_Neuroseg_Dlist_Add(247,4584
void Local_Neuroseg_Dlist_Insert(283,5390
Local_Neuroseg_P Local_Neuroseg_Dlist_Unlink(307,5938
BOOL Local_Neuroseg_Dlist_Is_Empty(322,6207
Local_Neuroseg_P* Local_Neuroseg_Dlist_To_Array(342,6826
void Print_Local_Neuroseg_Dlist(387,7779
void Print_Local_Neuroseg_Dlist_Compact(411,8280
void Print_Local_Neuroseg_Dlist_F(420,8420

tz_local_neuroseg_ellipse.c,2005
const double Delta[Delta27,601
Local_Neuroseg_Ellipse* New_Local_Neuroseg_Ellipse(30,686
void Delete_Local_Neuroseg_Ellipse(40,949
void Set_Local_Neuroseg_Ellipse(45,1035
void Default_Local_Neuroseg_Ellipse(56,1377
void Print_Local_Neuroseg_Ellipse(62,1544
Copy_Local_Neuroseg_Ellipse(73,1952
void Local_Neuroseg_Ellipse_Fwrite(81,2174
Local_Neuroseg_Ellipse* Local_Neuroseg_Ellipse_Fread(88,2348
void Local_Neuroseg_Ellipse_Swc_Fprint_T(117,2966
Local_Neuroseg_Ellipse_To_Geo3d_Circle(132,3382
double Local_Neuroseg_Ellipse_Score(149,3827
int Local_Neuroseg_Ellipse_Var(163,4228
void Local_Neuroseg_Ellipse_Set_Var(172,4460
void Local_Neuroseg_Ellipse_Set_Var_S(180,4685
Local_Neuroseg_Ellipse_Field(189,4952
int Local_Neuroseg_Ellipse_Param_Array(198,5259
int Local_Neuroseg_Ellipse_Param_Array_S(213,5662
int Local_Neuroseg_Ellipse_Var_Mask_To_Index(228,6078
void Local_Neuroseg_Ellipse_Validate(242,6459
double Local_Neuroseg_Ellipse_Score_G(248,6663
double Local_Neuroseg_Ellipse_Score_Gv(265,7123
double Local_Neuroseg_Ellipse_Score_S(270,7274
double Fit_Local_Neuroseg_Ellipse(290,7827
void Local_Neuroseg_Ellipse_Stack_Centroid(343,9479
static void local_neuroseg_ellipse_reset_center(374,10373
void Local_Neuroseg_Ellipse_Reset_Center(384,10626
double Local_Neuroseg_Ellipse_Optimize_W(391,10784
double Local_Neuroseg_Ellipse_Score_W(406,11327
Fit_Local_Neuroseg_Ellipse_W(429,11939
void Local_Neuroseg_Ellipse_Center(489,13636
Next_Neuroseg_Ellipse(504,14002
void Local_Neuroseg_Ellipse_Points(518,14342
double Local_Neuroseg_Ellipse_Point_Angle(527,14639
Local_Neuroseg_Ellipse_Array_Points(541,15024
Local_Neuroseg_Ellipse* Make_Local_Neuroseg_Ellipse_Array(618,17695
void Local_Neuroseg_Ellipse_Normalize_Position(631,18021
void Local_Neuroseg_Ellipse_Scale_Z(649,18493
Local_Neuroseg_Ellipse_To_Geo3d_Ellipse(674,19210
void Local_Neuroseg_Ellipse_Draw_Stack(691,19666
static BOOL is_on_ellipse(719,20476
void Local_Neuroseg_Ellipse_Label(737,20946

tz_local_neuroseg_ellipse_doubly_linked_list.c,1329
#undef _DEBUG_13,210
Local_Neuroseg_Ellipse_Dlist* Local_Neuroseg_Ellipse_Dlist_New(19,363
void Local_Neuroseg_Ellipse_Dlist_Remove_All(32,711
void Local_Neuroseg_Ellipse_Dlist_Set_Data(50,1058
Local_Neuroseg_Ellipse_Dlist *Local_Neuroseg_Ellipse_Dlist_Head(Local_Neuroseg_Ellipse_Dlist_Head55,1188
Local_Neuroseg_Ellipse_Dlist *Local_Neuroseg_Ellipse_Dlist_Tail(Local_Neuroseg_Ellipse_Dlist_Tail68,1432
Local_Neuroseg_Ellipse_Dlist* Local_Neuroseg_Ellipse_Dlist_Next(81,1676
int Local_Neuroseg_Ellipse_Dlist_Length(97,2021
Local_Neuroseg_Ellipse_Dlist* Locate_Local_Neuroseg_Ellipse_Dlist(128,2620
Local_Neuroseg_Ellipse_Dlist* Append_Local_Neuroseg_Ellipse_Dlist(155,3096
Local_Neuroseg_Ellipse_Dlist* Local_Neuroseg_Ellipse_Dlist_Remove_End(177,3538
Local_Neuroseg_Ellipse_Dlist* Local_Neuroseg_Ellipse_Dlist_Remove_Node(211,4258
Local_Neuroseg_Ellipse_Dlist* Local_Neuroseg_Ellipse_Dlist_Add(247,5064
void Local_Neuroseg_Ellipse_Dlist_Insert(283,5950
Local_Neuroseg_Ellipse_P Local_Neuroseg_Ellipse_Dlist_Unlink(307,6562
BOOL Local_Neuroseg_Ellipse_Dlist_Is_Empty(322,6871
Local_Neuroseg_Ellipse_P* Local_Neuroseg_Ellipse_Dlist_To_Array(342,7514
void Print_Local_Neuroseg_Ellipse_Dlist(387,8555
void Print_Local_Neuroseg_Ellipse_Dlist_Compact(411,9112
void Print_Local_Neuroseg_Ellipse_Dlist_F(420,9268

tz_local_neuroseg_plane.c,915
Local_Neuroseg_Plane* New_Local_Neuroseg_Plane(19,371
void Delete_Local_Neuroseg_Plane(29,618
void Set_Local_Neuroseg_Plane(34,700
void Reset_Local_Neuroseg_Plane(43,1000
void Print_Local_Neuroseg_Plane(48,1141
void Local_Neuroseg_Plane_Fwrite(57,1469
Local_Neuroseg_Plane* Local_Neuroseg_Plane_Fread(63,1633
Copy_Local_Neuroseg_Plane(95,2269
double Local_Neuroseg_Plane_Score(103,2481
int Local_Neuroseg_Plane_Var(117,2876
void Local_Neuroseg_Plane_Set_Var(126,3100
Local_Neuroseg_Plane_Field(135,3338
int Local_Neuroseg_Plane_Param_Array(144,3641
int Local_Neuroseg_Plane_Var_Mask_To_Index(159,4030
void Local_Neuroseg_Plane_Validate(173,4405
double Local_Neuroseg_Plane_Score_G(186,4727
double Local_Neuroseg_Plane_Score_Gv(203,5171
double Fit_Local_Neuroseg_Plane(208,5318
void Local_Neuroseg_Plane_Center(253,6722
Local_Neuroseg_Plane_To_Geo3d_Circle(268,7074
Next_Neuroseg_Plane(296,7784

tz_local_neuroseg_plane_doubly_linked_list.c,1265
#undef _DEBUG_13,208
Local_Neuroseg_Plane_Dlist* Local_Neuroseg_Plane_Dlist_New(19,355
void Local_Neuroseg_Plane_Dlist_Remove_All(32,691
void Local_Neuroseg_Plane_Dlist_Set_Data(50,1030
Local_Neuroseg_Plane_Dlist *Local_Neuroseg_Plane_Dlist_Head(Local_Neuroseg_Plane_Dlist_Head55,1154
Local_Neuroseg_Plane_Dlist *Local_Neuroseg_Plane_Dlist_Tail(Local_Neuroseg_Plane_Dlist_Tail68,1390
Local_Neuroseg_Plane_Dlist* Local_Neuroseg_Plane_Dlist_Next(81,1626
int Local_Neuroseg_Plane_Dlist_Length(97,1965
Local_Neuroseg_Plane_Dlist* Locate_Local_Neuroseg_Plane_Dlist(128,2556
Local_Neuroseg_Plane_Dlist* Append_Local_Neuroseg_Plane_Dlist(155,3024
Local_Neuroseg_Plane_Dlist* Local_Neuroseg_Plane_Dlist_Remove_End(177,3450
Local_Neuroseg_Plane_Dlist* Local_Neuroseg_Plane_Dlist_Remove_Node(211,4154
Local_Neuroseg_Plane_Dlist* Local_Neuroseg_Plane_Dlist_Add(247,4944
void Local_Neuroseg_Plane_Dlist_Insert(283,5810
Local_Neuroseg_Plane_P Local_Neuroseg_Plane_Dlist_Unlink(307,6406
BOOL Local_Neuroseg_Plane_Dlist_Is_Empty(322,6705
Local_Neuroseg_Plane_P* Local_Neuroseg_Plane_Dlist_To_Array(342,7342
void Print_Local_Neuroseg_Plane_Dlist(387,8361
void Print_Local_Neuroseg_Plane_Dlist_Compact(411,8904
void Print_Local_Neuroseg_Plane_Dlist_F(420,9056

tz_local_rpi_neuroseg.c,994
#define DELTA_THETA 10,214
#define DELTA_PSI 11,240
#define DELTA_LEFT_OFFSET 12,264
#define DELTA_RIGHT_OFFSET 13,294
#define DELTA_BOTTOM_OFFSET 14,325
#define DELTA_TOP_OFFSET 15,357
#define DELTA_LENGTH 16,386
static const double Delta[Delta18,413
void Default_Local_Rpi_Neuroseg(22,568
void Clean_Local_Rpi_Neuroseg(30,743
void Print_Local_Rpi_Neuroseg(35,844
DEFINE_ZOBJECT_INTERFACE(42,1035
int Local_Rpi_Neuroseg_Var(58,1448
void Local_Rpi_Neuroseg_Set_Var(66,1661
int Local_Rpi_Neuroseg_Param_Array(74,1870
void Local_Rpi_Neuroseg_Validate(87,2190
Geo3d_Scalar_Field* Local_Rpi_Neuroseg_Field(100,2509
double Local_Rpi_Neuroseg_Score_W(111,2811
double Local_Rpi_Neuroseg_Score_R(128,3322
double Local_Rpi_Neuroseg_Score_P(149,3857
double Fit_Local_Rpi_Neuroseg_Pr(162,4210
double Fit_Local_Rpi_Neuroseg_W(222,5852
double Local_Rpi_Neuroseg_Optimize_W(280,7434
Local_Rpi_Neuroseg_To_Local_Neuroseg(316,8363
void Local_Rpi_Neuroseg_From_Local_Neuroseg(345,9264

tz_locne_chain.c,491
#define LOCAL_NEUROSEG_ELLIPSE_RADIUS(18,336
int Locne_Chain_Trace_Test(20,418
Locne_Chain* Locne_Chain_Trace_Init(100,2506
#define TRACE_LOCNE(125,3226
void Trace_Locne(156,4526
void Locne_Chain_Subchain(243,6984
double* Locne_Chain_Area_Array(264,7411
BOOL Locne_Chain_Hittest(283,7844
double Locne_Chain_Span(365,10522
void Locne_Chain_Vrml_Fprint(373,10751
int Locne_Chain_Swc_Fprint(401,11695
Trace_Workspace *Make_Locne_Trace_Workspace(Make_Locne_Trace_Workspace445,12688

tz_locne_chain_com.c,1591
Locne_Chain* New_Locne_Chain(32,665
void Delete_Locne_Chain(43,867
void Construct_Locne_Chain(50,960
void Clean_Locne_Chain(56,1112
Locne_Chain* Make_Locne_Chain(65,1285
void Kill_Locne_Chain(73,1429
int Locne_Chain_Length(79,1533
BOOL Locne_Chain_Is_Empty(88,1682
Locne_Node_Dlist* Locne_Chain_Iterator_Start(101,1845
Locne_Node_Dlist* Locne_Chain_Iterator_Locate(121,2255
Locne_Node* Locne_Chain_Next(136,2622
Locne_Node* Locne_Chain_Prev(153,2901
Locne_Node* Locne_Chain_Next_D(170,3180
Locne_Node* Locne_Chain_Peek(183,3392
Local_Neuroseg_Ellipse* Locne_Chain_Peek_Seg(196,3611
Locne_Node* Locne_Chain_Peek_Next(206,3791
Locne_Node* Locne_Chain_Peek_Prev(223,4055
Local_Neuroseg_Ellipse* Locne_Chain_Next_Seg(240,4321
Local_Neuroseg_Ellipse* Locne_Chain_Prev_Seg(250,4507
Local_Neuroseg_Ellipse* Locne_Chain_Next_Seg_D(260,4693
void Print_Locne_Chain(273,4929
void Write_Locne_Chain(288,5244
Locne_Chain* Read_Locne_Chain(310,5770
Locne_Node* Locne_Chain_Head(339,6376
Locne_Node* Locne_Chain_Tail(354,6611
Local_Neuroseg_Ellipse* Locne_Chain_Head_Seg(369,6846
Local_Neuroseg_Ellipse* Locne_Chain_Tail_Seg(379,7032
Locne_Node* Locne_Chain_Peek_At(389,7218
Local_Neuroseg_Ellipse* Locne_Chain_Peek_Seg_At(399,7455
void Locne_Chain_Add(408,7727
void Locne_Chain_Add_Node(423,8154
void Locne_Chain_Cat(438,8589
void Locne_Chain_Insert(458,8989
void Locne_Chain_Remove_End(477,9505
void Locne_Chain_Remove_Current(484,9690
Locne_Node* Locne_Chain_Take_Current(495,9989
Locne_Chain* Dir_Locne_Chain_N(512,10300
Locne_Chain** Dir_Locne_Chain_Nd(566,11755

tz_locne_node.c,837
Locne_Node* New_Locne_Node(13,208
void Delete_Locne_Node(24,385
void Clean_Locne_Node(31,464
Locne_Node* Make_Locne_Node(41,632
void Kill_Locne_Node(51,865
Locne_Node* Copy_Locne_Node(57,953
BOOL Locne_Node_Is_Identical(63,1102
void Print_Locne_Node(96,1720
void Print_Locne_Node_Info(102,1840
void Locne_Node_Fwrite(107,1936
void Locne_Node_Fwrite_V(116,2182
Locne_Node* Locne_Node_Fread(125,2457
Locne_Node* Locne_Node_Fread_V(159,3092
void Locne_Node_Copy_Trace_Record(193,3756
void Locne_Node_Set_Score(202,3926
void Locne_Node_Set_Hit_Region(211,4096
void Locne_Node_Set_Index(220,4273
void Locne_Node_Set_Refit(229,4430
void Locne_Node_Set_Direction(238,4594
void Locne_Node_Set_Fit_Height(247,4781
void Locne_Node_Set_Fix_Point(256,4966
double Locne_Node_Fix_Point(265,5134
BOOL Locne_Node_Fix_Pos(287,5502

tz_locne_node_doubly_linked_list.c,943
#undef _DEBUG_13,198
Locne_Node_Dlist* Locne_Node_Dlist_New(19,315
void Locne_Node_Dlist_Remove_All(32,591
void Locne_Node_Dlist_Set_Data(50,901
Locne_Node_Dlist *Locne_Node_Dlist_Head(Locne_Node_Dlist_Head55,995
Locne_Node_Dlist *Locne_Node_Dlist_Tail(Locne_Node_Dlist_Tail68,1191
Locne_Node_Dlist* Locne_Node_Dlist_Next(81,1387
int Locne_Node_Dlist_Length(97,1696
Locne_Node_Dlist* Locate_Locne_Node_Dlist(128,2247
Locne_Node_Dlist* Append_Locne_Node_Dlist(155,2675
Locne_Node_Dlist* Locne_Node_Dlist_Remove_End(177,3021
Locne_Node_Dlist* Locne_Node_Dlist_Remove_Node(211,3645
Locne_Node_Dlist* Locne_Node_Dlist_Add(247,4355
void Locne_Node_Dlist_Insert(283,5121
Locne_Node_P Locne_Node_Dlist_Unlink(307,5637
BOOL Locne_Node_Dlist_Is_Empty(322,5886
Locne_Node_P* Locne_Node_Dlist_To_Array(342,6493
void Print_Locne_Node_Dlist(387,7402
void Print_Locne_Node_Dlist_Compact(411,7875
void Print_Locne_Node_Dlist_F(427,8136

tz_locnp_chain.c,174
Locnp_Chain* Locnp_Chain_Trace_Init(15,255
int Locnp_Chain_Trace_Test(39,914
int Locnp_Chain_Trace_Test2(107,2789
#define TRACE_LOCNP(176,4678
void Trace_Locnp(206,5908

tz_locnp_chain_com.c,1577
Locnp_Chain* New_Locnp_Chain(32,665
void Delete_Locnp_Chain(43,867
void Construct_Locnp_Chain(50,960
void Clean_Locnp_Chain(56,1112
Locnp_Chain* Make_Locnp_Chain(65,1285
void Kill_Locnp_Chain(73,1429
int Locnp_Chain_Length(79,1533
BOOL Locnp_Chain_Is_Empty(88,1682
Locnp_Node_Dlist* Locnp_Chain_Iterator_Start(101,1845
Locnp_Node_Dlist* Locnp_Chain_Iterator_Locate(121,2255
Locnp_Node* Locnp_Chain_Next(136,2622
Locnp_Node* Locnp_Chain_Prev(153,2901
Locnp_Node* Locnp_Chain_Next_D(170,3180
Locnp_Node* Locnp_Chain_Peek(183,3392
Local_Neuroseg_Plane* Locnp_Chain_Peek_Seg(196,3611
Locnp_Node* Locnp_Chain_Peek_Next(206,3789
Locnp_Node* Locnp_Chain_Peek_Prev(223,4053
Local_Neuroseg_Plane* Locnp_Chain_Next_Seg(240,4319
Local_Neuroseg_Plane* Locnp_Chain_Prev_Seg(250,4503
Local_Neuroseg_Plane* Locnp_Chain_Next_Seg_D(260,4687
void Print_Locnp_Chain(273,4921
void Write_Locnp_Chain(288,5236
Locnp_Chain* Read_Locnp_Chain(310,5762
Locnp_Node* Locnp_Chain_Head(339,6368
Locnp_Node* Locnp_Chain_Tail(354,6603
Local_Neuroseg_Plane* Locnp_Chain_Head_Seg(369,6838
Local_Neuroseg_Plane* Locnp_Chain_Tail_Seg(379,7022
Locnp_Node* Locnp_Chain_Peek_At(389,7206
Local_Neuroseg_Plane* Locnp_Chain_Peek_Seg_At(399,7443
void Locnp_Chain_Add(408,7711
void Locnp_Chain_Add_Node(423,8136
void Locnp_Chain_Cat(438,8571
void Locnp_Chain_Insert(458,8971
void Locnp_Chain_Remove_End(477,9485
void Locnp_Chain_Remove_Current(484,9670
Locnp_Node* Locnp_Chain_Take_Current(495,9969
Locnp_Chain* Dir_Locnp_Chain_N(512,10280
Locnp_Chain** Dir_Locnp_Chain_Nd(566,11735

tz_locnp_node.c,837
Locnp_Node* New_Locnp_Node(13,208
void Delete_Locnp_Node(24,385
void Clean_Locnp_Node(31,464
Locnp_Node* Make_Locnp_Node(41,630
void Kill_Locnp_Node(51,859
Locnp_Node* Copy_Locnp_Node(57,947
BOOL Locnp_Node_Is_Identical(63,1094
void Print_Locnp_Node(96,1710
void Print_Locnp_Node_Info(102,1828
void Locnp_Node_Fwrite(107,1922
void Locnp_Node_Fwrite_V(116,2166
Locnp_Node* Locnp_Node_Fread(125,2439
Locnp_Node* Locnp_Node_Fread_V(159,3072
void Locnp_Node_Copy_Trace_Record(193,3734
void Locnp_Node_Set_Score(202,3904
void Locnp_Node_Set_Hit_Region(211,4074
void Locnp_Node_Set_Index(220,4251
void Locnp_Node_Set_Refit(229,4408
void Locnp_Node_Set_Direction(238,4572
void Locnp_Node_Set_Fit_Height(247,4759
void Locnp_Node_Set_Fix_Point(256,4944
double Locnp_Node_Fix_Point(265,5112
BOOL Locnp_Node_Fix_Pos(287,5480

tz_locnp_node_doubly_linked_list.c,943
#undef _DEBUG_13,198
Locnp_Node_Dlist* Locnp_Node_Dlist_New(19,315
void Locnp_Node_Dlist_Remove_All(32,591
void Locnp_Node_Dlist_Set_Data(50,901
Locnp_Node_Dlist *Locnp_Node_Dlist_Head(Locnp_Node_Dlist_Head55,995
Locnp_Node_Dlist *Locnp_Node_Dlist_Tail(Locnp_Node_Dlist_Tail68,1191
Locnp_Node_Dlist* Locnp_Node_Dlist_Next(81,1387
int Locnp_Node_Dlist_Length(97,1696
Locnp_Node_Dlist* Locate_Locnp_Node_Dlist(128,2247
Locnp_Node_Dlist* Append_Locnp_Node_Dlist(155,2675
Locnp_Node_Dlist* Locnp_Node_Dlist_Remove_End(177,3021
Locnp_Node_Dlist* Locnp_Node_Dlist_Remove_Node(211,3645
Locnp_Node_Dlist* Locnp_Node_Dlist_Add(247,4355
void Locnp_Node_Dlist_Insert(283,5121
Locnp_Node_P Locnp_Node_Dlist_Unlink(307,5637
BOOL Locnp_Node_Dlist_Is_Empty(322,5886
Locnp_Node_P* Locnp_Node_Dlist_To_Array(342,6493
void Print_Locnp_Node_Dlist(387,7402
void Print_Locnp_Node_Dlist_Compact(411,7875
void Print_Locnp_Node_Dlist_F(427,8136

tz_locseg_chain.c,6375
Locseg_Chain* Copy_Locseg_Chain(44,1056
BOOL Locseg_Chain_Is_Identical(59,1402
double Locseg_Chain_Geolen(84,1929
double Locseg_Chain_Geolen_Z(142,3174
Locseg_Chain_Default_Trace_Workspace(194,4350
Locseg_Chain* Locseg_Chain_Trace_Init(232,5294
int Locseg_Chain_Trace_Test(258,6089
#define RECORD_TRACE_SCORE(455,11499
#define LOCSEG_CHAIN_BEGIN_FIT(459,11698
#define LOCSEG_CHAIN_END_FIT(467,11932
#define LOCSEG_CHAIN_FIT(473,12067
#define LOCSEG_CHAIN_FIT_H(477,12201
#define LOCSEG_CHAIN_REFIT(489,12652
#define TRACE_LOCSEG(611,18528
void Trace_Locseg(728,23965
void Locseg_Chain_Trace_Np(1028,33140
locseg_chain_dist_upper_bound(1134,35841
BOOL Locseg_Chain_Connection_Test(1174,36851
int Locseg_Chain_Hit_Test(1634,49443
int Locseg_Chain_Hit_Test_Seg(1667,50186
void Locseg_Chain_Append_Locnp(1733,51947
void Locseg_Chain_Draw_Stack(1785,53285
void Locseg_Chain_Label(1791,53444
void Locseg_Chain_Label_E(1817,54029
void Locseg_Chain_Label_G(1846,54778
BOOL Locseg_Chain_Has_Stack_Value(1874,55527
void Locseg_Chain_Label_W(1889,55897
void Locseg_Chain_Erase(1965,58063
void Locseg_Chain_Erase_E(1976,58402
Locseg_Chain *Locseg_Chain_From_Locnp_Chain(Locseg_Chain_From_Locnp_Chain2000,59059
int Locseg_Chain_Remove_Overlap_Ends(2014,59478
void Locseg_Chain_Remove_Turn_Ends(2062,60672
int Locseg_Chain_Knot_Number(2113,61777
#define LOCSEG_CHAIN_TO_KNOT_ARRAY_EPS 2124,62048
Locseg_Chain_To_Knot_Array(2127,62119
Geo3d_Circle* Locseg_Chain_To_Geo3d_Circle_Array_Z(2237,64772
Geo3d_Circle* Locseg_Chain_To_Geo3d_Circle_Array(2252,65166
Locne_Chain* Locseg_Chain_To_Locne_Chain(2258,65348
Locseg_Chain_To_Ellipse_Array_Z(2358,67583
void Locseg_Chain_Vrml_Fprint_Z(2415,68978
void Locseg_Chain_Vrml_Fprint(2445,69993
void Locseg_Chain_To_Vrml_File(2451,70175
Graph* Locseg_Chain_Graph(2459,70393
int Locseg_Chain_End_Points(2502,71419
int Locseg_Chain_End_Points_Z(2544,72331
void Locseg_Chain_Hit_Stack(2591,73378
Neuron_Structure* Locseg_Chain_Neurostruct(2644,74722
void Locseg_Chain_Reach_Conn(2681,75559
int Locseg_Chain_Swc_Fprint_Z(2718,76529
int Locseg_Chain_Swc_Fprint_T(2762,77534
void Locseg_Chain_To_Swc_File(2812,78673
int Locseg_Chain_Swc_Fprint(2819,78911
Neuron_Component* Dir_Locseg_Chain_Nc(2862,79859
Locseg_Chain_Comp_Neurostruct(2920,81443
Locseg_Chain_Comp_Neurostruct_W(2997,83460
Locseg_Chain_To_Neuron_Component(3076,85491
Locseg_Chain_To_Neuron_Component_S(3175,88120
Locseg_Chain** Trace_Locseg_S(3287,91690
#define TRACE_LOCSEG_S_RECORD_CHAIN(3486,97358
double* Locseg_Chain_Intensity_Profile(3569,99826
int Locseg_Chain_Refit_Number(3594,100432
Locseg_Chain* Locseg_Chain_Refit_Break(3608,100707
void Locseg_Chain_Scale_Z(3661,101968
void Locseg_Chain_Scale_XY(3671,102226
double Locseg_Chain_Connection_Test_P(3681,102488
Locseg_Chain* Local_Neuroseg_Push(3746,104091
double* Locseg_Chain_Conn_Feature(3827,106008
double *Locseg_Chain_Conn_Feature(Locseg_Chain_Conn_Feature3899,107889
double Locseg_Chain_Average_Score(4004,110818
double Locseg_Chain_Min_Seg_Score(4024,111261
double Locseg_Chain_Median_Score(4046,111766
double Locseg_Chain_Average_Bottom_Radius(4073,112345
int Locseg_Chain_File_Trace_Record_Size(4090,112655
void Locseg_Chain_Down_Sample(4139,113718
void Locseg_Chain_Tune_End(4173,114754
void Locseg_Chain_Refine_End(4313,118093
static double kappa3(4336,118802
int Locseg_Chain_Connect_Seg(4345,118988
void Locseg_Chain_Merge(4464,121970
void Locseg_Chain_Flip(4607,126506
void Locseg_Chain_Conn_Fix(4634,127336
Locseg_Chain* Locseg_Chain_Bridge(4707,129432
Locseg_Chain* Locseg_Chain_Bridge_Sp(4820,132910
void Locseg_Chain_End_Pos(4933,136396
double Locseg_Chain_Point_Dist(4944,136712
double Locseg_Chain_Point_Dist_K(5014,138455
double Locseg_Chain_Dist(5049,139352
double Locseg_Chain_Average_Signal(5058,139567
double Locseg_Chain_Min_Seg_Signal(5065,139764
void Locseg_Chain_Bright_End(5087,140282
static void validate_value(5151,141950
static void validate_position(5160,142073
Int_Arraylist *Locseg_Chain_Shortest_Path_Pt(Locseg_Chain_Shortest_Path_Pt5167,142251
static void locseg_chain_point_range(5269,144950
void Locseg_Chain_Update_Stack_Graph_Workspace(5314,146169
Int_Arraylist *Locseg_Chain_Shortest_Path_Seg(Locseg_Chain_Shortest_Path_Seg5435,149277
Int_Arraylist *Locseg_Chain_Shortest_Path(Locseg_Chain_Shortest_Path5464,150019
Int_Arraylist* Locseg_Chain_Skel_Shortest_Path_Pt(5564,152558
Locseg_Chain_Skel_Shortest_Path_Seg(5650,154612
Int_Arraylist *Locseg_Chain_Skel_Shortest_Path(Locseg_Chain_Skel_Shortest_Path5672,155156
int Locseg_Chain_Interpolate_L(5732,156676
void Locseg_Chain_Translate(5917,162124
BOOL Locseg_Chain_Break_Node(5926,162390
int Locseg_Chain_Remove_Seed(5964,163336
void Locseg_Chain_Adjust_Seed(5983,163772
BOOL Locseg_Chain_Form_Loop(6008,164526
Locseg_Chain* Locseg_Chain_From_Skel(6054,165879
Locseg_Chain* Locseg_Chain_From_Ball_Array(6188,169907
Locseg_Chain* Locseg_Chain_From_Sp_Grow(6259,172029
Locseg_Chain* Locseg_Chain_Bridge_Sp_G(6275,172472
Local_Neuroseg *Locseg_Chain_Peek_Seg_Nearby(Locseg_Chain_Peek_Seg_Nearby6311,173557
Locseg_Chain_Sp_Grow_Reconstruct(6321,173804
void Locseg_Chain_Regularize(6490,178377
Locseg_Chain** Locseg_Chain_Import_List(6505,178759
Locseg_Chain* Locseg_Chain_Break_At(6535,179374
static int locseg_chain_maximum_turn(6554,179787
static void locseg_chain_switch_list(6576,180369
Locseg_Chain* Locseg_Chain_Break_Between(6582,180531
double Locseg_Chain_Hit_Ratio(6626,181753
double Locseg_Chain_Hit_Ratio_Swc(6676,182855
void Locseg_Chain_Extend(6726,184045
static double local_neuroseg_zscore(6777,185480
void Locseg_Chain_Array_Screen_Z(6788,185740
static Neuron_Structure* locseg_chain_neurostruct(6803,186107
static double turning_angle(6837,187061
double Locseg_Chain_Turning_Angle(6854,187493
static int link_node(6889,188465
#define MERGE_LIST_ALT(6894,188537
static int construct_merge_list(6896,188602
#define CONN_ID_TO_CHAIN_ID(6966,189911
#define CONN_INDEX_TO_CONN_ID(6968,189957
#define CONN_INDEX_TO_CHAIN_ID(6974,190062
void Locseg_Chain_Array_Force_Merge(6980,190212
static double locseg_chain_point_dist_c(7053,192510
BOOL locseg_chain_index_is_internal(7075,193042
Locseg_Chain** Locseg_Chain_Array_Break_Jump(7080,193176
void Locseg_Chain_Correct_Ends(7149,195117

tz_locseg_chain_com.c,1591
Locseg_Chain* New_Locseg_Chain(32,667
void Delete_Locseg_Chain(43,875
void Construct_Locseg_Chain(50,970
void Clean_Locseg_Chain(56,1127
Locseg_Chain* Make_Locseg_Chain(65,1303
void Kill_Locseg_Chain(73,1453
int Locseg_Chain_Length(79,1561
BOOL Locseg_Chain_Is_Empty(88,1713
Locseg_Node_Dlist* Locseg_Chain_Iterator_Start(101,1878
Locseg_Node_Dlist* Locseg_Chain_Iterator_Locate(121,2294
Locseg_Node* Locseg_Chain_Next(136,2668
Locseg_Node* Locseg_Chain_Prev(153,2951
Locseg_Node* Locseg_Chain_Next_D(170,3234
Locseg_Node* Locseg_Chain_Peek(183,3451
Local_Neuroseg* Locseg_Chain_Peek_Seg(196,3673
Locseg_Node* Locseg_Chain_Peek_Next(206,3849
Locseg_Node* Locseg_Chain_Peek_Prev(223,4116
Local_Neuroseg* Locseg_Chain_Next_Seg(240,4385
Local_Neuroseg* Locseg_Chain_Prev_Seg(250,4567
Local_Neuroseg* Locseg_Chain_Next_Seg_D(260,4749
void Print_Locseg_Chain(273,4981
void Write_Locseg_Chain(288,5303
Locseg_Chain* Read_Locseg_Chain(310,5837
Locseg_Node* Locseg_Chain_Head(339,6451
Locseg_Node* Locseg_Chain_Tail(354,6691
Local_Neuroseg* Locseg_Chain_Head_Seg(369,6931
Local_Neuroseg* Locseg_Chain_Tail_Seg(379,7113
Locseg_Node* Locseg_Chain_Peek_At(389,7295
Local_Neuroseg* Locseg_Chain_Peek_Seg_At(399,7539
void Locseg_Chain_Add(408,7800
void Locseg_Chain_Add_Node(423,8226
void Locseg_Chain_Cat(438,8668
void Locseg_Chain_Insert(458,9075
void Locseg_Chain_Remove_End(477,9595
void Locseg_Chain_Remove_Current(484,9784
Locseg_Node* Locseg_Chain_Take_Current(495,10088
Locseg_Chain* Dir_Locseg_Chain_N(512,10405
Locseg_Chain** Dir_Locseg_Chain_Nd(566,11868

tz_locseg_chain_knot.c,842
Locseg_Chain_Knot* New_Locseg_Chain_Knot(5,77
Locseg_Chain_Knot* Make_Locseg_Chain_Knot(16,304
void Print_Locseg_Chain_Knot(25,485
#define LOCSEG_CHAIN_IS_EQUAL_EPS 30,596
BOOL Locseg_Chain_Knot_Is_Equal(32,636
Locseg_Chain_Knot_Array* New_Locseg_Chain_Knot_Array(39,853
void Delete_Locseg_Chain_Knot_Array(50,1114
void Clean_Locseg_Chain_Knot_Array(55,1196
void Kill_Locseg_Chain_Knot_Array(62,1343
int Locseg_Chain_Knot_Array_Length(68,1486
void Locseg_Chain_Knot_Array_Append(77,1627
void Locseg_Chain_Knot_Array_Append_U(91,1891
Locseg_Chain_Knot_Array_At(101,2161
Locseg_Chain_Knot_Array_Last(111,2384
void Print_Locseg_Chain_Knot_Array(116,2516
Locseg_Chain_Knot_Array_To_Circle_Z(125,2726
Locseg_Chain_Knot_Array_To_Circle_S(169,3718
Locseg_Chain_Knot_Array_To_Ellipse_Z(216,4796
void Locseg_Chain_Knot_Pos(260,5815

tz_locseg_chain_network.c,97
void Locseg_Chain_Network_Simlify(8,134
Locseg_Chain* Locseg_Chain_Network_Find_Branch(67,1866

tz_locseg_node.c,865
Locseg_Node* New_Locseg_Node(13,210
void Delete_Locseg_Node(24,393
void Clean_Locseg_Node(31,474
Locseg_Node* Make_Locseg_Node(41,636
void Kill_Locseg_Node(51,857
Locseg_Node* Copy_Locseg_Node(57,949
BOOL Locseg_Node_Is_Identical(63,1094
void Print_Locseg_Node(96,1707
void Print_Locseg_Node_Info(102,1821
void Locseg_Node_Fwrite(107,1911
void Locseg_Node_Fwrite_V(116,2152
Locseg_Node* Locseg_Node_Fread(125,2422
Locseg_Node* Locseg_Node_Fread_V(159,3055
void Locseg_Node_Copy_Trace_Record(193,3717
void Locseg_Node_Set_Score(202,3889
void Locseg_Node_Set_Hit_Region(211,4061
void Locseg_Node_Set_Index(220,4240
void Locseg_Node_Set_Refit(229,4399
void Locseg_Node_Set_Direction(238,4565
void Locseg_Node_Set_Fit_Height(247,4754
void Locseg_Node_Set_Fix_Point(256,4941
double Locseg_Node_Fix_Point(265,5111
BOOL Locseg_Node_Fix_Pos(287,5481

tz_locseg_node_doubly_linked_list.c,976
#undef _DEBUG_13,199
Locseg_Node_Dlist* Locseg_Node_Dlist_New(19,319
void Locseg_Node_Dlist_Remove_All(32,601
void Locseg_Node_Dlist_Set_Data(50,916
Locseg_Node_Dlist *Locseg_Node_Dlist_Head(Locseg_Node_Dlist_Head55,1013
Locseg_Node_Dlist *Locseg_Node_Dlist_Tail(Locseg_Node_Dlist_Tail68,1213
Locseg_Node_Dlist* Locseg_Node_Dlist_Next(81,1413
int Locseg_Node_Dlist_Length(97,1725
Locseg_Node_Dlist* Locate_Locseg_Node_Dlist(128,2280
Locseg_Node_Dlist* Append_Locseg_Node_Dlist(155,2712
Locseg_Node_Dlist* Locseg_Node_Dlist_Remove_End(177,3066
Locseg_Node_Dlist* Locseg_Node_Dlist_Remove_Node(211,3698
Locseg_Node_Dlist* Locseg_Node_Dlist_Add(247,4416
void Locseg_Node_Dlist_Insert(283,5192
Locseg_Node_P Locseg_Node_Dlist_Unlink(307,5716
BOOL Locseg_Node_Dlist_Is_Empty(322,5970
Locseg_Node_P* Locseg_Node_Dlist_To_Array(342,6580
void Print_Locseg_Node_Dlist(387,7500
void Print_Locseg_Node_Dlist_Compact(411,7980
void Print_Locseg_Node_Dlist_F(427,8244

tz_math.c,227
int iround(6,96
int Compare_Float(17,293
double Cube_Root(36,653
#define SOLVE_CUBIC_MIND 73,1346
int Solve_Cubic(74,1376
double Polyeval(118,2431
int Matrix_Eigen_Value_Cs(135,2676
void Matrix_Eigen_Vector_Cs(163,3395

tz_math_lib.c,222
int minint(6,66
int maxint(16,272
double mindouble(26,478
double maxdouble(36,699
float minfloat(46,920
float maxfloat(56,1136
long minlong(66,1352
long maxlong(76,1563
int signint(86,1774
void switchint(97,1893

tz_matlabio.c,984
#define MI_ENDIAN 12,198
#define IM_ENDIAN 13,223
#define COMPLEX_FLAG 14,248
#define GLOBAL_FLAG 15,280
#define LOGICAL_FLAG 16,311
#define  FLAG_MASK 18,344
#define CLASS_MASK 19,382
#define DATA_TYPE_ERROR 21,419
#define DATA_SIZE_ERROR 22,446
#define ENDIAN_ERROR 23,472
#define ENDIAN_MISMATCH 24,495
#define DATA_FLAG_ERROR 25,521
#define DATA_CLASS_ERROR 26,547
#define OTHER_ERROR 27,574
#define TAG_OFFSET 29,599
#define DESCRP_LENGTH 30,620
void Clean_Matlab_Array(32,647
void Default_Matlab_Array(37,713
DEFINE_ZOBJECT_INTERFACE(45,837
int parse_header(57,1055
int parse_tag(73,1550
int parse_element(83,1803
int parse_arrayflags(100,2253
int parse_dim(145,3175
int parse_varname(165,3657
void* uncompress_data(183,4043
int parse_data(205,4602
tz_uint32 type_size(251,5618
void print_mrinfo(276,5972
int mr_read(288,6266
#define FIND_MATLAB_BINPATH_FAILED(338,7226
void Find_Matlab_Binpath(343,7340
Matlab_Array* Read_Matlab_Array(372,7947

tz_mc_stack.c,803
size_t Mc_Stack_Asize(14,312
void Default_Mc_Stack(19,367
static inline size_t mc_stack_asize(32,584
DEFINE_OBJECT_MANAGEMENT(36,778
Mc_Stack *Make_Mc_Stack(Make_Mc_Stack56,1272
Stack Mc_Stack_Channel(67,1574
void Mc_Stack_Copy_Channel(85,2021
void Print_Mc_Stack_Info(98,2484
#define MC_STACK_TO_STACK(106,2749
Stack* Mc_Stack_To_Stack(119,3113
Mc_Stack* Mc_Stack_Rewrap_Stack(249,6499
Mc_Stack *Mc_Stack_Merge(Mc_Stack_Merge262,6829
Mc_Stack *Mc_Stack_Merge_F(Mc_Stack_Merge_F293,7592
void Mc_Stack_Grey16_To_8(401,10191
Mc_Stack* Mc_Stack_Downsample_Mean(478,12168
size_t  Mc_Stack_Voxel_Number(519,13283
#define MC_STACK_MIP(524,13410
Mc_Stack* Mc_Stack_Mip(544,14067
Mc_Stack* Mc_Stack_Upsample(605,15535
#define MC_STACK_BINARIZE(634,16281
void Mc_Stack_Binarize(640,16447

tz_mxutils.c,299
void matrix_error(7,88
void check_matrix(15,252
size_t matrix_size(28,532
size_t matrix_subsize(40,712
size_t sub2ind(53,935
void ind2sub(74,1378
void translate_intdim(100,1825
void Print_Dim(111,2012
void Matrix_Overlap(121,2178
int Compare_Dim(132,2569
dim_type* Get_Area_Part(145,2788

tz_neurochain.c,3443
Trace_History *New_Trace_History(New_Trace_History23,402
void Free_Trace_History(34,665
void Trace_History_Copy(41,751
void Trace_History_Set_Score(46,869
void Trace_History_Set_Hit_Region(73,1505
void Trace_History_Set_Index(83,1713
void Trace_History_Set_Is_Refit(93,1896
BOOL Trace_History_Is_Refit(103,2095
void Trace_History_Set_Direction(116,2306
void Fprint_Trace_History(126,2517
void Print_Trace_History(163,3849
void Trace_History_Fwrite(168,3940
Trace_History *Trace_History_Fread(Trace_History_Fread181,4225
Neurochain* New_Neurochain(200,4668
void Free_Neurochain(217,5148
Neurochain *Neurochain_Next(Neurochain_Next244,5747
Neurochain *Neurochain_Head(Neurochain_Head265,6229
Neurochain *Neurochain_Tail(Neurochain_Tail281,6570
int Neurochain_Length(298,6885
Neurochain *Locate_Neurochain(Locate_Neurochain335,7720
Neurochain* Init_Neurochain(372,8341
Neurochain* Append_Neurochain(392,8765
int Neurochain_Remove_Last(417,9314
Neurochain* Neurochain_Cut_Last(457,10009
Neurochain* Neurochain_Cut_At(496,10755
Neurochain* Neurochain_Cut(515,11075
#define POS_STEP 537,11460
Neurochain* Elongate_Neurochain(538,11481
#define ELONGATE_NEUROCHAIN_NEXT_NODE	546,11628
#undef ELONGATE_NEUROCHAIN_NEXT_NODE569,12210
Neurochain* Elongate_Neurochain_Spec(583,12558
#define ELONGATE_NEUROCHAIN_NEXT_NODE	593,12782
#undef ELONGATE_NEUROCHAIN_NEXT_NODE622,13549
Neurochain* Extend_Neurochain(635,13831
Neurochain* Extend_Neurochain_Spec(650,14263
Neurochain* Shrink_Neurochain(669,14820
void Cross_Neurochain(729,16068
void Fprint_Neurochain(760,16710
void Print_Neurochain(786,17220
void Print_Neurochain_Info(797,17447
void Write_Neurochain(809,17728
Neurochain* Read_Neurochain(821,17952
Neurochain** Dir_Neurochain(836,18220
Neurochain** Dir_Neurochain_P(880,19465
Neurochain** Dir_Neurochain_D(926,20750
Neurochain** Dir_Neurochain_N(976,22129
void Neurochain_Fwrite(1027,23530
void Neurochain_Fread(1041,23861
void Neurochain_Fprint_Vrml(1070,24472
void Write_Neurochain_Vrml(1082,24706
void Neurochain_Label(1100,25192
void Neurochain_Label_E(1122,25687
void Neurochain_Erase(1157,26489
void Neurochain_Erase_E(1167,26712
void Neurochain_Label_G(1189,27250
void Neurochain_Translate(1217,27953
double Neurochain_Score(1229,28259
double Neurochain_Geolen(1243,28581
double Neurochain_Thickness_Mean(1272,29241
double Neurochain_Thickness_Var(1288,29576
double Neurochain_Thickness_Change_Mean(1313,30040
double Neurochain_Angle_Mean(1331,30483
int Neurochain_Hit_Test(1360,31281
int Neurochain_Hit_Test_Seg(1381,31657
void Neurochain_Hit_Stack(1441,33191
BOOL Neurochain_Hit_Bound(1492,34514
Neurochain* Neurochain_Flip_Link(1525,35342
void Neurochain_Get_Locseg(1590,36559
#define NEUROCHAIN_NORMALIZE_DIRECTION(1603,36896
void Neurochain_Normalize_Direction(1614,37252
Neurochain *Neurochain_Remove_Head(Neurochain_Remove_Head1638,37770
Neurochain *Neurochain_Remove_Tail(Neurochain_Remove_Tail1650,37996
int Neurochain_End_Points(1662,38222
Neurochain* Neurochain_Remove_Overlap_Ends(1705,39150
BOOL neuroseg_contain(1752,40356
Neurochain* Neurochain_Remove_Overlap_Segs(1764,40704
Neurochain* Neurochain_Remove_Turn_Ends(1802,41703
Graph* Neurochain_Graph(1847,42627
Locseg_Chain* Neurochain_To_Locseg_Chain(1894,43728
Neurochain* Neurochain_From_Locseg_Chain(1910,44157
double *Neurochain_Average_Signal(Neurochain_Average_Signal1930,44676

tz_neurocomp_conn.c,225
Neurocomp_Conn* New_Neurocomp_Conn(12,190
void Default_Neurocomp_Conn(22,392
void Delete_Neurocomp_Conn(38,721
void Neurocomp_Conn_Copy(43,789
void Print_Neurocomp_Conn(48,911
void Neurocomp_Conn_Translate_Mode(70,1384

tz_neurofield.c,260
double Neurofield1(28,524
double Neurofield5(53,911
double Neurofield2(95,1669
#define PSF_SIGMA 137,2359
double Neurofield3(138,2381
#undef PSF_SIGMA170,2926
double Neurofield4(172,2944
double Neurofield7(198,3353
double Neuroseg_Dist_Field(227,3783

tz_neuron_component.c,427
Neuron_Component *New_Neuron_Component(New_Neuron_Component15,278
void Delete_Neuron_Component(24,485
void Clean_Neuron_Component(29,553
void Kill_Neuron_Component(47,920
void Reset_Neuron_Component(64,1307
void Set_Neuron_Component(70,1425
void Print_Neuron_Component(76,1538
void Neuron_Component_Draw_Stack(96,2062
void Clean_Neuron_Component_Array(114,2592
Neuron_Component* Make_Neuron_Component_Array(122,2737

tz_neuron_component_arraylist.c,930
const static int Growth_Coeff 16,258
static void neuron_component_arraylist_grow(24,434
void Print_Neuron_Component_Arraylist(49,1295
Neuron_Component_Arraylist* New_Neuron_Component_Arraylist(60,1524
Neuron_Component_Arraylist* Neuron_Component_Arraylist_New(73,1906
void Neuron_Component_Arraylist_Free(100,2631
Neuron_Component_Arraylist* Make_Neuron_Component_Arraylist(106,2733
void Kill_Neuron_Component_Arraylist(127,3337
Neuron_Component_Arraylist* Neuron_Component_Arraylist_Wrap(137,3530
Neuron_Component Neuron_Component_Arraylist_At(152,3900
Neuron_Component Neuron_Component_Arraylist_Last(157,4026
Neuron_Component* Neuron_Component_Arraylist_At_R(162,4151
void Neuron_Component_Arraylist_Add(174,4460
void Neuron_Component_Arraylist_Insert(183,4666
Neuron_Component Neuron_Component_Arraylist_Take(198,5070
void Neuron_Component_Arraylist_Set(208,5343
void Neuron_Component_Arraylist_Swap(229,5831

tz_neuron_structure.c,2342
Neuron_Structure* New_Neuron_Structure(22,445
Neuron_Structure* Make_Neuron_Structure(33,679
void Delete_Neuron_Structure(44,971
void Clean_Neuron_Structure(49,1039
void Kill_Neuron_Structure(67,1399
void Print_Neuron_Structure(73,1495
int Neuron_Structure_Link_Number(82,1741
int Neuron_Structure_Component_Number(87,1850
Neurocomp_Conn* Neuron_Structure_Get_Conn(92,1969
void Neuron_Structure_Add_Conn(101,2174
void Neuron_Structure_Remove_Conn(117,2718
void Neuron_Structure_Set_Component_Array(135,3188
void Neuron_Structure_Set_Component(152,3552
Neuron_Component* Neuron_Structure_Get_Component(168,3973
void Process_Neuron_Structure(180,4261
void Neuron_Structure_To_Swc_File(249,6011
int Neuron_Structure_Find_Root_Circle(337,8256
void Neuron_Structure_To_Swc_File_Circle(370,9049
void Neuron_Structure_To_Swc_File_Circle_Z(376,9220
Swc_Tree* Neuron_Structure_To_Swc_Tree_Circle_Z(543,13391
static int locseg_chain_ns_circle_number(634,15772
int Neuron_Structure_Break_Locseg_Chain(653,16236
int Neuron_Structure_Break_Locseg_Chain_S(674,16763
static void translate_mode(703,17389
Neuron_Structure_Locseg_Chain_To_Circle(735,18090
static void translate_mode2(790,19521
Neuron_Structure_Locseg_Chain_To_Circle(821,20143
static int closest_circle(937,22858
static void translate_mode_s(1061,25900
Neuron_Structure_Locseg_Chain_To_Circle_S(1121,27314
int Neuron_Structure_Conn_Index(1184,28991
void Neuron_Structure_Locseg_Chain_Merge_Terminal(1197,29277
void Neuron_Structure_Weight_Graph(1224,30223
void Neuron_Structure_Unweight_Graph(1234,30470
void Neuron_Structure_Main_Graph(1242,30635
void Neuron_Structure_To_Tree(1262,31166
Neuron_Component_Arraylist* Neuron_Structure_Branch_Point(1283,31576
Neuron_Structure* Neuron_Structure_From_Swc_File(1391,34624
void Neuron_Structure_Crossover_Test(1421,35351
void Neuron_Structure_Adjust_Link(1527,38152
double Neuron_Structure_Conn_Angle(1539,38463
static void neuron_structure_xml_conn(1602,40197
Graph* Neuron_Structure_Import_Xml_Graph(1617,40632
void Neuron_Structure_Merge_Locseg_Chain(1698,42340
static int nearest_chain(1825,45637
static void neuron_structure_add_locseg_chain(1853,46250
void Neuron_Structure_Break_Root(1863,46538
int Neuron_Structure_Load_Root(1905,47586
void Neuron_Structure_Remove_Negative_Conn(1932,48351

tz_neuropos.c,453
void Set_Neuropos(13,200
void Reset_Neuropos(20,311
void Neuropos_Copy(25,388
void Fprint_Neuropos(30,494
void Print_Neuropos(41,716
void Neuropos_Fwrite(46,795
neuropos_tp Neuropos_Fread(51,891
void Neuropos_Coordinate(66,1152
void Neuropos_Translate(73,1282
void Neuropos_Relative_Coordinate(78,1419
void Neuropos_Absolute_Coordinate(84,1592
int Neuropos_Var_Mask_To_Index(91,1762
int Neuropos_Var(96,1891
void Neuropos_Set_Var(105,2052

tz_neuroseg.c,2005
#    undef HAVE_INLINE11,176
#    define INLINE_SUPPRESSED12,199
#    define HAVE_INLINE18,360
Neuroseg* New_Neuroseg(38,733
void Delete_Neuroseg(47,884
void Set_Neuroseg(57,1035
void Reset_Neuroseg(79,1487
void Neuroseg_Copy(95,1883
void Fprint_Neuroseg(100,1962
void Print_Neuroseg(119,2476
void Neuroseg_Fwrite(124,2554
Neuroseg* Neuroseg_Fread(133,2725
void Neuroseg_Set_Orientation(160,3164
void Neuroseg_Set_Orientation_V(166,3280
double Neuroseg_Ball_Range(173,3473
double Neuroseg_Z_Range(184,3652
void Neuroseg_Field_Range(196,3922
double* Neurofilter(235,5107
double* Neuroseg_Dist_Filter(352,7511
void Neuroseg_Axis_Offset(417,9214
void Neuroseg_Center(427,9456
void Neuroseg_Bottom(432,9572
void Neuroseg_Top(439,9680
int Neuroseg_Var_Mask_To_Index(446,9855
int Neuroseg_Var(458,10201
void Neuroseg_Change_Thickness(481,10790
void Neuroseg_Swell(487,10907
Neuroseg* Next_Neuroseg(514,11655
double Neuroseg_Theta_Offset(540,12178
BOOL Neuroseg_Hit_Test(552,12416
int Neuroseg_Hit_Test_A(566,12774
double Neuroseg_Angle_Between(584,13169
double Neuroseg_Angle_Between_Z(592,13469
double Neuroseg_Rx(605,13831
double Neuroseg_Rx_P(621,14176
double Neuroseg_Rx_Z(627,14315
double Neuroseg_Rx_T(632,14419
double Neuroseg_Ry(637,14540
double Neuroseg_Ry_P(653,14846
double Neuroseg_Ry_Z(660,15062
double Neuroseg_Ry_T(665,15153
double Neuroseg_Rxy_Z(670,15261
double Neuroseg_Rxy_T(675,15372
double Neuroseg_Rc_Z(680,15500
double Neuroseg_Rc_T(695,15837
double Neuroseg_Model_Height(710,16174
void Neuroseg_Set_Model_Height(715,16252
double neurofield(720,16337
#define NEUROSEG_PLANE_FIELD(741,16605
void Neuroseg_Slice_Field(765,17285
void Neuroseg_Slice_Field_P(862,19439
Geo3d_Scalar_Field* Neuroseg_Field_Sp(925,20803
static void neuroseg_scale_field(997,22602
Geo3d_Scalar_Field* Neuroseg_Field_Z(1070,24243
Geo3d_Scalar_Field* Neuroseg_Field_S(1132,25895
void Neuroseg_Set_Var(1296,30175
void Neuroseg_Normalize_Orientation(1303,30333

tz_neuroseg_ellipse.c,789
Neuroseg_Ellipse* New_Neuroseg_Ellipse(17,320
void Delete_Neuroseg_Ellipse(27,528
void Kill_Neuroseg_Ellipse(32,596
void Set_Neuroseg_Ellipse(37,681
void Reset_Neuroseg_Ellipse(50,983
void Fprint_Neuroseg_Ellipse(55,1101
void Print_Neuroseg_Ellipse(61,1326
void Neuroseg_Ellipse_Fwrite(66,1426
Neuroseg_Ellipse* Neuroseg_Ellipse_Fread(75,1613
int Neuroseg_Ellipse_Var(104,2102
void Neuroseg_Ellipse_Set_Var(117,2462
int Neuroseg_Ellipse_Var_Mask_To_Index(124,2650
Geo3d_Scalar_Field* Neuroseg_Ellipse_Field(129,2795
Geo3d_Scalar_Field* Neuroseg_Ellipse_Field(173,3840
void Neuroseg_Ellipse_Points(327,7558
void Neuroseg_Ellipse_Ortvec(345,8088
void Neuroseg_Ellipse_Secortvec(355,8425
void Neuroseg_Ellipse_Normvec(365,8767
double Neuroseg_Ellipse_Vector_Angle(373,8980

tz_neuroseg_plane.c,549
Neuroseg_Plane* New_Neuroseg_Plane(17,314
void Delete_Neuroseg_Plane(27,508
void Kill_Neuroseg_Plane(32,572
void Set_Neuroseg_Plane(37,651
void Reset_Neuroseg_Plane(47,878
void Fprint_Neuroseg_Plane(52,980
void Print_Neuroseg_Plane(58,1186
int Neuroseg_Plane_Var(63,1280
void Neuroseg_Plane_Set_Var(74,1564
int Neuroseg_Plane_Var_Mask_To_Index(81,1744
Geo3d_Scalar_Field* Neuroseg_Plane_Field(86,1885
Geo3d_Scalar_Field* Neuroseg_Plane_Field_S(183,4161
void Neuroseg_Plane_Fwrite(223,5168
Neuroseg_Plane* Neuroseg_Plane_Fread(232,5351

tz_neurotrace.c,486
double Set_Neuroseg_Max_Radius(29,566
double Initialize_Tracing(45,963
Neurochain *Trace_Neuron2(Trace_Neuron297,2416
Neurochain *Object_To_Neurochain(Object_To_Neurochain359,9991
BOOL Neuroseg_Hit_Traced(378,10545
int Neuroseg_Hit_At(388,10747
void Process_Neurochain(419,11391
Soma_Trace_Workspace* New_Soma_Trace_Workspace(424,11466
void Delete_Soma_Trace_Workspace(435,11760
Locne_Chain* Trace_Soma(440,11838
double Soma_Score(503,13442
void Soma_Stack_Mask(513,13646

tz_objdetect.c,756
#define STACK_LABEL_OBJECT_RECOVER_CHORD17,298
Object_3d* extract_object(20,379
Object_3d* Stack_Grow_Object(46,885
Object_3d* Stack_Grow_Object_N(74,1551
Object_3d* Stack_Grow_Object_Constraint(111,2446
Object_3d_List* Stack_Find_Object(163,3711
Object_3d_List* Stack_Find_Object_N(224,5331
Object_3d_List* Stack_Find_Object_Level(322,7476
Object_3d* Stack_Find_Largest_Object_N(421,9666
void Stack_Label_Background(447,10273
void Stack_Label_Background_N(526,12163
Object_3d_List* Stack_Find_Hole(633,14682
Object_3d_List* Stack_Find_2dhole(639,14810
Object_3d_List* Stack_Find_Hole_N(651,15090
Object_3d_List* Object_3d_Find_Hole(676,15630
Object_3d_List* Object_3d_Find_2dhole(692,16012
Object_3d_List* Object_3d_Find_Hole_N(708,16418

tz_object_3d.c,931
#    undef HAVE_INLINE10,156
#    define INLINE_SUPPRESSED11,179
#    define HAVE_INLINE18,378
size_t Object_3d_Asize(40,859
void Default_Object_3d(45,933
static inline size_t obj_asize(54,1068
DEFINE_OBJECT_MANAGEMENT(57,1168
void Print_Object_3d(70,1414
void Print_Object_3d_Info(85,1747
void Object_3d_Range(103,2183
void Object_3d_Indices(158,3314
void Object_3d_Translate(186,4085
void Object_3d_Centroid(202,4408
void Object_3d_Cov(230,5014
void Object_3d_Cov_Zscale(274,6300
static void cov_3d_orientation(320,7403
void Object_3d_Orientation(347,8020
void Object_3d_Orientation_Zscale(368,8407
BOOL Object_3d_Has_Overlap(393,9029
Voxel_List* Object_3d_Central_Points(442,10118
double** Object_3d_Distmat(490,11314
double** Object_3d_Distmat_S(518,11911
void Object_3d_To_Mst(559,12938
void Object_3d_To_Mst_S(581,13655
void Object_3d_Central_Voxel(604,14400
Object_3d* Object_3d_Load_Csv(636,15233

tz_object_3d_linked_list.c,989
Object_3d_List* Object_3d_List_New(17,287
void Object_3d_List_Set_Data(26,496
void Object_3d_List_Removeall(37,752
void Object_3d_List_Unlinkall(52,1060
void Kill_Object_3d_List(61,1201
Object_3d_List* Object_3d_List_Add(76,1556
Object_3d_List* Object_3d_List_Add_Last(90,1910
void Object_3d_List_Remove(107,2338
void Object_3d_List_Remove_Last(117,2530
Object_3d_P Object_3d_List_Unlink(136,2859
Object_3d_List* Object_3d_List_Next(155,3179
Object_3d_List* Object_3d_List_Last(164,3342
BOOL Object_3d_List_Is_Empty(176,3522
int Object_3d_List_Length(191,3769
Object_3d_P* Object_3d_List_To_Array(213,4376
void Print_Object_3d_List(258,5257
void Print_Object_3d_List_Compact(282,5707
void Print_Object_3d_List_F(298,5963
Object_3d_List* Object_3d_Queue_En(320,6403
Object_3d_P Object_3d_Queue_De(333,6710
Object_3d_P Object_3d_Queue_Peek(341,6917
void Object_3d_Stack_Push(350,7067
Object_3d_P Object_3d_Stack_Pop(360,7276
Object_3d_P Object_3d_Stack_Peek(365,7368

tz_object_3d_linked_list_ext.c,195
int Object_3d_List_Size(19,360
void Object_3d_List_Translate(42,864
void Object_3d_List_Centroid(57,1220
void Object_3d_List_Centroid_Max(80,1761
Object_3d* Object_3d_List_To_Object(94,2070

tz_object_3d_operation.c,193
Object_3d_List *Object_Sub(Object_Sub15,308
Object_3d* Object_Intersect(29,735
Object_3d* Object_Union(94,2252
Object_3d* Object_3d_Boundary(113,2690
Object_3d* Object_3d_Border(133,3330

tz_object_tmpl.c,104
static inline int object_t_asize(10,143
void Default_Object_T(13,244
DEFINE_OBJECT_MANAGEMENT(19,339

tz_optimize_utils.c,1084
#    undef HAVE_INLINE9,165
#    define INLINE_SUPPRESSED10,188
#    define HAVE_INLINE17,378
Optimize_Workspace *New_Optimize_Workspace(New_Optimize_Workspace37,988
void Kill_Optimize_Workspace(52,1322
void Update_Optimize_Workspace(59,1415
Line_Search_Workspace *New_Line_Search_Workspace(New_Line_Search_Workspace75,1793
void Set_Line_Search_Workspace(92,2214
void Kill_Line_Search_Workspace(103,2475
inline static void validate_var(111,2598
#define LINE_SEARCH_ESTIMATE_GRADIENT(122,2787
#define STOP_GRADIENT 138,3347
BOOL Line_Search_Var_Backtrack(140,3375
void line_search_update_variable(261,6828
BOOL Line_Search_Var_Golden_Bracket(280,7450
int Line_Search_Var(357,9430
void Conjugate_Update_Direction(404,10576
void Conjugate_Update_Direction_W(429,11042
double Conjugate_Update_Direction_Pr(469,11934
static double score_slope(511,12893
BOOL Optimize_Update_Variable(531,13314
const static CBLAS_UPLO_t Sy_Uplo_Option 561,14053
void BFGS_Update_Variable(573,14421
void BFGS_Update_Y(604,15404
void BFGS_Update_H(610,15541
void Polyfit(651,16664

tz_perceptor.c,394
#define PERCEPTOR_LAMDA 12,187
#define PERCEPTOR_MIN_GRADIENT 13,215
inline static void update_variable(29,555
#define DEFINE_PARAM_ARRAY(36,720
perceptor_gradient_partial(42,881
double Perceptor_Gradient_Partial(87,2124
void Perceptor_Gradient(98,2465
#define FIT_PERCEPTOR_MAXITER 122,3086
#define LINE_SEARCH 124,3173
#define GRADESC_METHOD 125,3219
double Fit_Perceptor(137,3943

tz_pipe.c,273
#define __USE_BSD3,39
static Pipe p;10,167
static char *getpipefile(getpipefile12,183
void initpipein(24,371
void initpipeout(65,1224
void *pipein(pipein72,1366
void pipeout(77,1409
void * loadpipe(83,1464
void writepipe(114,2034
void *funcall(funcall129,2305

tz_pixel_array.c,402
static inline int pixel_array_asize(19,325
void Default_Pixel_Array(22,417
DEFINE_OBJECT_MANAGEMENT(32,540
static size_t pixel_array_fread_attribute(44,799
size_t Pixel_Array_Fread(54,1041
size_t Pixel_Array_Fwrite(64,1271
Pixel_Array* Pixel_Array_Read(75,1590
void Pixel_Array_Write(92,1953
void Print_Pixel_Array(101,2192
void Pixel_Array_Export(140,3014
double Pixel_Array_Value(160,3466

tz_random.c,267
static gsl_rng *Random_Generator Random_Generator20,324
static void gsl_rng_init(22,366
void Random_Seed(31,536
double Unifrnd(42,697
int Unifrnd_Int(52,844
unsigned int Poissonrnd(62,1028
double* Unifrnd_Double_Array(86,1355
int* Unifrnd_Int_Array(111,1755

tz_rastergeom.c,149
int Raster_Line_Map(7,115
void Raster_Ratio_Scale(33,534
int Round_Div(46,758
int Raster_Linear_Map(62,974
int Raster_Point_Zoom_Offset(71,1123

tz_rpi_neuroseg.c,296
void Default_Rpi_Neuroseg(10,189
void Clean_Rpi_Neuroseg(21,407
void Print_Rpi_Neuroseg(26,484
DEFINE_ZOBJECT_INTERFACE(34,746
#define RPI_NEUROSEG_SLICE_FIELD_LENGTH 41,925
int Rpi_Neuroseg_Var(43,971
void Rpi_Neuroseg_Slice_Field(56,1352
Geo3d_Scalar_Field* Rpi_Neuroseg_Field(117,2890

tz_sp_grow.c,474
DEFINE_ZOBJECT_INTERFACE(17,373
void Clean_Sp_Grow_Workspace(38,820
void Print_Sp_Grow_Workspace(47,1068
void Sp_Grow_Workspace_Set_Mask(53,1234
static void update_waiting(59,1388
static size_t update_neighbor(111,2981
Int_Arraylist* Stack_Sp_Grow(125,3399
#define UPDATE_SUPER_CONDUCTOR	308,8463
void Stack_Sp_Grow_Draw_Result(391,10566
void Stack_Sp_Grow_Infer_Parameter(438,11601
static int path_count(456,12041
ssize_t Stack_Sp_Grow_Furthest_Point(474,12299

tz_stack.c,350
void Stack_Bc_Autoadjust(13,285
Stack *Stack_Locmax_Region(Stack_Locmax_Region18,369
#define STACK_LOCMAX_REGION_INIT_QUEUE(37,882
#define STACK_LOCMAX_REGION_INIT_ALL(48,1208
#define STACK_LOCMAX_REGION_UPDATE_QUEUE(94,2378
#define STACK_LOCMAX_REGION_UPDATE_ALL(107,2741
Filter_3d* Gaussian_Filter_3d(155,4010
Stack* Filter_Stack(165,4225

tz_stack_attribute.c,354
int Stack_Width(12,168
int Stack_Height(21,274
int Stack_Depth(30,382
int Stack_Kind(39,488
int Stack_Channel_Number(48,609
size_t Stack_Voxel_Number(57,732
size_t Stack_Voxel_Bsize(62,815
size_t Stack_Array_Bsize(82,1073
BOOL Stack_Contain_Point(87,1186
BOOL Stack_Is_Empty(97,1410
#define STACK_IS_DARK(109,1628
BOOL Stack_Is_Dark(116,1779

tz_stack_bwdist.c,263
#define SHELL 15,250
#define MATLAB 16,274
#define MATLAB_ARGUMENT 17,330
#define TMP_INPUT 18,430
#define TMP_OUTPUT 19,478
static int my_system 22,620
static char Matlab_Path[Matlab_Path44,1126
void Set_Matlab_Path(46,1157
Stack* Stack_Bwdist(51,1234

tz_stack_bwmorph.c,1623
void Print_Se(40,859
Struct_Element *New_Se(New_Se60,1363
void Free_Se(77,1764
int Se_Usage(87,1899
void Kill_Struct_Element(92,1939
Struct_Element *Make_Corner_Se_2D(Make_Corner_Se_2D112,2386
Struct_Element *Make_Ball_Se(Make_Ball_Se231,5112
Struct_Element *Make_Disc_Se(Make_Disc_Se259,5593
Struct_Element* Make_Cuboid_Se(285,6021
Struct_Element* Make_Rect_Se(311,6590
Struct_Element *Make_Cross_Se(Make_Cross_Se333,7013
Struct_Element *Make_Zline_Se(Make_Zline_Se375,7802
Stack *Se_To_Stack(Se_To_Stack398,8268
Struct_Element *Stack_To_Se(Stack_To_Se436,9257
Stack* Stack_Erode(510,10671
Stack* Stack_Dilate(532,11051
Stack* Stack_Dilate_Rm(585,12262
Stack* Stack_Erode_Fast(648,13772
int Stack_Hitmiss(765,16449
Stack* Stack_Fillhole(833,18095
Stack* Stack_Fill_2dhole(884,19099
Stack* Stack_Fill_Hole_N(899,19410
Stack* Stack_Boundary(924,19885
Stack* Stack_Boundary_N(938,20150
Stack* Stack_Majority_Filter(970,20694
Stack* Stack_Majority_Filter_R(1028,21793
#define STACK_PERIMETER(1093,22977
Stack* Stack_Perimeter(1129,24017
Stack* Stack_Remove_Small_Object(1212,25735
Stack *Stack_Bwdist_L(Stack_Bwdist_L1237,26292
Stack *Stack_Bwdist_L_U16(Stack_Bwdist_L_U161266,27104
Stack *Stack_Bwdist_L_U16P(Stack_Bwdist_L_U16P1292,27705
Stack_Seed_Workspace* New_Stack_Seed_Workspace(1317,28275
void Clean_Stack_Seed_Workspace(1330,28571
void Kill_Stack_Seed_Workspace(1343,28819
Geo3d_Scalar_Field* Stack_Seed(1349,28927
double Stack_Volume_Surface_Ratio(1459,31960
#define STACK_Z_DILATE(1515,33108
Stack* Stack_Z_Dilate(1560,34578
Stack* Stack_Region_Expand(1597,35264

tz_stack_document.c,258
Stack_Document* New_Stack_Document(6,100
void Set_Stack_Document(25,516
void Clean_Stack_Document(50,1073
void Delete_Stack_Document(73,1508
void Kill_Stack_Document(78,1574
Stack* Import_Stack_Document(84,1684
char* Stack_Document_File_Path(119,2545

tz_stack_draw.c,1082
void Stack_Draw_Object(26,471
void Stack_Draw_Object_Bwc(59,1236
void Stack_Draw_Object_Bw(80,1816
void Stack_Draw_Objects_Bw(101,2439
void Stack_Draw_Objects_Bwc(124,2964
Stack* Object_To_Stack_Bw(142,3508
Stack* Object_To_Stack_Bwm(181,4564
void Stack_Label_Bwc(231,5670
void Stack_Label_Level(259,6271
void Stack_Label_Color(288,6892
void Stack_Label_Color_L(323,7664
#define STACK_REPLACE_POINT(360,8525
#define STACK_ADD_POINT(370,8805
#define STACK_MAX_POINT(374,8946
#define STACK_SET_POINT(378,9120
#define STACK_DRAW_POINT(395,9629
void Stack_Draw_Point(530,14525
void Stack_Draw_Points(580,15681
void Stack_Draw_Voxel_C(597,16105
void Stack_Draw_Voxel_Mc(638,17169
void Stack_Blend_Mc(657,17596
void Stack_Blend_Mc2(683,18284
void Stack_Blend_Mc_L(743,19540
void Stack_Draw_Object_C(768,20174
Stack_Draw_Workspace *New_Stack_Draw_Workspace(New_Stack_Draw_Workspace792,20878
void Reset_Stack_Draw_Workspace(802,21113
void Clean_Stack_Draw_Workspace(815,21349
void Delete_Stack_Draw_Workspace(820,21449
void Kill_Stack_Draw_Workspace(825,21525

tz_stack_graph.c,977
Stack_Graph_Workspace* New_Stack_Graph_Workspace(19,381
void Delete_Stack_Graph_Workspace(43,953
void Clean_Stack_Graph_Workspace(48,1033
void Kill_Stack_Graph_Workspace(66,1396
void Stack_Graph_Workspace_Set_Range(75,1571
void Stack_Graph_Workspace_Update_Range(99,2176
void Stack_Graph_Workspace_Set_Range_M(121,2610
void Stack_Graph_Workspace_Expand_Range(135,3026
void Stack_Graph_Workspace_Validate_Range(148,3316
double Stack_Graph_Workspace_Dist(176,3794
double Stack_Voxel_Weight(181,3910
double Stack_Voxel_Weight_I(190,4096
double Stack_Voxel_Weight_R(199,4290
double Stack_Voxel_Weight_A(211,4575
double Stack_Voxel_Weight_S(220,4761
Graph* Stack_Graph(244,5227
Graph* Stack_Graph_W(345,8071
#define STACK_GRAPH_ADD_EDGE(406,9881
int* Stack_Shortest_Path(480,12068
int* Stack_Shortest_Path_E(500,12672
Int_Arraylist* Parse_Stack_Shortest_Path(523,13459
int* Stack_Graph_Shortest_Path(547,14158
Int_Arraylist *Stack_Route(Stack_Route668,17265

tz_stack_io.c,83
void Print_Stack_Info(16,244
#define PRINT_STACK(26,477
void Print_Stack(40,812

tz_stack_lib.c,2660
#define PROJ_STACK_ZMAX(32,659
Image* Proj_Stack_Zmax(50,1195
#define STACK_HITTEST_Z(109,2537
double Stack_Hittest_Z(118,2773
void Zero_Stack(144,3339
void One_Stack(176,3987
void Stack_Set_Constant(221,4844
void Copy_Stack_Array(268,5894
Stack* Copy_Stack_T(277,6093
IMatrix* Get_White_Matrix3(301,6625
IMatrix* Count_Stack_Fg(335,7316
IMatrix* Stack_Foreoverlap(343,7502
IMatrix* Stack_Foreunion(353,7784
IMatrix* Stack_Foreunion_cthr(378,8623
Stack* Crop_Stack(413,9692
void Print_Stack_Value(501,12261
double Stack_Array_Value(572,13698
Stack* Scale_Float_Stack(595,14134
Stack* Scale_Double_Stack(648,15550
Stack* Scale_Double_Stack_P(710,17128
void Stack_Brighten_Bw(788,18944
void Stack_Brighten_Level(814,19488
void Stack_Level_Mask(848,20164
void Stretch_Stack_Value(881,20817
void Stretch_Stack_Value_Q(909,21456
Stack* Reflect_Stack(970,22635
Stack* Flip_Stack_Z(1039,24636
Stack* Flip_Stack_Y(1063,25263
Stack* Resize_Stack(1097,26172
Stack* Downsample_Stack(1143,27287
#define DOWNSAMPLE_STACK_BLOCK_MEAN(1209,28722
#define DOWNSAMPLE_STACK_BLOCK_MEAN_C(1232,29495
#define DOWNSAMPLE_STACK(1261,30467
Stack* Downsample_Stack_Mean(1320,32992
Stack* Downsample_Stack_Mean(1403,35122
Stack* Downsample_Stack_Max(1519,38225
#define UPSAMPLE_STACK(1614,40766
Stack* Upsample_Stack(1711,43699
#define RESAMPLE_STACK_DEPTH(1770,44978
Stack* Resample_Stack_Depth(1801,46000
void Stack_Overlap(1873,47910
int* Stack_Hist(1887,48369
int* Stack_Hist_M(1893,48498
size_t Get_Stack_Size(1906,48799
#define STACK_BINARIZE(1913,48939
void Stack_Binarize(1918,49068
#undef STACK_BINARIZE1949,49636
int Hist_Most_Common(1956,49879
void Stack_Sub_Common(1981,50271
double Stack_Corrcoef(1997,50609
Stack* Stack_Locmax(2046,51919
Stack *Stack_Local_Max(Stack_Local_Max2203,56356
#define STACK_LOCAL_MAX(2246,57443
#undef STACK_LOCAL_MAX2324,59544
Stack* Stack_Channel_Extraction(2329,59591
void Empty_Stack(2376,60634
BOOL Is_Stack_Empty(2390,60854
void Stack_Clean_Locmax(2396,60932
#define STACK_INVERT_VALUE(2446,62283
void Stack_Invert_Value(2451,62420
double Stack_Pixel(2477,62960
Stack *Stack_Merge(Stack_Merge2486,63163
#define STACK_MERGE_M(2554,64820
Stack *Stack_Merge_M(Stack_Merge_M2604,66579
Tiff_Image* Stack_Tiff_Image(2764,70187
#define STACK_LOCMAX_ENHANCE(2828,72024
Stack* Stack_Locmax_Enhance(2870,73428
#define STACK_RUNNING_MINMAX_INIT(2935,74814
#define STACK_RUNNING_MINMAX(2981,76168
Stack* Stack_Running_Max(3035,77926
Stack* Stack_Running_Min(3060,78535
#define MEDIAN2(3085,79144
Stack* Stack_Running_Median(3087,79171
Stack* Stack_Median_Filter_N(3112,79807

tz_stack_math.c,964
Stack *Stack_And(Stack_And28,666
Stack *Stack_Or(Stack_Or70,1769
Stack *Stack_Xor(Stack_Xor110,2813
Stack *Stack_Not(Stack_Not154,3934
Stack* Stack_Bsub(178,4362
#define STACK_AND_E(200,4848
Stack *Stack_And_E(Stack_And_E205,5025
#define STACK_OR_E(248,6082
Stack *Stack_Or_E(Stack_Or_E253,6258
#define STACK_MASK(296,7312
Stack *Stack_Mask(Stack_Mask306,7581
#undef STACK_MASK352,8604
#define STACK_ADD(354,8623
#define STACK_ADD_T(361,8879
Stack *Stack_Add(Stack_Add366,9191
#define STACK_SUB(480,11594
#define STACK_SUB_T(487,11850
Stack *Stack_Sub(Stack_Sub492,12161
#define STACK_MUL(627,15035
#define STACK_MUL_T(632,15215
Stack *Stack_Mul(Stack_Mul637,15487
void Stack_Subc(734,17552
void Stack_Addc_M(774,18283
#define STACK_ADD_R(805,18963
#define STACK_ADD_R_T(819,19462
Stack *Stack_Add_R(Stack_Add_R824,19778
#define STACK_SUB_R(934,22417
#define STACK_SUB_R_T(948,22916
Stack *Stack_Sub_R(Stack_Sub_R953,23232

tz_stack_neighborhood.c,1538
void Print_Neighborhood(16,246
void Print_Neighborhood_F(71,2169
void Stack_Neighbor_Offset(126,4097
void Stack_Neighbor_Positive_Offset(189,5847
static const double Dist_2d[Dist_2d231,6906
static const double Dist_3d[Dist_3d233,7008
const double* Stack_Neighbor_Dist(240,7312
void Stack_Neighbor_Dist_R(249,7452
static const int X_Offset_2d[X_Offset_2d297,8943
static const int Y_Offset_2d[Y_Offset_2d298,9006
static const int Z_Offset_2d[Z_Offset_2d299,9069
static const int X_Offset_3d[X_Offset_3d301,9130
static const int Y_Offset_3d[Y_Offset_3d304,9270
static const int Z_Offset_3d[Z_Offset_3d307,9410
const int* Stack_Neighbor_X_Offset(311,9551
const int* Stack_Neighbor_Y_Offset(320,9683
const int* Stack_Neighbor_Z_Offset(329,9815
#define SET_NEIGHBOR4_BOUND(338,9947
#define SET_NEIGHBOR8_BOUND(345,10164
#define SET_NEIGHBOR6_BOUND(356,10521
#define SET_NEIGHBOR10_BOUND(365,10808
#define SET_NEIGHBOR18_BOUND(378,11236
#define SET_NEIGHBOR26_BOUND(399,11960
int Stack_Neighbor_Bound_Test(440,13473
int Stack_Neighbor_Bound_Test_S(2123,67588
int Stack_Neighbor_Bound_Test_I(2660,78314
#define STACK_NEIGHBOR_SAMPLING(2680,78940
void Stack_Neighbor_Sampling(2695,79352
#define STACK_NEIGHBOR_SAMPLING_I(2721,80070
void Stack_Neighbor_Sampling_I(2736,80497
#define STACK_NEIGHBOR_MIN(2761,81144
double Stack_Neighbor_Min(2779,81700
#define STACK_NEIGHBOR_MEAN(2820,82665
double Stack_Neighbor_Mean(2834,83086
#define STACK_NEIGHBOR_SET_I(2875,84076
void Stack_Neighbor_Set_I(2888,84445

tz_stack_objlabel.c,1610
#define STACK_LABEL_OBJECT_RECOVER_CHORD19,346
#define STACK_LABEL_OBJECT_BY_CHORD20,387
static void stack_label_object_recover_chord(24,505
static void stack_label_object_by_chord(38,777
#define STACK_OBJLABEL_CHECK_CHORD(50,1005
Objlabel_Workspace *New_Objlabel_Workspace(New_Objlabel_Workspace65,1508
void Default_Objlabel_Workspace(74,1731
void Delete_Objlabel_Workspace(84,1916
void Kill_Objlabel_Workspace(89,1988
int Stack_Label_Object_N(110,2475
int Stack_Label_Object_W(122,2767
#define STACK_LABEL_OBJECT_N_UPDATE_QUEUE	161,3640
#define STACK_LABEL_OBJECT_CONSTRAINT_N_UPDATE_QUEUE(220,5100
int Stack_Label_Object_Level_N(243,5793
int Stack_Label_Object_Level_Nw(335,7906
int Stack_Label_Object_Dist_N(415,9714
#define STACK_LABEL_OBJECT_DIST_N_UPDATE_QUEUE	463,10834
int Stack_Label_Objects_N(527,12558
int Stack_Label_Objects_Ns(567,13367
int Stack_Label_Large_Objects_N(607,14207
int Stack_Label_Largest_Object_N(622,14585
int Stack_Label_Large_Objects_W(634,14882
int Stack_Label_Largest_Object_W(676,15877
#define STACK_GROW_OBJECT_ENQUEUE(721,16992
#define STACK_GROW_OBJECT_DEQUEUE(734,17311
#define STACK_GROW_OBJECT_ENQUEUE_NEIGHBORS(738,17398
void Stack_Grow_Object_S(746,17625
void Stack_Build_Seed_Graph(835,19775
#define STACK_SEED_GRAPH_UPDATE_QUEUE(883,21021
Graph* Stack_Build_Seed_Graph_G(955,23121
#define STACK_SEED_GRAPH_UPDATE_QUEUE_G(1003,24369
Objlabel_Workspace* Make_Objlabel_Workspace_Gg(1071,26385
void Init_Objlabel_Workspace_Gg(1085,26743
Graph* Stack_Build_Seed_Graph_Gg(1102,27244
#define STACK_SEED_GRAPH_UPDATE_QUEUE_GG(1142,28332

tz_stack_objmask.c,76
#define STACK_FOREGROUND_AREA_O(11,182
int Stack_Foreground_Area_O(25,604

tz_stack_relation.c,120
BOOL Stack_Same_Size(9,135
BOOL Stack_Same_Kind(19,375
BOOL Stack_Same_Attribute(28,543
BOOL Stack_Identical(38,767

tz_stack_sampling.c,715
#define OBJECT_3D_SAMPLING(21,377
Pixel_Array *Object_3d_Sampling(Object_3d_Sampling29,722
#undef OBJECT_3D_SAMPLING60,1402
#define VOXEL_LIST_SAMPLING(62,1429
Pixel_Array *Voxel_List_Sampling(Voxel_List_Sampling69,1727
#undef VOXEL_LIST_SAMPLING109,2656
#define INDEX_ARRAY_SAMPLING(111,2684
Pixel_Array* Stack_Index_Sampling(116,2828
#define STACK_POINT_SAMPLING3(156,3782
#define STACK_POINT_SAMPLING2(230,6621
#define STACK_POINT_SAMPLING4(240,7045
#define STACK_POINT_SAMPLING(260,7884
double Stack_Point_Sampling(326,10581
double* Stack_Points_Sampling(379,11904
double* Stack_Points_Sampling_M(396,12302
double* Stack_Points_Sampling_Z(419,12843
double* Stack_Points_Sampling_Zm(441,13385

tz_stack_stat.c,461
#define STACK_STAT_ASSIGN_VALUE(15,257
#define STACK_MAX(20,371
double Stack_Max(29,577
#undef STACK_MAX70,1565
#define STACK_MIN(72,1583
double Stack_Min(81,1789
#undef STACK_MIN117,2681
int Stack_Common_Intensity(121,2766
#define STACK_SUM(129,2943
double Stack_Sum(134,3058
#undef STACK_SUM163,3646
double Stack_Mean(168,3707
#define STACK_FGAREA(174,3830
int Stack_Fgarea(181,3967
#define STACK_FGAREA_T(193,4149
int Stack_Fgarea_T(200,4290

tz_stack_threshold.c,1131
#define STACK_THRESHOLD(21,467
int Stack_Threshold(29,661
#undef STACK_THRESHOLD66,1312
#define STACK_THRESHOLD_BINARIZE(68,1336
void Stack_Threshold_Binarize(73,1477
#define STACK_THRESHOLD_BINARIZE_S(103,2073
void Stack_Threshold_Binarize_S(113,2373
int Stack_Find_Threshold_A(140,2924
void Stack_Threshold_Binarize_A(170,3519
int Stack_Threshold_Common(175,3652
int Stack_Threshold_Median(186,3911
int Stack_Threshold_Quantile(197,4151
int Hist_Rcthre(210,4440
int Hist_Rcthre_R(279,5620
int Hist_Spthre(324,6491
int Hist_Tpthre(367,7284
int Hist_Tpthre2(413,8090
int Hist_Dpthre(514,10752
int Hist_Dpthre2(556,11546
int Stack_Threshold_RC(596,12301
int Stack_Threshold_Triangle(609,12542
int Stack_Threshold_RC_R(622,12812
void Stack_Threshold_Sp(633,13049
void Stack_Threshold_Tp(644,13276
void Stack_Threshold_Tp2(655,13503
void Stack_Threshold_Tp3(666,13732
int Stack_Find_Threshold_Locmax(679,14063
int Stack_Find_Threshold_Locmax2(701,14478
int Stack_Find_Threshold_Locmax_L2(723,14909
void Stack_Threshold_Tp4(741,15353
void Stack_Threshold_Dp(757,15746
void Stack_Threshold_Dp2(768,15973

tz_stack_tile.c,203
DEFINE_ZOBJECT_INTERFACE(9,163
void Clean_Stack_Tile(21,379
void Print_Stack_Tile(30,515
Stack_Tile* Make_Stack_Tile(37,681
Stack_Tile* Make_Stack_Tile_D(48,921
Stack_Tile* Read_Stack_Tile(59,1149

tz_stack_tile_arraylist.c,786
const static int Growth_Coeff 16,252
static void stack_tile_arraylist_grow(24,422
void Print_Stack_Tile_Arraylist(49,1217
Stack_Tile_Arraylist* New_Stack_Tile_Arraylist(60,1428
Stack_Tile_Arraylist* Stack_Tile_Arraylist_New(73,1786
void Stack_Tile_Arraylist_Free(100,2451
Stack_Tile_Arraylist* Make_Stack_Tile_Arraylist(106,2541
void Kill_Stack_Tile_Arraylist(127,3091
Stack_Tile_Arraylist* Stack_Tile_Arraylist_Wrap(137,3266
Stack_Tile Stack_Tile_Arraylist_At(152,3594
Stack_Tile Stack_Tile_Arraylist_Last(157,3702
Stack_Tile* Stack_Tile_Arraylist_At_R(162,3809
void Stack_Tile_Arraylist_Add(174,4094
void Stack_Tile_Arraylist_Insert(183,4276
Stack_Tile Stack_Tile_Arraylist_Take(198,4644
void Stack_Tile_Arraylist_Set(208,4887
void Stack_Tile_Arraylist_Swap(229,5345

tz_stack_tile_i.c,315
DEFINE_ZOBJECT_INTERFACE(11,215
void Clean_Stack_Tile_I(23,431
void Print_Stack_Tile_I(32,573
Stack_Tile_I* Make_Stack_Tile_I(39,743
Stack_Tile_I* Read_Stack_Tile_I(50,968
Cuboid_I* Stack_Tile_I_Boundbox(74,1537
int Stack_Tile_I_Width(87,1842
int Stack_Tile_I_Height(92,1925
int Stack_Tile_I_Depth(97,2010

tz_stack_tile_i_arraylist.c,834
const static int Growth_Coeff 16,254
static void stack_tile_i_arraylist_grow(24,426
void Print_Stack_Tile_I_Arraylist(49,1243
Stack_Tile_I_Arraylist* New_Stack_Tile_I_Arraylist(60,1460
Stack_Tile_I_Arraylist* Stack_Tile_I_Arraylist_New(73,1826
void Stack_Tile_I_Arraylist_Free(100,2511
Stack_Tile_I_Arraylist* Make_Stack_Tile_I_Arraylist(106,2605
void Kill_Stack_Tile_I_Arraylist(127,3173
Stack_Tile_I_Arraylist* Stack_Tile_I_Arraylist_Wrap(137,3354
Stack_Tile_I Stack_Tile_I_Arraylist_At(152,3696
Stack_Tile_I Stack_Tile_I_Arraylist_Last(157,3810
Stack_Tile_I* Stack_Tile_I_Arraylist_At_R(162,3923
void Stack_Tile_I_Arraylist_Add(174,4216
void Stack_Tile_I_Arraylist_Insert(183,4406
Stack_Tile_I Stack_Tile_I_Arraylist_Take(198,4786
void Stack_Tile_I_Arraylist_Set(208,5039
void Stack_Tile_I_Arraylist_Swap(229,5507

tz_stack_utils.c,169
ssize_t Stack_Util_Offset(10,141
void Stack_Util_Coord(21,457
void Stack_Util_Coord_A(32,666
double Stack_Util_Voxel_Distance(41,838
size_t Stack_Subindex(100,1730

tz_stack_watershed.c,1422
Watershed_3d* New_Watershed_3d(23,481
void Free_Watershed_3d(37,783
void Kill_Watershed_3d(42,855
Watershed_3d_Workspace * New_Watershed_3d_Workspace(49,986
void Free_Watershed_3d_Workspace(62,1280
void Kill_Watershed_3d_Workspace(67,1358
static int *get_chord(get_chord78,1559
Watershed_3d *Build_3D_Watershed(Build_3D_Watershed94,1895
#define PUSH(207,4136
#define POP(215,4272
#define PUSH_ALL_VOXEL(219,4436
#define PUSH_ALL_VOXEL2(229,4722
#define FIND_COMP_MIN(368,8260
#define PUSH_ALL_INIT_VOXEL(410,9174
#define LABEL_C_PIXEL(418,9363
#define FIND_ALL_WSHED(496,11394
#define ASSIGN_ALL_WSHED(504,11606
#define ASSIGN_BASIN_LABEL(572,13485
DEFINE_ZOBJECT_INTERFACE(712,16595
void Clean_Stack_Watershed_Workspace(724,16849
void Print_Stack_Watershed_Workspace(739,17097
Stack_Watershed_Workspace* Make_Stack_Watershed_Workspace(748,17355
#define STACK_WATERSHED_IS_SEED(757,17606
void Stack_Watershed_Infer_Parameter(760,17730
#define STACK_WATERSHED_ZGAP_BARRIER(801,18660
void Stack_Watershed_Zgap_Barrier(826,19448
#define STACK_WATERSHED_UNLABELED(838,19717
#define STACK_WATERSHED_ENQUEUE(840,19776
#define STACK_WATERSHED_DEQUEUE(849,20014
Stack* Stack_Watershed(858,20242
#define STACK_WATERSHED_CHECK_NEIGHBOR(935,22011
#define STACK_REGION_BORDER_SHRINK_ENQUEUE(977,23094
#define STACK_REGION_BORDER_SHRINK_DEQUEUE(986,23374
Stack* Stack_Region_Border_Shrink(996,23663

tz_string.c,877
void strtrim(9,151
void strrmspc(37,553
char* strsplit(54,789
BOOL String_Ends_With(94,1393
BOOL String_Starts_With(117,1721
void fprint_space(140,2056
int String_First_Integer(150,2193
int String_Last_Integer(167,2437
BOOL Is_Integer(199,2926
BOOL Is_Float(222,3236
BOOL Is_Space(261,3765
int tz_isspace(273,3904
int tz_issemicolon(282,3999
int tz_iscoma(287,4052
int tz_islinebreak(292,4100
int tz_isdlm(297,4171
int Read_Word(303,4284
int Read_Word_D(308,4377
int Count_Word_D(356,5084
int Count_Word_P(390,5509
int Count_Number_D(441,6278
int Count_Integer_D(446,6381
char* Read_Param(452,6552
char* Read_Line(534,8611
static int count_integer(568,9163
int *String_To_Integer_Array(String_To_Integer_Array596,9527
static int count_double(646,10369
double *String_To_Double_Array(String_To_Double_Array675,10758
int File_Line_Number(730,11639

tz_string_workspace.c,299
static inline int string_workspace_asize(5,75
DEFINE_OBJECT_MANAGEMENT(8,186
void Construct_String_Workspace(16,358
void Clean_String_Workspace(24,581
String_Workspace *Make_String_Workspace(Make_String_Workspace32,715
void String_Workspace_Realloc(41,876
void String_Workspace_Grow(48,1069

tz_swc.c,151
int* Swc_Arraylist_Queue(5,66
Graph* Swc_Arraylist_Graph(27,439
Swc_Arraylist* Swc_Arraylist_Rebuild(53,885
void Swc_Arraylist_To_Swc_File(83,1645

tz_swc_arraylist.c,638
const static int Growth_Coeff 16,245
static void swc_arraylist_grow(24,408
void Print_Swc_Arraylist(49,1156
Swc_Arraylist* New_Swc_Arraylist(60,1351
Swc_Arraylist* Swc_Arraylist_New(73,1681
void Swc_Arraylist_Free(100,2286
Swc_Arraylist* Make_Swc_Arraylist(106,2362
void Kill_Swc_Arraylist(127,2859
Swc_Arraylist* Swc_Arraylist_Wrap(133,2935
Swc_Node Swc_Arraylist_At(148,3219
Swc_Node Swc_Arraylist_Last(153,3311
Swc_Node* Swc_Arraylist_At_R(158,3402
void Swc_Arraylist_Add(170,3664
void Swc_Arraylist_Insert(179,3823
Swc_Node Swc_Arraylist_Take(194,4159
void Swc_Arraylist_Set(204,4382
void Swc_Arraylist_Swap(225,4810

tz_swc_cell.c,654
const static char *Swc_Color_Code[Swc_Color_Code13,207
const char* Swc_Node_Color_Code(29,411
Swc_Node* New_Swc_Node(34,503
void Kill_Swc_Node(42,667
void Default_Swc_Node(47,721
Swc_Node* Copy_Swc_Node(59,901
void Swc_Node_Copy(68,1033
void Swc_Node_Fprint(73,1108
void Print_Swc_Node(85,1364
int Swc_Node_Fscan(96,1555
int Swc_File_Record_Number(124,2068
int Swc_Fp_Max_Id(141,2354
int Swc_File_Max_Id(163,2712
Swc_Node* Read_Swc_File(174,2901
Geo3d_Ball* Swc_Node_To_Geo3d_Ball(193,3300
static int swc_cell_compar(206,3555
void Swc_Sort(211,3677
void Swc_Normalize(216,3768
void Swc_File_Cat(241,4208
void Swc_File_Cat_M(276,4944

tz_swc_tree.c,6486
Swc_Tree_Node* New_Swc_Tree_Node(29,617
void Delete_Swc_Tree_Node(47,989
void Clean_Swc_Tree_Node(52,1051
Swc_Tree_Node* Make_Swc_Tree_Node(56,1100
Swc_Tree_Node* Make_Virtual_Swc_Tree_Node(64,1240
void Kill_Swc_Tree_Node(73,1431
void Print_Swc_Tree_Node(79,1534
void Swc_Tree_Node_Copy_Property(123,2509
void Swc_Tree_Node_To_Virtual(130,2678
void Swc_Tree_Node_Kill_Subtree(136,2809
Swc_Node *Swc_Tree_Node_Data(Swc_Tree_Node_Data146,3013
const Swc_Node *Swc_Tree_Node_Const_Data(Swc_Tree_Node_Const_Data151,3088
int Swc_Tree_Node_Id(156,3181
int Swc_Tree_Node_Parent_Id(161,3275
void Swc_Tree_Node_Set_Id(166,3383
void Swc_Tree_Node_Set_Parent_Id(171,3476
int Swc_Tree_Node_Label(176,3583
void Swc_Tree_Node_Set_Label_D(181,3683
void Swc_Tree_Node_Set_Label(198,4134
double Swc_Tree_Node_Radius(203,4239
double Swc_Tree_Node_Weight(208,4339
void Swc_Tree_Node_Set_Weight(213,4418
Swc_Tree_Node* Swc_Tree_Node_Next(218,4510
int Swc_Tree_Node_Fsize(248,5011
Swc_Tree_Node* Swc_Tree_Node_Thickest_Child(277,5546
Swc_Tree_Node* Swc_Tree_Node_Last_Child(296,5917
Swc_Tree_Node* Swc_Tree_Node_Prev_Sibling(309,6159
Swc_Tree_Node* Swc_Tree_Node_Add_Break(329,6682
Swc_Tree_Node* Swc_Tree_Node_Merge_To_Parent(398,8141
void Swc_Tree_Node_Merge_Sibling(448,9605
void Swc_Tree_Node_Set_Root(456,9830
void Swc_Tree_Node_Set_Root_A(485,10530
Swc_Tree_Node* Swc_Tree_Node_Add_Child(518,11185
Swc_Tree_Node* Swc_Tree_Node_Detach_Parent(553,11986
void Swc_Tree_Node_Remove_Child(566,12240
void Swc_Tree_Node_Set_Parent(595,12861
void Swc_Tree_Node_Replace_Child(615,13442
void Swc_Tree_Node_Graft(638,14113
void Swc_Tree_Node_Insert_Before(654,14558
void Swc_Tree_Node_Set_As_First_Child(672,15059
void Swc_Tree_Node_Direction(688,15422
void Swc_Tree_Node_Vector(704,15862
BOOL Swc_Tree_Node_Is_Virtual(734,16795
BOOL Swc_Tree_Node_Is_Regular(745,16957
BOOL Swc_Tree_Node_Is_Root(756,17132
BOOL Swc_Tree_Node_Is_Regular_Root(782,17531
BOOL Swc_Tree_Node_Is_Last_Child(791,17701
double Swc_Tree_Node_Dot(804,17901
BOOL Swc_Tree_Node_Forming_Turn(841,18974
BOOL Swc_Tree_Node_Is_Turn(880,20087
BOOL Swc_Tree_Node_Is_Overshoot(889,20275
BOOL Swc_Tree_Node_Is_Leaf(906,20624
BOOL Swc_Tree_Node_Is_Branch_Point(919,20851
BOOL Swc_Tree_Node_Is_Branch_Point_S(932,21089
BOOL Swc_Tree_Node_Is_Continuation(947,21327
BOOL Swc_Tree_Node_Is_Spur(960,21614
BOOL Swc_Tree_Node_Is_Sibling(971,21821
double Swc_Tree_Node_Dist(983,22042
double Swc_Tree_Node_Backtrace_Weight(999,22533
void Swc_Tree_Node_Label_Branch(1024,23039
void Swc_Tree_Node_Label_Branch_U(1055,23824
double Swc_Tree_Node_Length(1072,24194
void Swc_Tree_Node_Radial_Shrink(1100,24930
void Swc_Tree_Node_Connect(1138,26358
Local_Neuroseg* Swc_Tree_Node_To_Locseg(1225,28805
BOOL Swc_Tree_Node_Hit_Test(1262,29803
BOOL Swc_Tree_Node_Edge(1292,30611
void Swc_Tree_Node_Tune_Fork(1304,30881
void Swc_Tree_Node_Tune_Branch(1337,31525
double Swc_Tree_Node_Average_Thickness(1420,33892
void Print_Swc_Tree_Branch(1476,35037
void Swc_Tree_Get_Branch(1496,35383
void Set_Swc_Tree_Branch(1518,35793
double Swc_Tree_Branch_Length(1540,36149
Swc_Tree* New_Swc_Tree(1562,36508
void Clean_Swc_Tree(1574,36709
void Kill_Swc_Tree(1583,36908
Swc_Tree_Node* Swc_Tree_Regular_Root(1589,36986
Swc_Tree* Read_Swc_Tree(1602,37218
void Write_Swc_Tree(1670,38739
BOOL Swc_Tree_Node_Is_Child(1706,39592
int Swc_Tree_Node_Child_Number(1722,39888
void Print_Swc_Tree(1738,40128
Swc_Tree* Copy_Swc_Tree(1756,40492
int Swc_Tree_Iterator_Start(1798,41388
void Swc_Tree_Iterator_Path(1929,43753
void Swc_Tree_Iterator_Leaf(1965,44399
Swc_Tree_Node* Swc_Tree_Next(1985,44854
int Swc_Tree_Number(1997,45059
Swc_Tree_Node* Swc_Tree_Query_Node(2014,45294
Swc_Tree_Node* Swc_Tree_Query_Node_C(2027,45509
void Swc_Tree_To_Dot_File(2033,45686
void Swc_Tree_Resort_Id(2065,46458
void Swc_Tree_Node_Pos(2084,46892
int Swc_Tree_Node_Type(2091,47090
double Swc_Tree_Node_X(2096,47188
double Swc_Tree_Node_Y(2101,47283
double Swc_Tree_Node_Z(2106,47378
void Swc_Tree_Node_Set_Pos(2111,47473
void Swc_Tree_Remove_Zigzag(2118,47657
void Swc_Tree_Remove_Overshoot(2142,48191
double Swc_Tree_Point_Dist(2159,48535
void Swc_Tree_Leaf_Shrink(2197,49332
void Swc_Tree_Connect_Node(2209,49588
void Swc_Tree_Tune_Fork(2266,51069
void Swc_Tree_Remove_Spur(2276,51279
Swc_Tree_Node* Swc_Tree_Find_Shortest_Terminal_Branch(2291,51641
static Swc_Tree_Node* swc_tree_find_shortest_terminal_branch_i(2324,52428
void Swc_Tree_Remove_Terminal_Branch(2359,53289
void Swc_Tree_Clean_Root(2384,53849
void Swc_Tree_Merge_Close_Node(2421,54813
Swc_Tree_Node* Swc_Tree_Closest_Node(2450,55621
void Swc_Tree_Bound_Box(2491,56515
void Swc_Tree_Tune_Branch(2526,57254
Swc_Tree_Node* Swc_Tree_Largest_Node(2535,57458
Swc_Tree_Node* Swc_Tree_Outmost_Leaf(2553,57845
void Swc_Tree_Reduce(2576,58409
BOOL Swc_Tree_Label_Branch(2603,59108
int Swc_Tree_Label_Branch_All(2617,59479
void Swc_Tree_Svg_Fprint(2651,60279
void Swc_Tree_To_Svg_File_W(2793,63665
void Swc_Tree_To_Analysis_File(3130,73036
void Swc_Tree_To_Svg_File(3246,76548
void Swc_Tree_Merge(3256,76826
void Swc_Tree_Label_Main_Trunk(3288,77575
void Swc_Tree_Label_Main_Trunk_L(3357,79103
Swc_Tree_Node* Swc_Tree_Thickest_Node(3424,80630
Swc_Tree_Node* Swc_Tree_Grow_Soma(3439,81001
void Swc_Tree_Label_Soma(3467,81735
void Swc_Tree_Label_Apical(3524,83060
void Swc_Tree_Glue(3528,83119
void Swc_Tree_Set_Feature(3537,83352
int Swc_Tree_Leaf_Number(3548,83582
int Swc_Tree_Branch_Number(3555,83738
double Swc_Tree_Overall_Length(3589,84502
double* Swc_Tree_Accm_Length(3603,84768
double* Swc_Tree_Accm_Thickness(3624,85221
void Swc_Tree_Regularize(3647,85727
void Swc_Tree_Canonicalize(3664,86087
Swc_Tree* Swc_Tree_Pull_R(3683,86559
BOOL Swc_Tree_Hit_Test(3700,86898
void Swc_Tree_Cut_Node(3715,87203
void Swc_Tree_Subtract(3732,87697
Geo3d_Point_Array* Swc_Tree_Branch_2d_Layout(3752,88300
void Swc_Tree_Merge_Root_Group(3790,89612
Swc_Tree_Node** Swc_Tree_Iterator_Array(3808,90089
double Swc_Tree_Node_Apical_Score(3825,90487
void Swc_Tree_Label_Nw(3830,90581
void swc_tree_node_set_label_d2(3841,90873
void Swc_Tree_Resort_Pyramidal(3858,91339
void Swc_Tree_Set_Type_As_Label(3909,92729
void Swc_Tree_Identify_Puncta(3920,93039
Swc_Tree *Swc_Tree_From_Object_3d(Swc_Tree_From_Object_3d3962,94239
#define SWC_TREE_FROM_OBJECT_3D_ADD_NODE 4009,95699
void Swc_Tree_Resort_Main_Trunk(4099,97934

tz_testdata.c,353
#define INDEX_STACK(16,337
Stack *Index_Stack(Index_Stack21,438
Stack* Line_Stack(32,678
Stack* Tube_Stack(43,1003
Stack* Circle_Image(57,1410
Stack* Ellipse_Mask(89,2202
Stack* Ellipse_Image(116,2820
Stack* Noisy_Ellipse_Image(132,3229
Stack* Two_Circle_Mask(151,3635
Stack* Two_Circle_Image(174,4268
Stack* Noisy_Two_Circle_Image(191,4744

tz_tiff_image.c,187
#define _TIFF_IMAGE2,27
#define PACK_BITS(7,119
#  undef MAX_CHANNEL_NUMBER39,1208
#define MAX_CHANNEL_NUMBER 41,1243
Tiff_IFD *Make_IFD_For_Lsm_Image(Make_IFD_For_Lsm_Image42,1272

tz_trace_utils.c,2114
Trace_Workspace* New_Trace_Workspace(20,381
void Default_Trace_Workspace(28,582
void Clean_Trace_Workspace(67,1630
void Kill_Trace_Workspace(85,1958
void Print_Trace_Workspace(91,2052
void Trace_Workspace_Set_Trace_Status(148,3742
int Trace_Workspace_Mask_Value(155,3939
int Trace_Workspace_Mask_Value_Z(170,4250
BOOL Trace_Workspace_Point_In_Bound(177,4419
BOOL Trace_Workspace_Point_In_Bound_Z(200,4821
Trace_Record* New_Trace_Record(207,5004
void Trace_Workspace_Set_Fit_Mask(216,5183
BOOL Trace_Workspace_Is_Masked(226,5413
void Print_Trace_Status(240,5679
void Reset_Trace_Record(293,6858
void Delete_Trace_Record(306,7110
Trace_Record* Copy_Trace_Record(311,7170
void Trace_Record_Copy(323,7360
void Fprint_Trace_Record(328,7474
void Print_Trace_Record(376,8963
void Trace_Record_Fwrite(382,9052
void Trace_Record_Fwrite_V(402,9691
Trace_Record* Trace_Record_Fread(429,10406
Trace_Record* Trace_Record_Fread_V(474,11515
void Trace_Record_Set_Score(531,12895
void Trace_Record_Set_Hit_Region(539,13107
void Trace_Record_Set_Index(547,13306
void Trace_Record_Set_Refit(555,13480
void Trace_Record_Set_Fit_Height(563,13654
void Trace_Record_Set_Direction(571,13861
void Trace_Record_Set_Fix_Point(579,14069
void Trace_Record_Disable_Fix_Point(587,14258
int Trace_Record_Index(594,14411
int Trace_Record_Refit(607,14608
int Trace_Record_Fit_Height(620,14816
Dlist_Direction_e Trace_Record_Direction(633,15057
double Trace_Record_Fix_Point(646,15296
BOOL Trace_Record_Has_Fix_Point(659,15512
Trace_Evaluate_Seed_Workspace* New_Trace_Evaluate_Seed_Workspace(672,15717
void Default_Trace_Evaluate_Seed_Workspace(683,16022
void Clean_Trace_Evaluate_Seed_Workspace(700,16492
void Kill_Trace_Evaluate_Seed_Workspace(709,16799
PRIVATE void stack_adjust_zpos(715,16934
void Trace_Evaluate_Seed(768,18033
Connection_Test_Workspace* New_Connection_Test_Workspace(900,21607
void Delete_Connection_Test_Workspace(911,21887
void Kill_Connection_Test_Workspace(916,21975
void Default_Connection_Test_Workspace(921,22089
void Connection_Test_Workspace_Read_Resolution(943,22652

tz_tvoxel.c,51
void Copy_Tvoxel(11,146
void Print_Tvoxel(16,238

tz_u16array.c,2920
#    undef HAVE_INLINE11,218
#    define INLINE_SUPPRESSED12,241
#    define HAVE_INLINE17,372
void u16array_error(22,439
void u16array_warning(30,608
tz_uint16 u16array_max(37,770
tz_uint16 u16array_max_l(55,1073
tz_uint16 u16array_min(73,1347
tz_uint16 u16array_min_l(91,1650
tz_uint16 u16array_max_m(110,1966
tz_uint16 u16array_max_ml(145,2493
tz_uint16 u16array_min_m(177,3011
tz_uint16 u16array_min_ml(209,3514
tz_uint16* u16array_add(242,4033
tz_uint16* u16array_addc(250,4175
tz_uint16* u16array_cadd(258,4306
tz_uint16* u16array_sub(264,4414
tz_uint16* u16array_subc(272,4549
tz_uint16* u16array_csub(280,4680
tz_uint16* u16array_mul(285,4787
tz_uint16* u16array_mulc(294,4928
tz_uint16* u16array_div(302,5060
tz_uint16* u16array_div_i(323,5459
tz_uint16* u16array_divc(342,5820
double u16array_dot(356,6048
tz_uint16* u16array_sqr(368,6229
tz_uint16* u16array_sqrt(376,6350
tz_uint16* u16array_scale(397,6728
tz_uint16* u16array_max2(411,7118
tz_uint16* u16array_min2(424,7307
void u16array_threshold(436,7495
tz_uint16* u16array_fun1(451,7912
tz_uint16* u16array_fun1_max(466,8197
tz_uint16* u16array_fun1_i2(499,8801
tz_uint16* u16array_fun1_i2_max(511,9048
tz_uint16* u16array_fun2(543,9626
tz_uint16* u16array_fun3(555,9844
tz_uint16* u16array_cumsum(578,10290
tz_uint16* u16array_cumsum_m(586,10416
tz_uint16* u16array_cumsum2(601,10644
tz_uint16 u16array_sum(622,11026
tz_uint16 u16array_abssum(632,11171
tz_uint16 u16array_sum_h(646,11431
tz_uint16 u16array_centroid(659,11665
double u16array_centroid_d(678,12001
void u16array_linsum1(701,12565
void u16array_linsum2(779,14305
tz_uint16* u16array_blocksum(864,16417
void u16array_linsum1_part(892,16964
void u16array_linsum2_part(991,19188
tz_uint16* u16array_blockmean(1080,21511
tz_uint16* u16array_shiftdim2(1136,22556
tz_uint16 u16array_mean(1156,22914
double u16array_sum_d(1162,23024
double u16array_mean_d(1172,23170
double u16array_mean_d_m(1182,23332
double u16array_var(1201,23645
double u16array_cov(1220,23929
tz_uint16* u16array_malloc(1241,24267
tz_uint16* u16array_calloc(1251,24452
tz_uint16* u16array_malloc2(1260,24596
tz_uint16* u16array_malloc3(1266,24722
tz_uint16* u16array_copy(1272,24864
void u16array_clean_edge3(1280,25067
void u16array_printf(1293,25370
void u16array_print2(1303,25549
void u16array_fprint2(1321,25841
void u16array_print3(1335,26105
int u16array_write(1348,26366
tz_uint16* u16array_read(1365,26650
int u16array_read2(1383,26983
void u16arraycpy(1402,27269
void u16arraycpy2(1407,27400
void u16arraycpy3(1425,27827
void u16array_qsort(1455,28650
  #define  MAX_LEVELS 1457,28707
  #undef MAX_LEVELS1508,29656
int u16array_binsearch(1511,29679
void u16array_myqsort(1541,30186
double u16array_uint8_corrcoef(1596,31151
double u16array_corrcoef_m(1623,31685
double u16array_corrcoef(1651,32240
void u16array_reverse(1680,32717

tz_u8array.c,2795
#    undef HAVE_INLINE11,217
#    define INLINE_SUPPRESSED12,240
#    define HAVE_INLINE17,371
void u8array_error(22,438
void u8array_warning(30,605
tz_uint8 u8array_max(37,765
tz_uint8 u8array_max_l(55,1065
tz_uint8 u8array_min(73,1336
tz_uint8 u8array_min_l(91,1636
tz_uint8 u8array_max_m(110,1949
tz_uint8 u8array_max_ml(145,2473
tz_uint8 u8array_min_m(177,2988
tz_uint8 u8array_min_ml(209,3488
tz_uint8* u8array_add(242,4004
tz_uint8* u8array_addc(250,4142
tz_uint8* u8array_cadd(258,4269
tz_uint8* u8array_sub(264,4372
tz_uint8* u8array_subc(272,4503
tz_uint8* u8array_csub(280,4630
tz_uint8* u8array_mul(285,4732
tz_uint8* u8array_mulc(294,4869
tz_uint8* u8array_div(302,4997
tz_uint8* u8array_div_i(323,5388
tz_uint8* u8array_divc(342,5742
double u8array_dot(356,5964
tz_uint8* u8array_sqr(368,6142
tz_uint8* u8array_sqrt(376,6260
tz_uint8* u8array_scale(397,6633
tz_uint8* u8array_max2(411,7013
tz_uint8* u8array_min2(424,7198
void u8array_threshold(436,7382
tz_uint8* u8array_fun1(451,7795
tz_uint8* u8array_fun1_max(466,8075
tz_uint8* u8array_fun1_i2(499,8671
tz_uint8* u8array_fun1_i2_max(511,8913
tz_uint8* u8array_fun2(543,9484
tz_uint8* u8array_fun3(555,9697
tz_uint8* u8array_cumsum(578,10137
tz_uint8* u8array_cumsum_m(586,10260
tz_uint8* u8array_cumsum2(601,10485
tz_uint8 u8array_sum(622,10863
tz_uint8 u8array_abssum(632,11004
tz_uint8 u8array_sum_h(646,11259
tz_uint8 u8array_centroid(659,11488
double u8array_centroid_d(678,11819
void u8array_linsum1(701,12381
void u8array_linsum2(779,14117
tz_uint8* u8array_blocksum(864,16222
void u8array_linsum1_part(892,16761
void u8array_linsum2_part(991,18978
tz_uint8* u8array_blockmean(1080,21298
tz_uint8* u8array_shiftdim2(1136,22338
tz_uint8 u8array_mean(1156,22692
double u8array_sum_d(1162,22797
double u8array_mean_d(1172,22941
double u8array_mean_d_m(1182,23101
double u8array_var(1201,23412
double u8array_cov(1220,23694
tz_uint8* u8array_malloc(1241,24029
tz_uint8* u8array_calloc(1251,24210
tz_uint8* u8array_malloc2(1260,24350
tz_uint8* u8array_malloc3(1266,24473
tz_uint8* u8array_copy(1272,24612
void u8array_clean_edge3(1280,24809
void u8array_printf(1293,25110
void u8array_print2(1303,25287
void u8array_fprint2(1321,25577
void u8array_print3(1335,25839
int u8array_write(1348,26097
tz_uint8* u8array_read(1365,26378
int u8array_read2(1383,26706
void u8arraycpy(1402,26989
void u8arraycpy2(1407,27116
void u8arraycpy3(1425,27539
void u8array_qsort(1455,28358
  #define  MAX_LEVELS 1457,28413
  #undef MAX_LEVELS1508,29361
int u8array_binsearch(1511,29384
void u8array_myqsort(1541,29888
double u8array_uint8_corrcoef(1596,30847
double u8array_corrcoef_m(1623,31374
double u8array_corrcoef(1651,31924
void u8array_reverse(1680,32396

tz_u8matrix.c,1808
static void u8matrix_error(22,381
static inline size_t u8matrix_asize(30,555
void Default_U8Matrix(33,673
DEFINE_OBJECT_MANAGEMENT(39,750
U8Matrix* Make_3d_U8Matrix(63,1255
void U8Matrix_Copy(73,1446
U8Matrix* Crop_U8Matrix(89,1916
#define MATRIX_BLOCK_STATE_INC(186,4222
void U8Matrix_Copy_Block(201,4563
U8Matrix* U8Matrix_Blocksum(277,6971
U8Matrix* U8Matrix_Blocksum_Part(431,11142
U8Matrix* U8Matrix_Blocksum_Part2(547,13942
U8Matrix* U8Matrix_Blockmean(610,15509
U8Matrix* U8Matrix_Blockmean_Part(664,16659
void U8Matrix_Print(705,17632
void U8Matrix_Print_Part(742,18464
void U8Matrix_Write(779,19444
U8Matrix* U8Matrix_Read(792,19812
tz_uint8 U8Matrix_Max(813,20251
tz_uint8 U8Matrix_Max_P(826,20541
void U8Matrix_Clean_Edge(892,21990
tz_uint8 U8Matrix_Scale(905,22238
U8Matrix* u8array2u8matrix(917,22507
U8Matrix U8Matrix_View_Array(942,23110
void U8Matrix_Set_Zero(961,23415
U8Matrix* Constant_U8Matrix(971,23574
U8Matrix* U8Matrix_Zeros(983,23823
U8Matrix* U8Matrix_Ones(995,24081
U8Matrix* U8Matrix_Add(1000,24187
U8Matrix* U8Matrix_Addc(1011,24490
U8Matrix* U8Matrix_Sub(1019,24652
U8Matrix* U8Matrix_Subc(1030,24955
U8Matrix* U8Matrix_Mul(1038,25119
U8Matrix* U8Matrix_Div(1049,25422
U8Matrix* U8Matrix_Sqr(1061,25753
U8Matrix* U8Matrix_Sqrt(1069,25902
U8Matrix* U8Matrix_Negative(1077,26053
U8Matrix* U8Matrix_Max2(1088,26245
U8Matrix* U8Matrix_Min2(1100,26559
U8Matrix* U8Matrix_Partial_Diff(1112,26875
void U8Matrix_Threshold(1164,27994
#define MATRIX_ABS 1176,28222
U8Matrix* U8Matrix_Eigen3_Coeff2(1179,28247
U8Matrix* U8Matrix_Eigen3_Coeff1(1194,28595
U8Matrix* U8Matrix_Eigen3_Coeff0(1212,29125
U8Matrix* U8Matrix_Eigen3_Coeffd(1232,29717
U8Matrix* U8Matrix_Eigen3_Solution_Score(1273,30839
U8Matrix* U8Matrix_Eigen3_Curvature(1329,32352

tz_unipointer.c,29
void Print_Unipointer(9,114

tz_unipointer_arraylist.c,793
const static int Growth_Coeff 16,252
static void unipointer_arraylist_grow(24,422
void Print_Unipointer_Arraylist(49,1229
Unipointer_Arraylist* New_Unipointer_Arraylist(59,1404
Unipointer_Arraylist* Unipointer_Arraylist_New(72,1762
void Unipointer_Arraylist_Free(99,2431
Unipointer_Arraylist* Make_Unipointer_Arraylist(105,2521
void Kill_Unipointer_Arraylist(126,3075
Unipointer_Arraylist* Unipointer_Arraylist_Wrap(136,3237
unipointer_t Unipointer_Arraylist_At(151,3567
unipointer_t Unipointer_Arraylist_Last(156,3677
unipointer_t* Unipointer_Arraylist_At_R(161,3786
void Unipointer_Arraylist_Add(173,4073
void Unipointer_Arraylist_Insert(182,4257
unipointer_t Unipointer_Arraylist_Take(197,4629
void Unipointer_Arraylist_Set(207,4878
void Unipointer_Arraylist_Swap(228,5338

tz_unipointer_linked_list.c,1025
Unipointer_List* Unipointer_List_New(17,291
void Unipointer_List_Set_Data(26,506
void Unipointer_List_Removeall(37,766
void Unipointer_List_Unlinkall(52,1078
void Kill_Unipointer_List(61,1222
Unipointer_List* Unipointer_List_Add(76,1581
Unipointer_List* Unipointer_List_Add_Last(90,1943
void Unipointer_List_Remove(107,2380
void Unipointer_List_Remove_Last(117,2565
unipointer_t Unipointer_List_Unlink(136,2899
Unipointer_List* Unipointer_List_Next(155,3225
Unipointer_List* Unipointer_List_Last(164,3392
BOOL Unipointer_List_Is_Empty(176,3577
int Unipointer_List_Length(191,3827
unipointer_t* Unipointer_List_To_Array(213,4437
void Print_Unipointer_List(258,5329
void Print_Unipointer_List_Compact(282,5786
void Print_Unipointer_List_F(291,5916
Unipointer_List* Unipointer_Queue_En(313,6360
unipointer_t Unipointer_Queue_De(326,6675
unipointer_t Unipointer_Queue_Peek(334,6887
void Unipointer_Stack_Push(343,7040
unipointer_t Unipointer_Stack_Pop(353,7255
unipointer_t Unipointer_Stack_Peek(358,7351

tz_utilities.c,1183
static struct timeval start_time,19,311
static struct timeval start_time,end_time;19,311
void tic(21,355
tz_int64 toc(26,405
void ptoc(33,559
int fexist(38,603
int fcopy(50,748
const char *fextn(fextn75,1098
char* fname(88,1303
int fhasext(157,2384
int dir_fnum(175,2699
int dir_fnum_p(198,3099
int dir_fnum_s(224,3526
char* fullpath(253,4029
char* fullpath_e(258,4146
void safe_free(286,4677
char* double_binstr(298,4831
    long long c;301,4885
    double d;302,4902
int tz_isnan(323,5185
int tz_isinf(328,5232
char *fgetln(fgetln334,5326
  #  undef FGETLN_MAX_LENGTH337,5400
  #define FGETLN_MAX_LENGTH 340,5439
double Value_Trend(354,5640
int Show_Version(370,5975
void Print_Arguments(391,6368
static inline uint8_t hexchar2num(400,6506
uint32_t Hexstr_To_Uint(413,6768
static inline char num2hexchar(435,7138
char* Uint_To_Hexstr(446,7310
inline static char* uint8_to_hexstr(461,7598
void Fprint_File_Binary(469,7761
size_t fsize(491,8142
int fcmp(511,8438
void *Guarded_Calloc(Guarded_Calloc549,9065
void pow2decomp(566,9406
int pow2sum(582,9562
void Print_Argument_Spec(593,9695
void Memset_Pattern4(600,9792
void rmpath(616,10077

tz_voxel.c,149
Voxel* New_Voxel(11,135
Voxel* Make_Voxel(17,238
void Set_Voxel(25,346
void Delete_Voxel(32,433
void Kill_Voxel(37,477
void Print_Voxel(42,519

tz_voxel_graphics.c,171
#define STACK_TO_VOXEL_LIST(25,476
Voxel_List* Stack_To_Voxel_List(37,803
#define STORE_VOXEL(69,1430
Object_3d* Line_To_Object_3d(86,1944
#undef STORE_VOXEL159,3314

tz_voxel_linked_list.c,844
Voxel_List* Voxel_List_New(17,271
void Voxel_List_Set_Data(26,456
void Voxel_List_Removeall(37,696
void Voxel_List_Unlinkall(52,988
void Kill_Voxel_List(61,1117
Voxel_List* Voxel_List_Add(76,1456
Voxel_List* Voxel_List_Add_Last(90,1778
void Voxel_List_Remove(107,2170
void Voxel_List_Remove_Last(117,2340
Voxel_P Voxel_List_Unlink(136,2649
Voxel_List* Voxel_List_Next(155,2945
Voxel_List* Voxel_List_Last(164,3092
BOOL Voxel_List_Is_Empty(176,3252
int Voxel_List_Length(191,3487
Voxel_P* Voxel_List_To_Array(213,4082
void Print_Voxel_List(258,4919
void Print_Voxel_List_Compact(282,5341
void Print_Voxel_List_F(291,5461
Voxel_List* Voxel_Queue_En(313,5885
Voxel_P Voxel_Queue_De(326,6160
Voxel_P Voxel_Queue_Peek(334,6347
void Voxel_Stack_Push(343,6485
Voxel_P Voxel_Stack_Pop(353,6670
Voxel_P Voxel_Stack_Peek(358,6746

tz_voxel_linked_list_ext.c,43
Object_3d* Voxel_List_To_Object_3d(10,164

tz_voxeltrans.c,56
void Voxel_To_Tvoxel(8,83
void Tvoxel_To_Voxel(15,185

tz_vrml_io.c,2007
void Vrml_Head_Fprint(21,415
void Vrml_SFFloat_Fprint(26,544
void Vrml_SFColor_Fprint(31,627
void Vrml_SFBool_Fprint(36,745
void Vrml_SFVec3f_Fprint(45,888
void Vrml_SFVec3f_Set(50,998
void Vrml_SFFloat_Field_Fprint(57,1110
void Vrml_SFColor_Field_Fprint(64,1272
void Vrml_SFBool_Field_Fprint(71,1440
void Vrml_SFVec3f_Field_Fprint(78,1599
void Vrml_SFFloat_Field_Fprintln(85,1763
void Vrml_SFColor_Field_Fprintln(93,1958
void Vrml_SFBool_Field_Fprintln(101,2160
void Vrml_SFVec3f_Field_Fprintln(109,2354
void Vrml_Sphere_Fprint(117,2554
void Vrml_Cone_Fprint(128,2880
void Vrml_Box_Fprint(149,3645
void Vrml_Cylinder_Fprint(157,3890
void Vrml_Node_Begin_Fprint(169,4457
void Vrml_Node_End_Fprint(175,4599
void Vrml_Children_Begin_Fprint(185,4816
void Vrml_Children_End_Fprint(191,4934
void Vrml_Geometry_Fprint(197,5056
void Vrml_Appearance_Fprint(219,5653
void Vrml_Shape_Fprint(228,5984
void Vrml_Sphere_Fprint(237,6307
void Vrml_Polygon_Fprint(248,6565
static void circle_points(281,7414
void Vrml_Disk_Fprint(296,7716
#define VRML_NEUROSEG_SHAPE_FPRINT_TRANSFORM	308,8023
void Vrml_Platform_Fprint(316,8323
void Vrml_Platform_Fprint_M(420,11997
void Vrml_Neuroseg_Fprint(527,15178
void Vrml_Local_Neuroseg_Fprint(549,15926
static void local_neuroseg_to_geo3d_circle(558,16147
static void vrml_neurochain_get_locseg(583,16845
static Geo3d_Circle* neurochain_to_geo3d_circle_array(597,17205
void Vrml_Neurochain_Get_Locseg(624,17927
void Vrml_Neurochain_Fprint(630,18062
void Vrml_Neurochain_Fprint_M(671,19306
void Vrml_Neurochain_Fprint_C(713,20631
static double polygon_match_score(744,21668
static void register_polygon(779,22604
static void space_circle_points(794,22929
double static norm_radian(814,23428
static void norm_theta_psi(826,23584
void Vrml_Circle_Platform_Fprint(835,23807
void Vrml_Circle_Platform_Fprint_M(883,25505
void Vrml_Material_Fprint(941,27401
void Vrml_Pm_Triangle_Fprint(975,28870
void Vrml_Pm_Rectangle_Fprint(1013,30110

tz_vrml_material.c,108
Vrml_Material* New_Vrml_Material(11,163
void Delete_Vrml_Material(35,818
void Print_Vrml_Material(40,892

tz_vrml_utils.c,37
void Vrml_Vector_Orientation(20,359

tz_workspace.c,1464
Locseg_Label_Workspace* New_Locseg_Label_Workspace(11,227
void Reset_Locseg_Label_Workspace(22,482
void Delete_Locseg_Label_Workspace(41,833
void Clean_Locseg_Label_Workspace(46,913
void Kill_Locseg_Label_Workspace(59,1162
Receptor_Score_Workspace* New_Receptor_Score_Workspace(65,1301
void Print_Locseg_Label_Workspace(75,1569
void Default_Receptor_Score_Workspace(87,2074
void Delete_Receptor_Score_Workspace(95,2244
void Clean_Receptor_Score_Workspace(100,2328
void Kill_Receptor_Score_Workspace(108,2476
void Print_Receptor_Score_Workspace(114,2623
void Receptor_Score_Workspace_Copy(131,3150
void Clean_Receptor_Fit_Workspace(138,3321
void Default_Receptor_Fit_Workspace(158,3707
DEFINE_ZOBJECT_INTERFACE(165,3832
Locseg_Fit_Workspace* New_Locseg_Fit_Workspace(173,4047
void Default_Locseg_Fit_Workspace(184,4309
void Default_Rpi_Locseg_Fit_Workspace(207,4940
void Locseg_Fit_Workspace_Enable_Cone(228,5553
void Locseg_Fit_Workspace_Disable_Cone(238,5836
void Print_Locseg_Fit_Workspace(250,6156
void Locseg_Fit_Workspace_Set_Var(270,6690
Locseg_Ellipse_Fit_Workspace* New_Locseg_Ellipse_Fit_Workspace(278,6921
void Default_Locseg_Ellipse_Fit_Workspace(289,7239
void Default_Locseg_Chain_Skel_Workspace(312,7951
void Clean_Locseg_Chain_Skel_Workspace(321,8111
void Print_Locseg_Chain_Skel_Workspace(327,8268
DEFINE_ZOBJECT_INTERFACE(332,8417
void Clean_Swc_Tree_Svg_Workspace(348,8757
void Print_Swc_Tree_Svg_Workspace(363,9056

tz_xml_utils.c,776
char* Xml_String_To_String(8,130
BOOL Xml_Node_Is_Element(22,387
char* Xml_Node_String_Value(35,616
double Xml_Node_Double_Value(49,918
int Xml_Node_Int_Value(59,1113
int Xml_Coordinate(69,1299
int Xml_Stack_Doc_File_Bundle(109,2410
int Xml_Stack_Doc_File_Bundle_R(171,3978
int Xml_Stack_Doc_File_Path(240,5785
int Xml_Stack_Doc_File_Path_R(268,6365
Stack_Document* Xml_Stack_Document(303,7180
Stack_Document* Xml_Stack_Document_R(370,9091
Stack_Document* Xml_Read_Stack_Document(438,11052
void Svg_Header_Fprint(474,11689
void Svg_Begin_Fprint(486,12077
void Svg_End_Fprint(505,12552
void Svg_Line_Fprint(512,12663
void Svg_Line_Fprint_C(520,12961
void Svg_Circle_Fprint(528,13292
void Svg_Text_Fprint(536,13562
void Svg_Polygonal_Chain_Fprint(551,13918

tz_xz_orientation.c,134
void Print_Xz_Orientation(10,150
void Set_Xz_Orientation(15,247
double Xz_Orientation_Dot(21,358
void Xz_Orientation_Cross(35,785

tz_3dgeom.h,28
#define _TZ_3DGEOM_H_8,118

tz_array.h,26
#define _TZ_ARRAY_H_7,94

tz_arrayqueue.h,250
#define _TZ_ARRAY_QUEUE_8,119
typedef struct _Arrayqueue 19,262
  int head;20,291
  int tail;21,323
  int capacity;22,355
  int *array;array23,388
} Arrayqueue;24,421
#define ARRAYQUEUE_ADD_LAST(65,1483
#define ARRAYQUEUE_ADD_FIRST(71,1604

tz_arraytrans.h,853
#define _TZ_ARRAYTRANS_H_25,388
#    undef HAVE_INLINE37,654
#    define INLINE_SUPPRESSED38,677
#    define HAVE_INLINE42,779
#define IMAGE_AT 48,835
#define STACK_AT 49,872
#define DMATRIX_AT 50,909
#define FMATRIX_AT 51,946
#define IMATRIX_AT 52,983
#define U8MATRIX_AT 53,1020
#define GSL_MATRIX_AT 54,1057
#define GSL_FLOAT_MATRIX_AT 55,1095
#define GSL_UCHAR_MATRIX_AT 56,1133
#define GSL_USHORT_MATRIX_AT 57,1171
#define GSL_DOUBLE_MATRIX_AT 58,1209
#define GSL_VECTOR_AT 59,1247
#define GSL_FLOAT_VECTOR_AT 60,1285
#define GSL_UCHAR_VECTOR_AT 61,1323
#define GSL_USHORT_VECTOR_AT 62,1361
#define GSL_DOUBLE_VECTOR_AT 63,1399
#define MX_ARRAY_AT 64,1437
#define MATLAB_ARRAY_AT 65,1475
#define OBJECT_3D_AT 66,1513
typedef struct tag_Array_Link 80,2181
  void *data;data81,2213
  int type;82,2227
} Array_Link;83,2239

tz_arrayview.h,129
#define _TZ_ARRAYVIEW_H_8,118
#    undef HAVE_INLINE13,212
#    define INLINE_SUPPRESSED14,235
#    define HAVE_INLINE18,337

tz_bifold_neuroseg.h,1100
#define _TZ_BIFOLD_NEUROSEG_H_8,134
#define BIFOLD_NEUROSEG_NPARAM 16,263
#define BIFOLD_NEUROSEG_MIN_KNOT 18,298
#define BIFOLD_NEUROSEG_MAX_KNOT 19,336
typedef struct _Bifold_Neuroseg 21,375
  double r1;22,409
  double r2;23,422
  double r3;24,435
  double r4;25,448
  double h;26,461
  double knot;27,473
  double theta2;28,488
  double psi2;29,505
  double theta;30,520
  double psi;31,536
} Bifold_Neuroseg;32,550
typedef Bifold_Neuroseg* Bifold_Neuroseg_P;34,570
#define BIFOLD_NEUROSEG_VAR_MASK_R1 51,1194
#define BIFOLD_NEUROSEG_VAR_MASK_R2 52,1253
#define BIFOLD_NEUROSEG_VAR_MASK_R3 53,1312
#define BIFOLD_NEUROSEG_VAR_MASK_R4 54,1371
#define BIFOLD_NEUROSEG_VAR_MASK_R 55,1430
#define BIFOLD_NEUROSEG_VAR_MASK_H 56,1489
#define BIFOLD_NEUROSEG_VAR_MASK_KNOT 57,1548
#define BIFOLD_NEUROSEG_VAR_MASK_THETA2 58,1607
#define BIFOLD_NEUROSEG_VAR_MASK_PSI2 59,1666
#define BIFOLD_NEUROSEG_VAR_MASK_ORIENTATION2 60,1725
#define BIFOLD_NEUROSEG_VAR_MASK_THETA 61,1784
#define BIFOLD_NEUROSEG_VAR_MASK_PSI 62,1843
#define BIFOLD_NEUROSEG_VAR_MASK_ORIENTATION 63,1902

tz_bitmask.h,253
#define _TZ_BITMASK_UTILS_H_ 8,117
#define MASK_BIT_NUMBER 19,279
#define FIRST_BIT_MASK 23,471
#define LAST_BIT_MASK 24,539
#define ZERO_BIT_MASK 25,608
#define ALL_ON_BIT_MASK 26,667
typedef tz_uint32 Bitmask_t;28,727
#define bitmask_t 29,756

tz_color.h,315
#define _TZ_COLOR_H_8,108
const static uint8_t Jet_Colormap[Jet_Colormap15,191
typedef struct _Rgb_Color 34,898
  uint8_t r;35,926
  uint8_t g;36,939
  uint8_t b;37,952
} Rgb_Color;38,965
typedef struct _Tiff_Colormap 79,2047
  int length;80,2079
  uint16_t *array;array81,2093
} Tiff_Colormap;82,2112

tz_complex.h,90
#define _TZ_COMPLEX_H_7,96
#define COMPLEX_DEFINE_API(22,383
COMPLEX_DEFINE_API(35,828

tz_constant.h,235
#define _TZ_CONSTANT_H_8,120
#define TZ_PI 10,145
#define TZ_PI_2 11,204
#define TZ_PI_4 12,265
#define TZ_2PI 13,326
#define TZ_GOLDEN_SEC 14,387
#define TZ_SQRT2 16,459
#define TZ_SQRT3 17,490
#define MAX_PATH_LENGTH 19,522

tz_cont_fun.h,534
#define _TZ_CONT_FUN_H_8,125
typedef struct _Variable_Set 14,188
  double *var;var15,219
  int *var_index;var_index16,266
  int *link;link17,319
  int nvar;18,389
} Variable_Set;19,433
typedef struct _Variable_Set_View 21,450
  Variable_Set vs;22,486
} Variable_Set_View;23,505
typedef void (*Validator_f)Validator_f36,1040
typedef struct _Continuous_Function 39,1128
  double (*f)f40,1166
  Validator_f v;41,1231
  double *var_min;var_min42,1248
  double *var_max;var_max43,1294
} Continuous_Function;44,1340

tz_coordinate_3d.h,148
#define _TZ_COORDINATE_3D_H_8,129
typedef double coordinate_3d_t[coordinate_3d_t24,527
typedef double *coordinate_3d_tp;coordinate_3d_tp25,562

tz_cuboid_i.h,156
#define _TZ_CUBOID_I_H_8,128
typedef struct _Cuboid_I 15,215
  int cb[cb16,242
  int ce[ce17,276
} Cuboid_I;18,309
DECLARE_ZOBJECT_INTERFACE(20,322

tz_darray.h,28
#define _TZ_DARRAY_H_7,105

tz_dimage_lib.h,32
#define _TZ_DIMAGE_LIB_H_7,113

tz_dmatrix.h,155
#define _TZ_DMatrix_H_12,176
  ndim_t ndim;36,716
  dim_t dim[dim37,731
  double *array;array38,753
} DMatrix;39,770
#define DMatrix_Print 68,2104

tz_double_linked_list.h,162
#define _TZ_Double_LINKED_LIST_H_14,243
typedef struct _Double_List 20,316
  double data;21,346
  struct _Double_List *next;next22,361
} Double_List;23,390

tz_doubly_linked_list_defs.h,525
#define _TZ_DOUBLY_LINKED_LIST_DEFS_H_8,171
#define DL_UNDEFINED 14,249
  DL_FORWARD 26,617
  DL_FORWARD = 1, DL_BACKWARD 26,617
  DL_FORWARD = 1, DL_BACKWARD = -1, DL_BOTHDIR 26,617
  DL_FORWARD = 1, DL_BACKWARD = -1, DL_BOTHDIR = 0, DL_UNKNOWN 26,617
} Dlist_Direction_e;27,685
typedef enum {DL_HEAD DL_HEAD35,845
typedef enum {DL_HEAD = -1, DL_TAIL 35,845
typedef enum {DL_HEAD = -1, DL_TAIL = 1, DL_UNKNOWN_END}DL_UNKNOWN_END35,845
typedef enum {DL_HEAD = -1, DL_TAIL = 1, DL_UNKNOWN_END} Dlist_End_e;35,845

tz_error.h,1270
#define _TZ_ERROR_H_8,113
#define ERROR_FREE 21,293
#define SUCCESS 22,363
#define USER_ERROR_START 24,391
  ERROR_IO_OPEN 30,599
  ERROR_IO_OPEN = USER_ERROR_START,30,599
  ERROR_IO_WRITE,31,671
  ERROR_IO_READ,32,743
  ERROR_IO_FORMAT,33,815
  ERROR_DATA_TYPE,34,887
  ERROR_DATA_COMPTB,35,959
  ERROR_MALLOC,36,1031
  ERROR_POINTER_NULL,37,1103
  ERROR_DATA_VALUE,38,1175
  ERROR_CODE_BUG,39,1247
  ERROR_NA_FUNC,40,1319
  EXCEPTION_THROWN,41,1391
  ERROR_UNKNOWN,42,1463
  ERROR_ASSERT_FAILED,43,1535
  ERROR_OBSOLETE_FUNC,44,1608
  ERROR_PART_FUNC,45,1680
  TRACE_FLAG,46,1752
  ERROR_OTHER,47,1824
# define TRACE(66,2309
# define TZ_ERROR(70,2384
# define TZ_WARN(73,2473
#define PRINT_EXCEPTION(80,2697
#define ASSERT 90,3026
#define TZ_ASSERT(91,3076
#define TZ_PRIOR_ASSERT(101,3384
# define TRACE(118,3818
# define TZ_ERROR(120,3851
# define TZ_WARN(122,3903
#define PRINT_EXCEPTION(125,3958
#undef assert134,4330
#define assert(135,4344
#define ASSERT 137,4373
#define TZ_ASSERT(138,4423
#define THROW(145,4542
#  define INIT_EXCEPTION	149,4608
#  define INIT_EXCEPTION_MAIN(153,4738
#  define THROW(158,4880
#  define INIT_EXCEPTION159,4925
#  define INIT_EXCEPTION_MAIN(160,4950
#define ASSERT_NOT_NULL(164,5016

tz_farray.h,28
#define _TZ_FARRAY_H_7,104

tz_fftw.h,86
#define TZ_FFTW_H_12,143
#define R2C_LENGTH(19,226
typedef double fftw_comp;24,317

tz_fftw_header.h,338
#define _TZ_FFTW_HEADER_H_8,135
typedef double fftw_complex[fftw_complex18,269
typedef float fftwf_complex[fftwf_complex19,301
#  define FFTW_CONCAT(20,333
#  define FFTW_MANGLE_DOUBLE(21,384
#  define FFTW_MANGLE_FLOAT(22,444
#  define FFTW_MANGLE_LONG_DOUBLE(23,504
#  define fftw_malloc 25,592
#  define fftwf_malloc 26,621

tz_fftwf.h,87
#define TZ_FFTWF_H_12,146
#define R2C_LENGTH(19,230
typedef float fftwf_comp;24,321

tz_fimage_lib.h,32
#define _TZ_FIMAGE_LIB_H_7,112

tz_fmatrix.h,154
#define _TZ_FMatrix_H_12,175
  ndim_t ndim;36,714
  dim_t dim[dim37,729
  float *array;array38,751
} FMatrix;39,767
#define FMatrix_Print 68,2097

tz_geo3d_ball.h,254
#define _TZ_GEO3D_BALL_H_8,116
typedef struct _Geo3d_Ball 20,316
  double r;21,345
  double center[center22,372
} Geo3d_Ball;23,407
typedef Geo3d_Ball* Geo3d_Ball_P;25,422
#define NEUROCOMP_GEO3D_BALL(27,457
#define GEO3D_BALL_FIELD_SIZE 43,988

tz_geo3d_circle.h,272
#define _TZ_GEO3D_CIRCLE_H_8,122
typedef struct _Geo3d_Circle 22,389
  double radius;23,420
  double center[center24,452
  xz_orientation_t orientation;25,499
} Geo3d_Circle;26,551
typedef Geo3d_Circle* Geo3d_Circle_P;28,568
#define NEUROCOMP_GEO3D_CIRCLE(30,607

tz_geo3d_circle_stack.h,41
#define _TZ_GEO3D_CIRCLE_STACK_H_ 8,142

tz_geo3d_cuboid.h,174
#define _TZ_GEO3D_CUBOID_H_8,119
typedef struct _Geo3d_Cuboid 15,210
  double cb[cb16,241
  double ce[ce17,257
} Geo3d_Cuboid;18,273
DECLARE_ZOBJECT_INTERFACE(20,290

tz_geo3d_ellipse.h,326
#define _TZ_GEO3D_ELLIPSE_H_8,125
typedef struct _Geo3d_Ellipse 24,511
  double radius;25,543
  double scale;26,580
  double alpha;27,622
  coordinate_3d_t center;28,652
  xz_orientation_t orientation;29,705
} Geo3d_Ellipse;30,757
typedef Geo3d_Ellipse* Geo3d_Ellipse_P;32,775
#define NEUROCOMP_GEO3D_ELLIPSE(34,816

tz_geo3d_point_array.h,204
#define _TZ_GEO3D_POINT_ARRAY_H_ 8,137
typedef struct _Geo3d_Point_Array 60,1891
  int n;61,1927
  coordinate_3d_t *array;array62,1936
} Geo3d_Point_Array;63,1962
DECLARE_ZOBJECT_INTERFACE(65,1984

tz_geo3d_scalar_field.h,732
#define _TZ_GEO3D_SCALAR_FIELD_H_8,141
typedef struct _Geo3d_Scalar_Field 28,684
  int size;29,721
  coordinate_3d_t *points;points30,774
  double *values;values31,836
} Geo3d_Scalar_Field;32,904
  STACK_FIT_DOT 35,934
  STACK_FIT_CORRCOEF,36,978
  STACK_FIT_EDOT,37,1035
  STACK_FIT_STAT,38,1095
  STACK_FIT_PDOT,39,1146
  STACK_FIT_MEAN_SIGNAL,40,1209
  STACK_FIT_CORRCOEF_SC,41,1275
  STACK_FIT_DOT_CENTER,42,1339
  STACK_FIT_OUTER_SIGNAL,43,1404
  STACK_FIT_VALID_SIGNAL_RATIO,44,1465
  STACK_FIT_LOW_MEAN_SIGNAL,45,1530
#define STACK_FIT_SCORE_NUMBER 49,1660
typedef struct _Stack_Fit_Score 51,1696
  int n;52,1730
  double scores[scores53,1796
  int options[options54,1867
} Stack_Fit_Score;55,1930

tz_geo3d_transform.h,37
#define _TZ_GEO3D_TRANSFORM_H_7,108

tz_geo3d_utils.h,34
#define _TZ_GEO3D_UTILS_H_ 8,136

tz_geo3d_vector.h,198
#define _TZ_GEO3D_VECTOR_H_8,122
typedef struct tagGeo3d_Vector 16,241
  double x;17,274
  double y;18,286
  double z;19,298
} Geo3d_Vector;20,310
typedef Geo3d_Vector* Geo3d_Vector_P;22,327

tz_geoangle_utils.h,36
#define _TZ_GEOANGLE_UTILS_H_8,136

tz_geometry.h,30
#define _TZ_GEOMETRY_H_8,117

tz_graph.h,27
#define _TZ_GRAPH_H_8,111

tz_graph_defs.h,2480
#define _TZ_GRAPH_DEFS_H_8,130
  GENERAL_GRAPH 17,291
  GENERAL_GRAPH = 0, TREE_GRAPH,17,291
  GENERAL_GRAPH = 0, TREE_GRAPH, COMPLETE_GRAPH,17,291
} Graph_Structure_e;18,341
typedef int graph_edge_t[graph_edge_t20,363
#define Graph_Edge_t 22,393
const static int Max_Edge_Capacity 23,462
typedef struct _Graph 29,587
  BOOL directed;30,611
  Graph_Structure_e type;31,690
  int nvertex;32,742
  int nedge;33,795
  int edge_capacity;34,845
  graph_edge_t *edges;edges35,906
  double *weights;weights36,951
} Graph;37,1026
#define GRAPH_VERTEX_NUMBER(39,1036
#define GRAPH_EDGE(41,1089
#define GRAPH_EDGE_NODE(42,1136
#define GRAPH_EDGE_NUMBER(43,1199
#define GRAPH_EDGE_WEIGHT(44,1249
#define GRAPH_NUMBER_OF_NEIGHBORS(46,1308
#define GRAPH_NEIGHBOR_OF(47,1372
typedef enum _Graph_Workspace_Field_e 71,2634
  GRAPH_WORKSPACE_FIELD_BEGIN 72,2674
  GRAPH_WORKSPACE_CONNECTION 73,2709
  GRAPH_WORKSPACE_PARENT,74,2743
  GRAPH_WORKSPACE_CHILD,75,2769
  GRAPH_WORKSPACE_WEIGHT,76,2794
  GRAPH_WORKSPACE_MINDIST,77,2820
  GRAPH_WORKSPACE_IDX,78,2847
  GRAPH_WORKSPACE_DEGREE,79,2870
  GRAPH_WORKSPACE_IN_DEGREE,80,2896
  GRAPH_WORKSPACE_OUT_DEGREE,81,2925
  GRAPH_WORKSPACE_VLIST,82,2955
  GRAPH_WORKSPACE_ELIST,83,2980
  GRAPH_WORKSPACE_DLIST,84,3005
  GRAPH_WORKSPACE_EDGE_TABLE,85,3030
  GRAPH_WORKSPACE_EDGE_MAP,86,3060
  GRAPH_WORKSPACE_STATUS,87,3088
  GRAPH_WORKSPACE_FIELD_END88,3114
} Graph_Workspace_Field_e;89,3142
typedef struct _Graph_Workspace 91,3170
  Bitmask_t allocated;92,3204
  Bitmask_t ready;93,3273
  int nvertex;94,3342
  int nedge;95,3390
  int **connection;connection96,3435
  int connection_psize;97,3455
  int **parent;parent98,3479
  int parent_psize;99,3495
  int **child;child100,3515
  int child_psize;101,3530
  double **weight;weight102,3549
  int weight_psize;103,3568
  double **mindist;mindist104,3588
  int mindist_psize;105,3608
  int **idx;idx106,3629
  int idx_psize;107,3642
  int *degree;degree108,3659
  int *in_degree;in_degree109,3679
  int *out_degree;out_degree110,3699
  int *vlist;vlist111,3719
  int *elist;elist112,3739
  double *dlist;dlist113,3759
  Hash_Table *edge_table;edge_table114,3776
  Int_Arraylist *edge_map;edge_map115,3802
  uint8_t *status;status116,3831
  char edge_entry[edge_entry117,3850
} Graph_Workspace;118,3873
typedef struct _Graph_Path 120,3893
  int length;121,3922
  int *path;path122,3936
} Graph_Path;123,3951

tz_graph_utils.h,34
#define _TZ_GRAPH_UTILS_H_ 8,130

tz_gsl_linalg.h,130
#define _TZ_GSL_LINALG_H_8,140
#    undef HAVE_INLINE14,236
#    define INLINE_SUPPRESSED15,259
#    define HAVE_INLINE19,361

tz_iarray.h,28
#define _TZ_IARRAY_H_7,102

tz_iimage_lib.h,32
#define _TZ_IIMAGE_LIB_H_7,110

tz_image_array.h,33
#define _TZ_IMAGE_ARRAY_H_8,136

tz_image_attribute.h,152
#define _TZ_STACK_ATTRIBUTE_H_12,252
static inline int Image_Width(23,461
static inline int Image_Height(30,581
static inline int Image_Kind(37,702

tz_image_code.h,32
#define _TZ_IMAGE_CODE_H_8,139

tz_image_disp.h,29
#define _IMAGE_DISP_H_7,109

tz_image_io.h,3132
#define _TZ_IMAGEIO_H_8,113
#  define TIF_CZ_LSMINFO 16,229
#  define CZ_LSMINFO_MAGIC_NUMBER13 20,302
#  define CZ_LSMINFO_MAGIC_NUMBER14 24,392
#define CZ_LSMINFO_DIMX_OFFSET 27,448
#define CZ_LSMINFO_DIMY_OFFSET 28,481
#define CZ_LSMINFO_DIMZ_OFFSET 29,515
typedef struct _Cz_Lsminfo 65,1612
  uint32_t u32MagicNumber;66,1641
  int32_t s32StructureSize;67,1668
  int32_t s32DimensionX;68,1696
  int32_t s32DimensionY;69,1721
  int32_t s32DimensionZ;70,1746
  int32_t s32DimensionChannels;71,1771
  int32_t s32DimensionTime;72,1803
  int32_t s32DataType;73,1831
  int32_t s32ThumbnailX;74,1870
  int32_t s32ThumbnailY;75,1910
  double f64VoxelSizeX;76,1959
  double f64VoxelSizeY;77,1998
  double f64VoxelSizeZ;78,2037
  double f64OriginX;79,2065
  double f64OriginY;80,2086
  double f64OriginZ;81,2107
  uint16_t u16ScanType;82,2128
  uint16_t u16SpectralScan;83,2152
  uint32_t u32DataType;84,2180
  uint32_t u32OffsetVectorOverlay;85,2204
  uint32_t u32OffsetInputLut;86,2239
  uint32_t u32OffsetOutputLut;87,2269
  uint32_t u32OffsetChannelColors;88,2300
  double f64TimeInterval;89,2335
  uint32_t u32OffsetChannelDataTypes;90,2361
  uint32_t u32OffsetScanInformation;91,2399
  uint32_t u32OffsetKsData;92,2436
  uint32_t u32OffsetTimeStamps;93,2464
  uint32_t u32OffsetEventList;94,2496
  uint32_t u32OffsetRoi;95,2527
  uint32_t u32OffsetBleachRoi;96,2552
  uint32_t u32OffsetNextRecording;97,2583
  double f64DisplayAspectX;98,2618
  double f64DisplayAspectY;99,2646
  double f64DisplayAspectZ;100,2674
  double f64DisplayAspectTime;101,2702
  uint32_t u32OffsetMeanOfRoisOverlay;102,2733
  uint32_t u32OffsetTopolsolineOverlay;103,2772
  uint32_t u32OffsetTopoProfileOverlay;104,2812
  uint32_t u32OffsetLinescanOverlay;105,2852
  uint32_t u32ToolbarFlags;106,2889
  uint32_t u32OffsetChannelWavelength;107,2917
  uint32_t u32OffsetChannelFactors;108,2956
  double f64objectiveSphereCorrection;109,2992
  uint32_t u32OffsetunmixParameters;110,3031
  uint32_t     u32Reserved[u32Reserved111,3068
} Cz_Lsminfo;112,3100
typedef struct _Lsm_Scan_Info 114,3115
  uint32_t u32Entry;115,3147
  uint32_t u32Type;116,3168
  uint32_t u32Size;117,3188
  void *data;data118,3208
} Lsm_Scan_Info;119,3222
typedef struct _Lsm_Channel_Colors 121,3240
  int32_t s32BlockSize;122,3277
  int32_t s32NumberColors;123,3301
  int32_t s32NumberNames;124,3328
  int32_t s32ColorsOffset;125,3354
  int32_t s32NamesOffset;126,3381
  int32_t s32Mono;127,3407
  int32_t s32Reserved[s32Reserved128,3426
} Lsm_Channel_Colors;129,3452
typedef struct _Lsm_Lookup_Table 131,3475
  uint32_t u32Size;132,3510
  uint32_t u32NumberSubBlocks;133,3530
  uint32_t u32NumberChannels;134,3561
  uint32_t u32LutType;135,3591
  uint32_t u32Advanced;136,3614
  uint32_t u32CurrentChannel;137,3638
  uint32_t u32Reserved[u32Reserved138,3668
  void *data;data139,3695
} Lsm_Lookup_Table;140,3709
typedef struct _File_Bundle_S 143,3765
  char *prefix;prefix144,3797
  char *suffix;suffix145,3813
  int   num_width;146,3829
  int   first_num;147,3909
} File_Bundle_S;148,3928

tz_image_lib.h,30
#define TZ_IMAGE_LIB_H_7,107

tz_image_lib_defs.h,2059
#define _TZ_IMAGE_LIB_DEFS_H_8,149
#define MAXVALUE_GREY 24,411
#define MAXVALUE_GREY16 25,437
#define STACK_DEPTH_MAX 26,467
#define FLOAT64 29,524
#define FCOLOR 30,542
#define DCOLOR 31,560
#define GREY8 32,578
#define GREY32 33,597
#define GREY64 34,620
typedef double float64;38,672
typedef uint8 color_t[color_t39,696
typedef float fcolor_t[fcolor_t40,722
typedef double dcolor_t[dcolor_t41,749
typedef union _Image_Array 47,849
  uint8 *array;array48,878
  uint8 *array8;array849,922
  uint16 *array16;array1650,966
  float *array32;array3251,1011
  double *array64;array6452,1057
  color_t *arrayc;arrayc53,1102
} Image_Array;54,1150
#define CREATE_IMAGE_ARRAY(56,1166
#define VALIDATE_INTENSITY_GREY(60,1259
#define VALIDATE_INTENSITY_GREY8 67,1404
#define VALIDATE_INTENSITY_GREY16(69,1464
#define VALIDATE_INTENSITY_FLOAT32(76,1615
#define VALIDATE_INTENSITY_GREY32(77,1658
#define VALIDATE_INTENSITY_FLOAT64(78,1700
#define VALIDATE_INTENSITY_GREY64(79,1743
#define VALIDATE_INTENSITY_COLOR(81,1786
#define MAXGREY(87,1962
#define IMAGE_MAX(94,2131
#define IMAGE_MIN(112,2698
#define DEFINE_PIXEL(130,3288
#define DEFINE_PIXEL_ALL(135,3440
#define DEFINE_ARRAY(146,3813
#define DEFINE_SCALAR_ARRAY_ALL(151,3987
#define DEFINE_ARRAY_ALL(159,4331
#define SCALAR_STACK_OPERATION(168,4602
#define STACK_ARRAY_OPERATION(188,5163
typedef struct tagTree_Code 207,5673
  tz_uint16 level;208,5703
  tz_uint16 branch;209,5722
  int link;210,5742
} Tree_Code;211,5771
typedef struct tagLevel_Code 213,5785
  tz_uint16 level;214,5816
  int link;215,5835
} Level_Code;216,5864
  STACK_LOCMAX_CENTER,219,5886
  STACK_LOCMAX_CENTER, STACK_LOCMAX_NEIGHBOR,219,5886
  STACK_LOCMAX_CENTER, STACK_LOCMAX_NEIGHBOR, STACK_LOCMAX_NONFLAT,219,5886
  STACK_LOCMAX_FLAT,220,5954
  STACK_LOCMAX_FLAT, STACK_LOCMAX_ALTER1,220,5954
  STACK_LOCMAX_FLAT, STACK_LOCMAX_ALTER1, STACK_LOCMAX_ALTER2,220,5954
  STACK_LOCMAX_SINGLE221,6017
#define STACK_CHECK_CHORD(224,6043
#define STACK_CHECK_CHORD_END(240,6568

tz_image_relation.h,37
#define _TZ_IMAGE_RELATION_H_10,172

tz_image_trans.h,33
#define _TZ_IMAGE_TRANS_H_8,146

tz_imatrix.h,152
#define _TZ_IMatrix_H_12,173
  ndim_t ndim;36,710
  dim_t dim[dim37,725
  int *array;array38,747
} IMatrix;39,761
#define IMatrix_Print 68,2083

tz_int_arraylist.h,169
#define _TZ_Int_ARRAYLIST_H_10,196
typedef struct _Int_Arraylist 18,294
  int length;19,326
  int capacity;20,340
  int *array;array21,356
} Int_Arraylist;22,370

tz_int_doubly_linked_list.h,196
#define _TZ_Int_DOUBLY_LINKED_LIST_H_14,256
typedef struct _Int_Dlist 21,373
  int data;22,401
  struct _Int_Dlist *prev;prev23,443
  struct _Int_Dlist *next;next24,494
} Int_Dlist;25,541

tz_int_histogram.h,35
#define _TZ_INT_HISTOGRAM_H_8,136

tz_int_linked_list.h,147
#define _TZ_Int_LINKED_LIST_H_14,228
typedef struct _Int_List 20,298
  int data;21,325
  struct _Int_List *next;next22,337
} Int_List;23,363

tz_interface.h,838
#define _TZ_INTERFACE_H_8,122
#  define ENABLE_PROGRESS 29,547
#  define ENABLE_HOURGLASS 30,575
#  define ENABLE_PROGRESS 32,610
#  define ENABLE_HOURGLASS 33,638
#  undef ENABLE_PROGRESS37,702
#  undef ENABLE_HOURGLASS38,727
#  define ENABLE_PROGRESS 39,753
#  define ENABLE_HOURGLASS 40,781
#define PROGRESS_BEGIN(45,844
#define PROGRESS_STATUS(47,894
#define PROGRESS_REFRESH	51,975
#define PROGRESS_END(54,1027
#define PROGRESS_BEGIN(60,1089
#define PROGRESS_STATUS(61,1117
#define PROGRESS_REFRESH62,1144
#define PROGRESS_END(63,1169
const static char *Hourglass[Hourglass85,1575
#define HOURGLASS_BEGIN(87,1631
#define HOURGLASS_UPDATE(92,1749
#define HOURGLASS_END(101,1930
#define HOURGLASS_BEGIN(108,2015
#define HOURGLASS_SHOW(109,2048
#define HOURGLASS_UPDATE(110,2075
#define HOURGLASS_END(111,2104

tz_intpair_map.h,382
#define _TZ_INTPAIR_MAP_H_7,100
typedef struct _Intpair_Map_Entry 15,221
  int pair[pair16,257
  int value;17,282
  struct _Intpair_Map_Entry *next;next18,309
} Intpair_Map_Entry;19,344
typedef struct _Intpair_Map 21,366
  int length;22,396
  int base;23,410
  Intpair_Map_Entry *bucket;bucket24,422
  Intpair_Map_Entry *iterator;iterator25,451
} Intpair_Map;26,482

tz_local_bifold_neuroseg.h,292
#define _TZ_LOCAL_BIFOLD_NEUROSEG_H_8,152
static const int LOCAL_BIFOLD_NEUROSEG_NPARAM 18,368
typedef struct _Local_Bifold_Neuroseg 20,459
  Bifold_Neuroseg bn;21,499
  neuropos_t pos;22,521
} Local_Bifold_Neuroseg;23,539
typedef Local_Bifold_Neuroseg* Local_Bifold_Neuroseg_P;25,565

tz_local_neuroseg.h,736
#define _TZ_LOCAL_NEUROSEG_H_8,131
#define LOCAL_NEUROSEG_MIN_CORRCOEF 29,607
const static int LOCAL_NEUROSEG_NPARAM 35,734
#define DECLARE_LOCAL_NEUROSEG_VAR_NAME	37,811
#define DECLARE_LOCAL_NEUROSEG_VAR_MIN(43,1038
#define DECLARE_LOCAL_NEUROSEG_VAR_MAX(48,1237
typedef struct _Local_Neuroseg 61,1762
  Neuroseg seg;62,1795
  neuropos_t pos;63,1811
} Local_Neuroseg;64,1829
typedef struct _Local_Neuroseg_Slice 66,1848
  Neuroseg_Slice seg;67,1887
  neuropos_t pos;68,1909
} Local_Neuroseg_Slice;69,1927
typedef Local_Neuroseg* Local_Neuroseg_P;71,1952
const static int Neuropos_Reference 74,2025
#define Neuroseg_Fit_Score 300,9190
#define Local_Neuroseg_Score 302,9234
#define NEUROCOMP_LOCAL_NEUROSEG(738,26011

tz_local_neuroseg_doubly_linked_list.h,264
#define _TZ_Local_Neuroseg_DOUBLY_LINKED_LIST_H_14,325
typedef struct _Local_Neuroseg_Dlist 22,484
  Local_Neuroseg_P data;23,523
  struct _Local_Neuroseg_Dlist *prev;prev24,578
  struct _Local_Neuroseg_Dlist *next;next25,640
} Local_Neuroseg_Dlist;26,698

tz_local_neuroseg_ellipse.h,471
#define _TZ_LOCAL_NEUROSEG_ELLIPSE_H_8,155
static const int LOCAL_NEUROSEG_ELLIPSE_NPARAM 26,590
#define DECLARE_LOCAL_NEUROSEG_ELLIPSE_VAR_NAME	29,684
#define DECLARE_LOCAL_NEUROSEG_ELLIPSE_VAR_MIN(35,899
#define DECLARE_LOCAL_NEUROSEG_ELLIPSE_VAR_MAX(39,1090
typedef struct _Local_Neuroseg_Ellipse 47,1363
  Neuroseg_Ellipse np;48,1404
  neuropos_t pos;49,1452
} Local_Neuroseg_Ellipse;50,1492
typedef Local_Neuroseg_Ellipse* Local_Neuroseg_Ellipse_P;52,1519

tz_local_neuroseg_ellipse_doubly_linked_list.h,312
#define _TZ_Local_Neuroseg_Ellipse_DOUBLY_LINKED_LIST_H_14,365
typedef struct _Local_Neuroseg_Ellipse_Dlist 22,540
  Local_Neuroseg_Ellipse_P data;23,587
  struct _Local_Neuroseg_Ellipse_Dlist *prev;prev24,650
  struct _Local_Neuroseg_Ellipse_Dlist *next;next25,720
} Local_Neuroseg_Ellipse_Dlist;26,786

tz_local_neuroseg_plane.h,320
#define _TZ_LOCAL_NEUROSEG_PLANE_H_8,149
#define LOCAL_NEUROSEG_PLANE_NPARAM 17,309
typedef struct _Local_Neuroseg_Plane 19,388
  Neuroseg_Plane np;20,427
  neuropos_t pos;21,448
} Local_Neuroseg_Plane;22,466
#define LOCAL_NEUROSEG_PLANE_RADIUS(24,491
typedef Local_Neuroseg_Plane* Local_Neuroseg_Plane_P;26,549

tz_local_neuroseg_plane_doubly_linked_list.h,300
#define _TZ_Local_Neuroseg_Plane_DOUBLY_LINKED_LIST_H_14,355
typedef struct _Local_Neuroseg_Plane_Dlist 22,526
  Local_Neuroseg_Plane_P data;23,571
  struct _Local_Neuroseg_Plane_Dlist *prev;prev24,632
  struct _Local_Neuroseg_Plane_Dlist *next;next25,700
} Local_Neuroseg_Plane_Dlist;26,764

tz_local_rpi_neuroseg.h,408
#define _TZ_LOCAL_RPI_NEUROSEG_H_7,114
const static int LOCAL_RPI_NEUROSEG_NPARAM 18,333
#define DECLARE_LOCAL_RPI_NEUROSEG_VAR_NAME	20,418
#define DECLARE_LOCAL_RPI_NEUROSEG_VAR_MIN(26,650
#define DECLARE_LOCAL_RPI_NEUROSEG_VAR_MAX(30,831
typedef struct _Local_Rpi_Neuroseg 42,1320
  Rpi_Neuroseg seg;43,1357
  neuropos_t pos;44,1377
} Local_Rpi_Neuroseg;45,1395
DECLARE_ZOBJECT_INTERFACE(48,1419

tz_locne_chain.h,33
#define _TZ_LOCNE_CHAIN_H_8,145

tz_locne_chain_com.h,180
#define _TZ_Locne_CHAIN_COM_H_10,185
typedef struct _Locne_Chain 32,664
  Locne_Node_Dlist *list;list33,694
  Locne_Node_Dlist *iterator;iterator34,758
} Locne_Chain;35,821

tz_locne_node.h,207
#define _TZ_Locne_NODE_H_8,146
typedef struct _Locne_Node 22,364
  Local_Neuroseg_Ellipse *locseg;locseg23,393
  Trace_Record *tr;tr24,456
} Locne_Node;25,503
typedef Locne_Node* Locne_Node_P;29,527

tz_locne_node_doubly_linked_list.h,240
#define _TZ_Locne_Node_DOUBLY_LINKED_LIST_H_14,296
typedef struct _Locne_Node_Dlist 22,447
  Locne_Node_P data;23,482
  struct _Locne_Node_Dlist *prev;prev24,533
  struct _Locne_Node_Dlist *next;next25,591
} Locne_Node_Dlist;26,645

tz_locnp_chain.h,33
#define _TZ_LOCNP_CHAIN_H_8,149

tz_locnp_chain_com.h,180
#define _TZ_Locnp_CHAIN_COM_H_10,183
typedef struct _Locnp_Chain 32,662
  Locnp_Node_Dlist *list;list33,692
  Locnp_Node_Dlist *iterator;iterator34,756
} Locnp_Chain;35,819

tz_locnp_node.h,205
#define _TZ_Locnp_NODE_H_8,144
typedef struct _Locnp_Node 22,360
  Local_Neuroseg_Plane *locseg;locseg23,389
  Trace_Record *tr;tr24,450
} Locnp_Node;25,497
typedef Locnp_Node* Locnp_Node_P;29,521

tz_locnp_node_doubly_linked_list.h,240
#define _TZ_Locnp_Node_DOUBLY_LINKED_LIST_H_14,296
typedef struct _Locnp_Node_Dlist 22,447
  Locnp_Node_P data;23,482
  struct _Locnp_Node_Dlist *prev;prev24,533
  struct _Locnp_Node_Dlist *next;next25,591
} Locnp_Node_Dlist;26,645

tz_locseg_chain.h,73
#define _TZ_LOCSEG_CHAIN_H_8,125
#define NEUROCOMP_LOCSEG_CHAIN(25,427

tz_locseg_chain_com.h,185
#define _TZ_Locseg_CHAIN_COM_H_10,179
typedef struct _Locseg_Chain 32,664
  Locseg_Node_Dlist *list;list33,695
  Locseg_Node_Dlist *iterator;iterator34,760
} Locseg_Chain;35,824

tz_locseg_chain_knot.h,310
#define _TZ_LOCSEG_CHAIN_KNOT_H_8,154
typedef struct _Locseg_Chain_Knot 18,327
  int id;19,363
  double offset;20,392
} Locseg_Chain_Knot;21,445
typedef struct _Locseg_Chain_Knot_Array 23,467
  Locseg_Chain *chain;chain24,509
  Unipointer_Arraylist *knot;knot25,532
} Locseg_Chain_Knot_Array;26,562

tz_locseg_chain_network.h,200
#define _TZ_LOCSEG_CHAIN_NETWORK_H_8,152
typedef struct _Locseg_Chain_Network 16,289
  Neuron_Structure *ns;ns17,328
  Locseg_Chain *chain_array;chain_array18,352
} Locseg_Chain_Network;19,381

tz_locseg_node.h,204
#define _TZ_Locseg_NODE_H_8,140
typedef struct _Locseg_Node 22,353
  Local_Neuroseg *locseg;locseg23,383
  Trace_Record *tr;tr24,438
} Locseg_Node;25,485
typedef Locseg_Node* Locseg_Node_P;29,510

tz_locseg_node_doubly_linked_list.h,246
#define _TZ_Locseg_Node_DOUBLY_LINKED_LIST_H_14,301
typedef struct _Locseg_Node_Dlist 22,454
  Locseg_Node_P data;23,490
  struct _Locseg_Node_Dlist *prev;prev24,542
  struct _Locseg_Node_Dlist *next;next25,601
} Locseg_Node_Dlist;26,656

tz_math.h,26
#define _TZ_MATH_H_8,116

tz_math_lib.h,81
#define _TZ_MATH_LIB_H_6,72
#define ARRAY_MAX(10,128
#define ARRAY_MIN(20,383

tz_matlabdefs.h,803
#define _TZ_MATLABDEFS_H_8,131
#define miINT8 10,158
#define miUINT8 11,196
#define miINT16 12,236
#define miUINT16 13,275
#define miINT32 14,317
#define miUINT32 15,356
#define miSINGLE 16,398
#define miDOUBLE 17,446
#define miINT64 18,494
#define miUINT64 19,534
#define miMATRIX 20,577
#define miCOMPRESSED 21,616
#define miUTF8 22,658
#define miUTF16 23,715
#define miUTF32 24,774
#define mxCELL_CLASS 26,834
#define mxSTRUCT_CLASS 27,870
#define mxOBJECT_CLASS 28,907
#define mxCHAR_CLASS 29,940
#define mxSPARSE_CLASS 30,981
#define mxDOUBLE_CLASS 31,1021
#define mxSINGLE_CLASS 32,1071
#define mxINT8_CLASS 33,1121
#define mxUINT8_CLASS 34,1168
#define mxINT16_CLASS 35,1218
#define mxUINT16_CLASS 36,1268
#define mxINT32_CLASS 37,1321
#define mxUINT32_CLASS 38,1371

tz_matlabio.h,268
#define _MATLABIO_H_7,95
typedef struct _Matlab_Array 17,250
  tz_uint8 type;18,281
  tz_uint8 flag;19,330
  tz_uint32 ndim;20,397
  tz_uint32 dim[dim21,415
  char name[name22,435
  void* array;23,477
} Matlab_Array;24,492
DECLARE_ZOBJECT_INTERFACE(26,509

tz_mc_stack.h,208
#define _TZ_MC_STACK_H_8,124
typedef struct _Mc_Stack 15,218
  int kind;16,245
  int width;17,257
  int height;18,270
  int depth;19,284
  int nchannel;20,297
  uint8* array;21,313
} Mc_Stack;22,329

tz_mxutils.h,470
#define _TZ_MXUTILS_H7,101
#define MAX_DIM 22,297
#define MAX_DIM_I 23,340
#define DIM_T_FORMAT 35,802
#define NDIM_T_FORMAT 36,828
typedef tz_uint8 ndim_type;37,855
typedef int dim_type;38,903
typedef ndim_type ndim_t;39,945
typedef dim_type dim_t;40,971
#define matrix_error 52,1495
#define check_matrix 53,1529
#define matrix_size 54,1564
#define matrix_subsize 55,1596
#define sub2ind 56,1634
#define ind2sub 57,1661
#define translate_intdim 58,1688

tz_neurochain.h,1273
#define _TZ_NEUROCHAIN_H_8,133
typedef enum {FORWARD,FORWARD20,358
typedef enum {FORWARD, BACKWARD,20,358
typedef enum {FORWARD, BACKWARD, BOTH,20,358
typedef enum {FORWARD, BACKWARD, BOTH, LONG,20,358
typedef enum {FORWARD, BACKWARD, BOTH, LONG, STRONG}STRONG20,358
typedef enum {FORWARD, BACKWARD, BOTH, LONG, STRONG} Direction_e;20,358
  TRACE_HIST_FIT_SCORE_MASK 23,441
  TRACE_HIST_FIT_STAT_MASK,24,474
  TRACE_HIST_FIT_CORR_MASK,25,502
  TRACE_HIST_HIT_REGION_MASK,26,530
  TRACE_HIST_INDEX_MASK,27,560
  TRACE_HIST_IS_REFIT_MASK,28,585
  TRACE_HIST_DIRECTION_MASK29,613
} Trace_History_Mask_e;30,641
typedef struct _Trace_History 33,712
  Bitmask_t mask;34,744
  double fit_score;37,940
  double fit_stat;38,960
  double fit_corr;39,979
  int hit_region;40,998
  int index;41,1016
  BOOL is_refit;42,1029
  Direction_e direction;43,1046
} Trace_History;44,1071
typedef struct tagNeurochain 59,1799
  Local_Neuroseg locseg;60,1830
  Trace_History *hist;hist61,1883
  struct tagNeurochain *prev;prev62,1942
  struct tagNeurochain *next;next63,1994
} Neurochain;64,2042
  NEUROCHAIN_HEAD,67,2072
  NEUROCHAIN_HEAD, NEUROCHAIN_TAIL,67,2072
  NEUROCHAIN_HEAD, NEUROCHAIN_TAIL, NEUROCHAIN_BOTH_END67,2072
} Neurochain_End_e;68,2128

tz_neurocomp_conn.h,358
#define _TZ_NEUROCOMP_CONN_H_8,143
  NEUROCOMP_CONN_NONE,15,219
  NEUROCOMP_CONN_HL,16,263
  NEUROCOMP_CONN_LINK 17,307
typedef struct _Neurocomp_Conn 33,1003
  int mode;34,1036
  int info[info35,1048
  double pos[pos36,1063
  double ort[ort37,1134
  double cost;38,1189
  double pdist;39,1227
  double sdist;40,1265
} Neurocomp_Conn;41,1304

tz_neurofield.h,402
#define _TZ_NEUROFIELD_H_8,142
#define NEUROFIELD 14,207
#define Neurofield 17,249
#define Neurofield 21,308
#define Neurofield 25,367
#define Neurofield 29,426
#define Neurofield 33,485
inline static double Neurofield_S1(61,1455
inline static double Neurofield_S2(74,1641
inline static double Neurofield_S3(80,1759
inline static double Neurofield_T(92,1933
#define Neurofield_Rpi 104,2113

tz_neurofork.h,1014
#define _TZ_NEUROFORK_H_8,118
#define NEUROFORK_NPARAM 16,241
#define NEUROFORK_MIN_KNOT 18,270
#define NEUROFORK_MAX_KNOT 19,302
typedef struct _Neurofork 21,335
  double r1;22,363
  double r2;23,376
  double r3;24,389
  double r4;25,402
  double r5;26,415
  double r6;27,428
  double h;28,441
  double knot;29,453
  double theta2;30,468
  double psi2;31,485
  double theta;32,500
  double psi;33,516
} Neurofork;34,530
typedef Neurofork* Neurofork_P;36,544
#define NEUROFORK_VAR_MASK_R1 54,1093
#define NEUROFORK_VAR_MASK_R2 55,1146
#define NEUROFORK_VAR_MASK_R3 56,1199
#define NEUROFORK_VAR_MASK_R4 57,1252
#define NEUROFORK_VAR_MASK_R 58,1305
#define NEUROFORK_VAR_MASK_H 59,1358
#define NEUROFORK_VAR_MASK_KNOT 60,1411
#define NEUROFORK_VAR_MASK_THETA2 61,1464
#define NEUROFORK_VAR_MASK_PSI2 62,1517
#define NEUROFORK_VAR_MASK_ORIENTATION2 63,1570
#define NEUROFORK_VAR_MASK_THETA 64,1623
#define NEUROFORK_VAR_MASK_PSI 65,1676
#define NEUROFORK_VAR_MASK_ORIENTATION 66,1729

tz_neuron_component.h,383
#define _TZ_NEURON_COMPONENT_H_8,149
  NEUROCOMP_TYPE_UNIDENTIFIED 29,589
  NEUROCOMP_TYPE_LOCSEG_CHAIN 30,624
  NEUROCOMP_TYPE_LOCAL_NEUROSEG,31,659
  NEUROCOMP_TYPE_GEO3D_BALL,32,692
  NEUROCOMP_TYPE_GEO3D_CIRCLE,33,721
  NEUROCOMP_TYPE_GEO3D_ELLIPSE34,752
typedef struct _Neuron_Component 45,1173
  int type;46,1208
  void *data;data47,1248
} Neuron_Component;48,1288

tz_neuron_component_arraylist.h,221
#define _TZ_Neuron_Component_ARRAYLIST_H_10,262
typedef struct _Neuron_Component_Arraylist 19,419
  int length;20,464
  int capacity;21,478
  Neuron_Component *array;array22,494
} Neuron_Component_Arraylist;23,521

tz_neuron_structure.h,306
#define _TZ_NEURON_STRUCTURE_H_8,137
typedef struct _Neuron_Structure 31,843
  Graph *graph;graph32,878
  Neurocomp_Conn *conn;conn33,894
  Neuron_Component *comp;comp34,918
} Neuron_Structure;35,944
#define NEURON_STRUCTURE_LINK_NUMBER(46,1272
#define NEURON_STRUCTURE_COMPONENT_NUMBER(47,1334

tz_neuropos.h,227
#define _TZ_NEUROPOS_H_8,120
#define neuropos_t 22,360
#define neuropos_tp 23,395
#define NEUROPOS_NPARAM 24,432
#define NEUROPOS_NBYTE 25,458
#define NEUROPOS_VAR_MASK_NONE 47,1207
#define NEUROPOS_VAR_MASK_ALL 48,1259

tz_neuroseg.h,2590
#define _TZ_NEUROSEG_H_8,119
#define NEUROSEG_NPARAM 31,507
#define NEUROSEG_MIN_CURVATURE 33,534
#define NEUROSEG_MAX_CURVATURE 34,569
typedef struct _Neuroseg 46,1050
  double r1;47,1077
  double c;48,1134
  double h;49,1191
  double theta;50,1248
  double psi;51,1305
  double curvature;52,1362
  double alpha;53,1426
  double scale;54,1500
} Neuroseg;55,1556
typedef struct _Neuroseg_Slice 61,1666
  double r1;62,1699
  double c;63,1756
  double theta;64,1813
  double psi;65,1870
  double alpha;66,1927
  double scale;67,2001
} Neuroseg_Slice;68,2058
  NEUROSEG_REFERENCE_UNDEF,71,2132
  NEUROSEG_BOTTOM 72,2195
  NEUROSEG_TOP,73,2253
  NEUROSEG_CENTER 74,2308
} Neuropos_Reference_e;75,2366
#define NEUROSEG_MIN_R 77,2391
#define NEUROSEG_DEFAULT_R1 79,2419
#define NEUROSEG_DEFAULT_C 80,2451
#define NEUROSEG_DEFAULT_H 81,2482
#define NEUROSEG_DEFAULT_THETA 82,2514
#define NEUROSEG_DEFAULT_PSI 83,2549
#define NEUROSEG_DEFAULT_CURVATURE 84,2582
#define NEUROSEG_DEFAULT_ALPHA 85,2621
#define NEUROSEG_DEFAULT_SCALE 86,2656
enum { NEUROSEG_CIRCLE_RX,89,2693
enum { NEUROSEG_CIRCLE_RX, NEUROSEG_CIRCLE_RY,89,2693
enum { NEUROSEG_CIRCLE_RX, NEUROSEG_CIRCLE_RY, NEUROSEG_CIRCLE_RXY 89,2693
typedef Neuroseg* Neuroseg_P;91,2764
typedef struct _Field_Range 95,2837
  int first_corner[first_corner96,2867
  int size[size97,2943
} Field_Range;98,3019
typedef double (*Neuroseg_Field_f)Neuroseg_Field_f100,3035
inline static Neuroseg_Field_f Neuroseg_Slice_Field_Func(102,3089
#define NEUROSEG_COEF(197,5697
#define NEUROSEG_RADIUS(200,5848
#define NEUROSEG_R1(203,5944
#define NEUROSEG_R2(205,5998
#define NEUROSEG_RC(207,6110
#define NEUROSEG_RA(209,6214
#define NEUROSEG_RB(211,6309
#define NEUROSEG_CR1(214,6415
#define NEUROSEG_CR2(216,6509
#define NEUROSEG_CRC(218,6607
#define NEUROSEG_CRA(220,6705
#define NEUROSEG_CRB(222,6803
#define NEUROSEG_MR1(225,6928
#define NEUROSEG_MR2(227,7128
#define NEUROSEG_MRC(229,7332
#define NEUROSEG_VAR_MASK_R1 334,10915
#define NEUROSEG_VAR_MASK_C 335,10967
#  define NEUROSEG_VAR_MASK_R 337,11037
#  define NEUROSEG_VAR_MASK_R 339,11129
#define NEUROSEG_VAR_MASK_THETA 341,11198
#define NEUROSEG_VAR_MASK_PSI 342,11250
#define NEUROSEG_VAR_MASK_ORIENTATION 343,11302
#define NEUROSEG_VAR_MASK_HEIGHT 344,11354
#define NEUROSEG_VAR_MASK_CURVATURE 345,11406
#define NEUROSEG_VAR_MASK_ALPHA 346,11458
#define NEUROSEG_VAR_MASK_SCALE 347,11510
#define NEUROSEG_VAR_MASK_ALL 348,11562
#define NEUROSEG_VAR_MASK_NONE 349,11614
#define NEUROSEG_SLICE_FIELD_LENGTH 440,15011

tz_neuroseg_ellipse.h,847
#define _TZ_NEUROSEG_ELLIPSE_H_8,137
#define NEUROSEG_ELLIPSE_NPARAM 16,267
typedef struct _Neuroseg_Ellipse 22,390
  double rx;23,425
  double ry;24,467
  double theta;25,509
  double psi;26,555
  double alpha;27,598
  double offset_x;28,661
  double offset_y;29,698
} Neuroseg_Ellipse;30,735
typedef Neuroseg_Ellipse* Neuroseg_Ellipse_P;32,756
#define NEUROSEG_ELLIPSE_VAR_MASK_RX 63,1821
#define NEUROSEG_ELLIPSE_VAR_MASK_RY 64,1880
#define NEUROSEG_ELLIPSE_VAR_MASK_R 65,1939
#define NEUROSEG_ELLIPSE_VAR_MASK_THETA 66,1998
#define NEUROSEG_ELLIPSE_VAR_MASK_PSI 67,2057
#define NEUROSEG_ELLIPSE_VAR_MASK_ORIENTATION 68,2116
#define NEUROSEG_ELLIPSE_VAR_MASK_OFFSETX 69,2175
#define NEUROSEG_ELLIPSE_VAR_MASK_OFFSETY 70,2234
#define NEUROSEG_ELLIPSE_VAR_MASK_OFFSET 71,2293
#define NEUROSEG_ELLIPSE_VAR_MASK_ALPHA 72,2352

tz_neuroseg_plane.h,636
#define _TZ_NEUROSEG_PLANE_H_8,131
#define NEUROSEG_PLANE_NPARAM 20,359
typedef struct _Neuroseg_Plane 26,464
  double r;27,497
  double theta;28,532
  double psi;29,578
  double offset_x;30,621
  double offset_y;31,658
} Neuroseg_Plane;32,695
typedef Neuroseg_Plane* Neuroseg_Plane_P;34,714
#define NEUROSEG_PLANE_VAR_MASK_R 65,1702
#define NEUROSEG_PLANE_VAR_MASK_THETA 66,1759
#define NEUROSEG_PLANE_VAR_MASK_PSI 67,1816
#define NEUROSEG_PLANE_VAR_MASK_ORIENTATION 68,1873
#define NEUROSEG_PLANE_VAR_MASK_OFFSETX 69,1930
#define NEUROSEG_PLANE_VAR_MASK_OFFSETY 70,1987
#define NEUROSEG_PLANE_VAR_MASK_OFFSET 71,2044

tz_neurotrace.h,168
#define _TZ_NEUROTRACE_H_8,144
typedef struct _Soma_Trace_Workspace 86,3055
  Trace_Workspace tw;87,3094
  double curv_thre;88,3116
} Soma_Trace_Workspace;89,3162

tz_objdef.h,1240
#define _OBJECT(17,300
#define FREE_OBJECT_LIST(18,341
#define OBJECT_OFFSET(19,402
#define OBJECT_INUSE(20,455
#define OBJECT_ASIZE(21,506
#define SET_OBJECT_ASIZE(22,571
#define NEW_OBJECT(23,632
#define RESET_OBJECT_FIELD(24,679
#define NEW_OBJECT_STATIC(25,738
#define COPY_OBJECT_STATIC(26,792
#define COPY_OBJECT(27,848
#define PACK_OBJECT_STATIC(28,897
#define PACK_OBJECT(29,953
#define FREE_OBJECT(30,1002
#define KILL_OBJECT(31,1051
#define RESET_OBJECT_STATIC(32,1100
#define OBJECT_USAGE(33,1158
#define SAVE_OBJECT(34,1209
#define LOAD_OBJECT(35,1259
#define ROUTINE(38,1330
#define DECLARE_OBJECT(41,1402
#define DECLARE_STATIC(49,1626
#define OBJECT_HANDLE(53,1784
#define DEFINE_NEW_OBJECT(57,1906
#define DEFINE_SET_OBJECT_ASIZE(71,2439
#define DECLARE_NEW_OBJECT_STATIC(85,2966
#define DECLARE_COPY_OBJECT(110,3974
#define DEFINE_COPY_OBJECT(123,4481
#define DECLARE_PACK_OBJECT(128,4674
#define DEFINE_PACK_OBJECT(142,5221
#define DEFINE_FREE_OBJECT(147,5417
#define DEFINE_KILL_OBJECT(158,5810
#define DECLARE_RESET_OBJECT(166,6044
#define DEFINE_OBJECT_USAGE(177,6413
#define DEFINE_SAVE_OBJECT(182,6565
#define DEFINE_LOAD_OBJECT(201,7186
#define DEFINE_OBJECT_MANAGEMENT(227,8032

tz_objdetect.h,31
#define _TZ_OBJDETECT_H_8,135

tz_object_3d.h,298
#define _TZ_OBJECT_3D_H_8,116
typedef struct _Object_3d 24,540
  size_t size;25,568
  int conn;26,611
  Voxel_t *voxels;voxels27,659
} Object_3d;28,696
typedef Object_3d* Object_3d_P;30,710
  MAJOR_AXIS,87,2570
  MAJOR_AXIS, PLANE_NORMAL87,2570
} Object_3d_Orientation_Pointer_e;88,2597

tz_object_3d_linked_list.h,179
#define _TZ_Object_3d_LINKED_LIST_H_14,263
typedef struct _Object_3d_List 21,365
  Object_3d_P data;22,398
  struct _Object_3d_List *next;next23,418
} Object_3d_List;24,450

tz_object_3d_linked_list_ext.h,47
#define _TZ_OBJECT_3D_LINKED_LIST_EXT_H_8,177

tz_object_3d_operation.h,41
#define _TZ_OBJECT_3D_OPERATION_H_8,146

tz_object_tmpl.h,96
typedef struct tagObject_T 7,99
  int size;8,128
  int *array;array9,140
} Object_T;10,154

tz_objtempl.h,451
void Reset_<Object>(<Object> *sw)sw6,80
void Construct_<Object>(<Object> * sw, int size)8,116
void Clean_<Object>(<Object> * sw)9,166
<Object> *Copy_<Object>(const <Object> *sw)sw15,295
void   Pack_<Object>(<Object> *sw)sw16,340
void   Free_<Object>(<Object> *sw)sw17,376
void   Kill_<Object>(<Object> *sw)sw18,412
int Save_<Object>(<Object> *sw, char *file_path)file_path22,499
<Object>* Load_<Object>(char *file_path)file_path23,549

tz_optimize_utils.h,612
#define _TZ_OPTIMIZE_UTILS_H_8,139
#define OPTIMIZE_CYCLE 15,233
typedef struct _Optimize_Workspace 20,367
  double scores[scores21,404
  int phase;22,468
  double max_score;23,546
  BOOL is_improved;24,615
  int nvar;25,696
  double *best_var;best_var26,758
} Optimize_Workspace;27,831
typedef struct _Line_Search_Workspace 35,1062
  int nvar;36,1102
  double alpha;37,1114
  double ro;38,1130
  double c1;39,1143
  double c2;40,1156
  double min_direction;41,1169
  double *grad;grad42,1193
  double *start_grad;start_grad43,1270
  double score;44,1292
} Line_Search_Workspace;45,1308

tz_perceptor.h,266
#define _TZ_PERCEPTOR_H_8,128
typedef struct _Perceptor 18,294
  Variable_Set *vs;vs19,322
  void *arg;arg20,373
  Continuous_Function *s;s21,427
  double min_gradient;22,478
  double *delta;delta23,543
  double *weight;weight24,609
} Perceptor;25,669

tz_pipe.h,239
#define _TZ_PIPE_H_7,109
#define PIPE_LANG_SIZE 9,130
#define PIPE_INTF_SIZE 10,198
#define PIPE_INTF_MAXPARAM 11,270
#define PIPE_FIELD_NUMBER 12,349
  char language[language15,440
  char interface[interface16,500
} Pipe;17,550

tz_pixel_array.h,159
#define _TZ_PIXEL_ARRAY_H_8,122
typedef struct tagPixel_Array 14,188
  int kind;15,220
  int size;16,287
  void *array;array17,322
} Pixel_Array;18,363

tz_random.h,28
#define _TZ_RANDOM_H_8,124

tz_rastergeom.h,32
#define _TZ_RASTERGEOM_H_8,124

tz_rpi_neuroseg.h,807
#define _TZ_RPI_NEUROSEG_H_7,104
typedef struct _Rpi_Neuroseg 16,254
  double theta;17,285
  double psi;18,301
  double left_offset;19,315
  double right_offset;20,337
  double bottom_offset;21,360
  double top_offset;22,384
  double length;23,405
} Rpi_Neuroseg;24,422
#define RPI_NEUROSEG_NPARAM 28,480
#define RPI_NEUROSEG_VAR_MASK_THETA 30,511
#define RPI_NEUROSEG_VAR_MASK_PSI 31,566
#define RPI_NEUROSEG_VAR_MASK_ORIENTATION 32,621
#define RPI_NEUROSEG_VAR_MASK_LEFT_OFFSET 33,676
#define RPI_NEUROSEG_VAR_MASK_RIGHT_OFFSET 34,731
#define RPI_NEUROSEG_VAR_MASK_BOTTOM_OFFSET 35,786
#define RPI_NEUROSEG_VAR_MASK_TOP_OFFSET 36,841
#define RPI_NEUROSEG_VAR_MASK_OFFSET 37,896
#define RPI_NEUROSEG_VAR_MASK_LENGTH 38,951
DECLARE_ZOBJECT_INTERFACE(RPI_NEUROSEG_VAR_MASK_LENGTH26,439

tz_sp_grow.h,818
#define _TZ_SP_GROW_H_7,92
#define SP_GROW_WORKSPACE_ARGC 15,206
typedef struct _Sp_Grow_Workspace 17,241
  size_t size;18,277
  double *dist;dist19,315
  double *length;length20,358
  int *path;path21,404
  int *checked;checked22,440
  uint8_t *flag;flag23,488
  uint8_t *mask;mask24,539
  int conn;25,615
  Weight_Func_t *wf;wf26,656
  double argv[argv27,699
  double resolution[resolution28,765
  double value;29,806
  double fgratio;30,843
  int sp_option;31,884
} Sp_Grow_Workspace;32,943
enum {SP_GROW_TARGET SP_GROW_TARGET34,965
enum {SP_GROW_TARGET = 1, SP_GROW_SOURCE,34,965
enum {SP_GROW_TARGET = 1, SP_GROW_SOURCE, SP_GROW_BARRIER,34,965
enum {SP_GROW_TARGET = 1, SP_GROW_SOURCE, SP_GROW_BARRIER, SP_GROW_CONDUCTOR}SP_GROW_CONDUCTOR34,965
DECLARE_ZOBJECT_INTERFACE(36,1045

tz_stack.h,61
#define _TZ_STACK_H_7,119
typedef FMatrix Filter_3d;14,240

tz_stack_attribute.h,38
#define _TZ_STACK_ATTRIBUTE_H_11,230

tz_stack_bwdist.h,35
#define _TZ_STACK_BWDIST_H_ 8,143

tz_stack_bwmorph.h,1864
typedef int Coordinate[Coordinate14,244
typedef struct tagStruct_Element 16,272
  int size;17,307
  Coordinate *offset;offset18,319
  uint8 *mask;mask19,341
}  Struct_Element;20,356
  STACK_CORNER_1 23,383
  STACK_CORNER_1 = 10, STACK_CORNER_2,23,383
  STACK_CORNER_1 = 10, STACK_CORNER_2, STACK_CORNER_3,23,383
  STACK_CORNER_1 = 10, STACK_CORNER_2, STACK_CORNER_3, STACK_CORNER_4,23,383
  STACK_CORNER_5,24,454
  STACK_CORNER_5, STACK_CORNER_6,24,454
  STACK_CORNER_5, STACK_CORNER_6, STACK_CORNER_7,24,454
  STACK_CORNER_5, STACK_CORNER_6, STACK_CORNER_7, STACK_CORNER_8,24,454
  STACK_LINE_1,26,523
  STACK_LINE_1, STACK_LINE_2,26,523
  STACK_LINE_1, STACK_LINE_2, STACK_LINE_3,26,523
  STACK_LINE_1, STACK_LINE_2, STACK_LINE_3, STACK_LINE_4,26,523
  STACK_LINE_1, STACK_LINE_2, STACK_LINE_3, STACK_LINE_4, STACK_LINE_5,26,523
  STACK_LINE_6,27,595
  STACK_LINE_6, STACK_LINE_7,27,595
  STACK_LINE_6, STACK_LINE_7, STACK_LINE_8,27,595
  STACK_LINE_6, STACK_LINE_7, STACK_LINE_8, STACK_LINE_9,27,595
  STACK_LINE_6, STACK_LINE_7, STACK_LINE_8, STACK_LINE_9, STACK_LINE_10,27,595
  STACK_LINE_11,28,668
  STACK_LINE_11, STACK_LINE_12,28,668
  STACK_FACE_1,30,701
  STACK_FACE_1, STACK_FACE_2,30,701
  STACK_FACE_1, STACK_FACE_2, STACK_FACE_3,30,701
  STACK_FACE_1, STACK_FACE_2, STACK_FACE_3, STACK_FACE_4,30,701
  STACK_FACE_1, STACK_FACE_2, STACK_FACE_3, STACK_FACE_4, STACK_FACE_5,30,701
  STACK_FACE_631,773
typedef struct _Stack_Seed_Workspace 190,7864
  int method;191,7903
  BOOL with_boundary;192,7917
  Stack *seed_mask;seed_mask193,7939
  Stack *seed_dist;seed_dist194,7959
  Stack *weight;weight195,7979
} Stack_Seed_Workspace;196,7996
typedef struct _Stack_Region_Expand_Workspace 221,8901
  int conn;222,8949
  int r;223,8961
  IMatrix *chord;chord224,8970
} Stack_Region_Expand_Workspace;225,8988

tz_stack_code.h,32
#define _TZ_STACK_CODE_H_8,132

tz_stack_document.h,550
#define _TZ_STACK_DOCUMENT_H_7,106
  STACK_DOC_TIF_FILE,15,213
  STACK_DOC_TIF_FILE, STACK_DOC_LSM_FILE,15,213
  STACK_DOC_TIF_FILE, STACK_DOC_LSM_FILE, STACK_DOC_FILE_BUNDLE,15,213
  STACK_DOC_RAW_FILE,16,279
  STACK_DOC_RAW_FILE, STACK_DOC_SWC_FILE,16,279
  STACK_DOC_RAW_FILE, STACK_DOC_SWC_FILE, STACK_DOC_UNDEFINED16,279
typedef struct _Stack_Document 19,345
  int type;20,378
  double resolution[resolution21,390
  char unit;22,414
  double offset[offset23,455
  int channel;24,475
  void *ci;ci25,490
} Stack_Document;26,502

tz_stack_draw.h,284
#define _TZ_STACK_DRAW_H_8,119
typedef struct _Stack_Draw_Workspace 132,5054
  Rgb_Color color;133,5093
  double h;134,5112
  double s;135,5124
  double v;136,5136
  int blend_mode;137,5148
  int color_mode;138,5166
  double z_scale;139,5184
} Stack_Draw_Workspace;140,5202

tz_stack_graph.h,536
#define _TZ_STACK_GRAPH_H_8,135
typedef double Weight_Func_t(22,369
#define STACK_GRAPH_WORKSPACE_ARGC 28,489
typedef struct _Stack_Graph_Workspace 29,527
  int conn;30,567
  int *range;range31,625
  double resolution[resolution32,682
  Weight_Func_t *wf;wf33,743
  int sp_option;34,791
  double argv[argv35,845
  Graph_Workspace *gw;gw36,912
  Stack *group_mask;group_mask37,960
  Stack *signal_mask;signal_mask38,1030
  double *intensity;intensity39,1102
  double value;40,1147
} Stack_Graph_Workspace;41,1202

tz_stack_io.h,30
#define _TZ_STACK_IO_H_8,118

tz_stack_lib.h,31
#define _TZ_STACK_LIB_H_8,121

tz_stack_math.h,32
#define _TZ_STACK_MATH_H_7,131

tz_stack_neighborhood.h,40
#define _TZ_STACK_NEIGHBORHOOD_H_8,147

tz_stack_objlabel.h,344
#define _TZ_STACK_OBJLABEL_8,139
typedef struct _Objlabel_Workspace 18,307
  int conn;19,344
  int seed;20,390
  BOOL init_chord;21,461
  BOOL recover_chord;22,536
  IMatrix *chord;chord23,608
  void *u;u24,670
} Objlabel_Workspace;25,718
#define STACK_OBJLABEL_OPEN_WORKSPACE(28,742
#define STACK_OBJLABEL_CLOSE_WORKSPACE(45,1328

tz_stack_objmask.h,35
#define _TZ_STACK_OBJMASK_H_8,132

tz_stack_relation.h,37
#define _TZ_STACK_RELATION_H_10,159

tz_stack_sampling.h,36
#define _TZ_STACK_SAMPLING_H_8,131

tz_stack_stat.h,32
#define _TZ_STACK_STAT_H_7,111

tz_stack_threshold.h,337
#define _TZ_STACK_THRESHOLD_H_8,137
  THRESHOLD_DEFAULT,43,1201
  THRESHOLD_COMMON,44,1222
  THRESHOLD_LOCMAX_TRIANGLE,45,1242
  THRESHOLD_MEDIAN,46,1272
  THRESHOLD_RC,47,1292
  THRESHOLD_TRIANGLE,48,1308
  THRESHOLD_SP,49,1330
  THRESHOLD_TP,50,1346
  THRESHOLD_TP2,51,1362
  THRESHOLD_TP3,52,1379
  THRESHOLD_OTSU,53,1396

tz_stack_tile.h,181
#define _TZ_STACK_TILE_H_7,98
typedef struct _Stack_Tile 15,210
  Stack *stack;stack16,239
  double offset[offset17,255
} Stack_Tile;18,275
DECLARE_ZOBJECT_INTERFACE(20,290

tz_stack_tile_arraylist.h,197
#define _TZ_Stack_Tile_ARRAYLIST_H_10,232
typedef struct _Stack_Tile_Arraylist 19,371
  int length;20,410
  int capacity;21,424
  Stack_Tile *array;array22,440
} Stack_Tile_Arraylist;23,461

tz_stack_tile_i.h,185
#define _TZ_STACK_TILE_I_H_7,102
typedef struct _Stack_Tile_I 16,241
  Stack *stack;stack17,272
  int offset[offset18,288
} Stack_Tile_I;19,305
DECLARE_ZOBJECT_INTERFACE(21,322

tz_stack_tile_i_arraylist.h,205
#define _TZ_Stack_Tile_I_ARRAYLIST_H_10,242
typedef struct _Stack_Tile_I_Arraylist 19,387
  int length;20,428
  int capacity;21,442
  Stack_Tile_I *array;array22,458
} Stack_Tile_I_Arraylist;23,481

tz_stack_tile_set.h,159
#define _TZ_STACK_TILE_SET_H_7,106
typedef Stack_Tile_Arraylist Stack_Tile_Set;15,237
#define New_Stack_Tile_Set 17,283
#define Kill_Stack_Tile_Set 18,335

tz_stack_utils.h,100
#define _TZ_STACK_UTILS_H_8,135
#define STACK_UTIL_OFFSET(16,252
#define STACK_UTIL_COORD(20,387

tz_stack_watershed.h,927
#define _TZ_STACK_WATERSHED_H_8,145
#define WSHED 17,268
#define ONQUEUE 18,287
#define MASK 19,306
#define INIT 20,325
#define MINIM 21,344
#define IGNORED 22,363
typedef struct _Watershed_3d 24,384
  int nlabels;25,415
  Stack *labels;labels26,430
  int nbasins;27,447
  int *seeds;seeds28,462
  int conn;29,476
} Watershed_3d;30,488
typedef struct _Watershed_3d_Workspace 32,505
  int *array;array33,546
  Stack *mask;mask34,560
  int max_area;35,575
  int conn;36,591
} Watershed_3d_Workspace;37,603
typedef struct _Stack_Watershed_Workspace 54,1064
  int *array;array55,1108
  Stack *mask;mask56,1122
  int conn;57,1167
  int min_level;58,1179
  int start_level;59,1196
  double *weights;weights60,1215
} Stack_Watershed_Workspace;61,1234
enum { STACK_WATERSHED_MAX_SEED 63,1264
enum { STACK_WATERSHED_MAX_SEED = 244, STACK_WATERSHED_BARRIER 63,1264
DECLARE_ZOBJECT_INTERFACE(65,1336

tz_string.h,27
#define _TZ_STRING_H_7,97

tz_string_defs.h,277
#define _TZ_STRING_DEFS_H_8,133
#define MAX_LINE_DIM 14,199
#define MAX_WORD_LENGTH 15,263
#define MAX_STRING_LENGTH 17,385
typedef struct _String_Workspace 22,466
  char *array;array23,501
  char *iterator;iterator24,516
  int size;25,534
} String_Workspace;26,546

tz_swc.h,24
#define _TZ_SWC_H_7,84

tz_swc_arraylist.h,174
#define _TZ_Swc_ARRAYLIST_H_10,207
typedef struct _Swc_Arraylist 19,330
  int length;20,362
  int capacity;21,376
  Swc_Node *array;array22,392
} Swc_Arraylist;23,411

tz_swc_cell.h,599
#define _TZ_SWC_CELL_H_8,117
  SWC_SOMA 19,261
  SWC_SOMA = 1, SWC_AXON,19,261
  SWC_SOMA = 1, SWC_AXON, SWC_BASAL_DENDRITE,19,261
  SWC_SOMA = 1, SWC_AXON, SWC_BASAL_DENDRITE, SWC_APICAL_DENDRITE,19,261
  SWC_MAIN_TRUNK 20,328
  SWC_DENDRITE 21,350
  SWC_DENDRITE = 13, SWC_NEURITE 21,350
  SWC_DENDRITE = 13, SWC_NEURITE = 12, SWC_UNKNOWN 21,350
typedef struct _Swc_Node 28,476
  int id;29,503
  int type;30,526
  double d;31,559
  double x;32,586
  double y;33,608
  double z;34,630
  int parent_id;35,652
  int label;36,687
} Swc_Node;37,734
typedef Swc_Node Swc_Cell;39,747

tz_swc_tree.h,1070
#define _TZ_SWC_TREE_H_8,113
typedef struct _Swc_Tree_Node 22,384
  Swc_Node node;23,416
  double weight;24,481
  double feature;25,560
  struct _Swc_Tree_Node *parent;parent26,627
  struct _Swc_Tree_Node *first_child;first_child27,681
  struct _Swc_Tree_Node *next_sibling;next_sibling28,740
  struct _Swc_Tree_Node *next;next29,800
  int index;30,861
} Swc_Tree_Node;31,936
typedef struct _Swc_Tree_Node_Map 33,954
  Swc_Tree_Node *tree_node;tree_node34,990
} Swc_Tree_Node_Map;35,1018
typedef struct _Swc_Tree 41,1114
  Swc_Tree_Node *root;root42,1141
  Swc_Tree_Node *iterator;iterator43,1197
  Swc_Tree_Node *begin;begin44,1245
} Swc_Tree;45,1306
typedef struct _Swc_Tree_Branch 47,1319
  Swc_Tree_Node *end;end48,1353
  int n;49,1375
} Swc_Tree_Branch;50,1384
enum { SWC_TREE_NODE_FORWARD,424,13157
enum { SWC_TREE_NODE_FORWARD, SWC_TREE_NODE_BACKWARD 424,13157
  SWC_TREE_ITERATOR_REVERSE 601,19511
  SWC_TREE_ITERATOR_NO_UPDATE 602,19545
  SWC_TREE_ITERATOR_DEPTH_FIRST,603,19581
  SWC_TREE_ITERATOR_BREADTH_FIRST 604,19615

tz_testdata.h,30
#define _TZ_TESTDATA_H_8,129

tz_tiff_image.h,1862
#define _TZ_TIFF_IMAGE_H_8,129
#define Channel_Meaning 17,259
#define CHAN_WHITE 18,302
#define CHAN_BLACK 19,335
#define CHAN_MAPPED 20,368
#define CHAN_RED 21,403
#define CHAN_GREEN 22,432
#define CHAN_BLUE 23,465
#define CHAN_ALPHA 24,496
#define CHAN_MATTE 25,529
#define CHAN_MASK 26,562
#define CHAN_OTHER 27,593
#define CHAN_UNSIGNED 28,626
#define CHAN_SIGNED 29,665
#define CHAN_FLOAT 30,700
#define Channel_Type 31,733
#define Tiff_Histogram 32,770
#define Tiff_Channel 33,811
#define Tiff_Image 34,848
#define Tiff_Image_Error 35,881
#define Extract_Image_From_IFD 36,926
#define Create_Tiff_Image 37,983
#define Add_Tiff_Image_Channel 38,1030
#define Make_IFD_For_Image 39,1087
#define Scale_Tiff_Channel 40,1136
#define Range_Tiff_Channel 41,1185
#define Shift_Tiff_Channel 42,1234
#define Histogram_Tiff_Channel 43,1283
#define Histogram_Tiff_Image_Channels 44,1340
#define Tiff_Histogram_Merge 45,1411
#define Scale_Tiff_Image 46,1464
#define Shift_Tiff_Image 47,1509
#define Copy_Tiff_Channel 48,1554
#define Pack_Tiff_Channel 49,1601
#define Free_Tiff_Channel 50,1648
#define Kill_Tiff_Channel 51,1695
#define Reset_Tiff_Channel 52,1742
#define Tiff_Channel_Usage 53,1791
#define Copy_Tiff_Image 54,1840
#define Pack_Tiff_Image 55,1883
#define Free_Tiff_Image 56,1926
#define Kill_Tiff_Image 57,1969
#define Reset_Tiff_Image 58,2012
#define Tiff_Image_Usage 59,2057
#define Copy_Tiff_Histogram 60,2102
#define Pack_Tiff_Histogram 61,2153
#define Free_Tiff_Histogram 62,2204
#define Kill_Tiff_Histogram 63,2255
#define Reset_Tiff_Histogram 64,2306
#define Tiff_Histogram_Usage 65,2359
#define halfp_2_fullp 66,2412
#define PackBits_Decoder 67,2451
#define PackBits_Encoder 68,2496
#define LZW_Decoder 69,2541
#define LZW_Encoder 70,2576
#undef _TIFF_IMAGE73,2644
#undef _TIFF_IMAGE75,2687

tz_tiff_io.h,335
#  undef TIFF_BYTE16,303
#  undef TIFF_ASCII17,322
#  undef TIFF_SHORT18,342
#  undef TIFF_LONG19,362
#  undef TIFF_RATIONAL20,381
#  undef TIFF_SBTYE21,404
#  undef TIFF_UNDEFINED22,424
#  undef TIFF_SSHORT23,448
#  undef TIFF_SLONG24,469
#  undef TIFF_SRATIONAL25,489
#  undef TIFF_FLOAT26,513
#  undef TIFF_DOUBLE27,533

tz_trace_defs.h,2481
#define _TZ_TRACE_DEFS_H_ 8,132
#define CHAIN_VERSION 17,297
typedef int Trace_Test_f(19,324
typedef struct _Trace_Workspace 25,437
  int length;26,471
  BOOL fit_first;27,522
  BOOL refit;28,575
  BOOL break_refit;29,615
  BOOL tune_end;30,662
  int tscore_option;31,704
  double min_score;32,762
  double min_chain_length;33,805
  double trace_step;34,870
  double seg_length;35,918
  int chain_id;36,974
  Dlist_Direction_e trace_direction;37,1013
  int trace_status[trace_status38,1073
  int stop_reason[stop_reason39,1148
  double trace_range[trace_range40,1194
  Stack *sup_stack;sup_stack41,1243
  Stack *trace_mask;trace_mask42,1289
  BOOL trace_mask_updating;43,1332
  BOOL canvas_updating;44,1395
  Stack *canvas;canvas45,1448
  double dyvar[dyvar46,1504
  Trace_Test_f *test_func;test_func48,1608
  double resolution[resolution49,1663
  char save_path[save_path50,1717
  char save_prefix[save_prefix51,1775
  void *fit_workspace;fit_workspace52,1835
} Trace_Workspace;53,1900
  TRACE_RECORD_FIT_SCORE_MASK 57,1956
  TRACE_RECORD_HIT_REGION_MASK,58,1991
  TRACE_RECORD_INDEX_MASK,59,2023
  TRACE_RECORD_REFIT_MASK,60,2050
  TRACE_RECORD_FIT_HEIGHT_MASK,61,2077
  TRACE_RECORD_DIRECTION_MASK,62,2109
  TRACE_RECORD_FIX_POINT_MASK63,2140
typedef struct _Trace_Record 70,2240
  Bitmask_t mask;71,2271
  Stack_Fit_Score fs;72,2289
  int hit_region;73,2311
  int index;74,2329
  int refit;75,2342
  int fit_height[fit_height76,2383
  Dlist_Direction_e direction;77,2404
  double fix_point;78,2435
} Trace_Record;79,2455
  TRACE_NORMAL 83,2500
  TRACE_HIT_MARK,84,2546
  TRACE_LOW_SCORE,85,2642
  TRACE_TOO_LARGE,86,2729
  TRACE_TOO_SMALL,87,2778
  TRACE_INVALID_SHAPE,88,2826
  TRACE_LOOP_FORMED,89,2881
  TRACE_OUT_OF_BOUND,90,2932
  TRACE_REPEATED,91,2984
  TRACE_OVER_REFIT,92,3045
  TRACE_SEED_OUT_OF_BOUND,93,3093
  TRACE_SIZE_CHANGE,94,3157
  TRACE_SIGNAL_CHANGE,95,3211
  TRACE_OVERLAP,96,3268
  TRACE_REFIT,97,3324
  TRACE_NOT_ASSIGNED 98,3372
typedef struct _Connection_Test_Workspace 101,3428
  int hook_spot;102,3472
  double dist;103,3489
  double cos1;104,3504
  double cos2;105,3519
  double dist_thre;106,3534
  BOOL good_dist;107,3554
  double resolution[resolution108,3572
  char unit;109,3596
  Stack *mask;mask110,3641
  double big_euc;111,3656
  double big_planar;112,3674
  BOOL sp_test;113,3695
  BOOL interpolate;114,3711
} Connection_Test_Workspace;115,3731

tz_trace_utils.h,446
#define _TZ_TRACE_UTILS_H_8,128
typedef struct _Trace_Evaluate_Seed_Workspace 78,2780
  int score_option;79,2828
  double min_score;80,2848
  int nseed;81,2868
  int fit_option;82,2881
  BOOL zshift;83,2899
  Stack *base_mask;base_mask84,2914
  Stack *trace_mask;trace_mask85,2934
  Locseg_Fit_Workspace *fws;fws86,2955
  double *score;score87,2984
  Local_Neuroseg *locseg;locseg88,3001
} Trace_Evaluate_Seed_Workspace;89,3027

tz_tvoxel.h,119
#define __TZ_TVOXEL_H_8,112
#define INT_VOXEL_TYPE14,174
typedef int Voxel_t[Voxel_t16,198
#define voxel_t 18,223

tz_u16array.h,30
#define _TZ_U16ARRAY_H_7,112

tz_u8array.h,29
#define _TZ_U8ARRAY_H_7,109

tz_u8matrix.h,160
#define _TZ_U8Matrix_H_12,180
  ndim_t ndim;36,725
  dim_t dim[dim37,740
  tz_uint8 *array;array38,762
} U8Matrix;39,781
#define U8Matrix_Print 68,2170

tz_unipointer.h,67
#define _TZ_UNIPOINTER_H_8,126
typedef void* unipointer_t;14,191

tz_unipointer_arraylist.h,199
#define _TZ_Unipointer_ARRAYLIST_H_10,245
typedef struct _Unipointer_Arraylist 19,384
  int length;20,423
  int capacity;21,437
  unipointer_t *array;array22,453
} Unipointer_Arraylist;23,476

tz_unipointer_linked_list.h,184
#define _TZ_Unipointer_LINKED_LIST_H_14,277
typedef struct _Unipointer_List 21,381
  unipointer_t data;22,415
  struct _Unipointer_List *next;next23,436
} Unipointer_List;24,469

tz_utilities.h,2627
#define _TZ_UTILITIES_H_8,124
typedef uint8_t tz_uint8;18,254
typedef int8_t tz_int8;19,280
typedef uint16_t tz_uint16;20,304
typedef int16_t tz_int16;21,332
typedef uint32_t tz_uint32;22,358
typedef int32_t tz_int32;23,386
typedef uint64_t tz_uint64;24,412
typedef int64_t tz_int64;25,440
typedef float tz_float32;26,466
typedef double tz_float64;27,492
#define BYTE_ARRAY(29,520
#define DATA_TYPE_NUMBER 31,566
typedef enum {FLOAT64_TD=FLOAT64_TD33,595
typedef enum {FLOAT64_TD=0,FLOAT32_TD,33,595
typedef enum {FLOAT64_TD=0,FLOAT32_TD,INT64_TD,33,595
typedef enum {FLOAT64_TD=0,FLOAT32_TD,INT64_TD,UINT64_TD,33,595
typedef enum {FLOAT64_TD=0,FLOAT32_TD,INT64_TD,UINT64_TD,INT32_TD,33,595
	      UINT32_TD,34,662
	      UINT32_TD,INT16_TD,34,662
	      UINT32_TD,INT16_TD,UINT16_TD,34,662
	      UINT32_TD,INT16_TD,UINT16_TD,INT8_TD,34,662
	      UINT32_TD,INT16_TD,UINT16_TD,INT8_TD,UINT8_TD,34,662
	      DOUBLE_TD=35,716
	      DOUBLE_TD=0,FLOAT_TD,35,716
	      DOUBLE_TD=0,FLOAT_TD,LLONG_TD,35,716
	      DOUBLE_TD=0,FLOAT_TD,LLONG_TD,ULLONG_TD,35,716
	      DOUBLE_TD=0,FLOAT_TD,LLONG_TD,ULLONG_TD,LONG_TD,35,716
	      DOUBLE_TD=0,FLOAT_TD,LLONG_TD,ULLONG_TD,LONG_TD,ULONG_TD,35,716
	      SHORT_TD,36,781
	      SHORT_TD,USHORT_TD,36,781
	      SHORT_TD,USHORT_TD,CHAR_TD,36,781
	      SHORT_TD,USHORT_TD,CHAR_TD,UCHAR_TD,36,781
	      INT_TD,37,825
	      INT_TD,UINT_TD}UINT_TD37,825
	      INT_TD,UINT_TD} Data_Type_t;37,825
const static int gDataSize[gDataSize39,862
#define MAX2(42,948
#define MIN2(43,991
#define MAX3(45,1035
#define MIN3(46,1106
#define MEDIAN3(47,1177
INLINE float sqr(49,1269
INLINE double dsqr(50,1313
INLINE double dmax2(51,1360
INLINE double dmin2(52,1425
INLINE float fmax2(53,1490
INLINE float fmin2(54,1552
INLINE long lmax2(55,1614
INLINE long lmin2(56,1673
INLINE int imax2(57,1732
INLINE int imin2(58,1788
#define DEFINE_MAX3_FUNC(60,1845
#define DEFINE_MIN3_FUNC(64,2021
DEFINE_MAX3_FUNC(68,2197
#define XOR_SWAP(77,2590
#define SWAP2(78,2639
#define IS_IN_CLOSE_RANGE(80,2697
#define IS_IN_OPEN_RANGE(81,2771
#define IS_IN_CLOSE_RANGE3(83,2843
#define IS_IN_OPEN_RANGE3(87,3032
#define SHIFT2(91,3217
#define SHIFT3(92,3261
#define OBJECT_SAFE_FREE(220,6818
#  undef GUARDED_MALLOC_ARRAY227,6971
#define GUARDED_MALLOC_ARRAY(230,7009
#define GUARDED_CALLOC_ARRAY(233,7130
#define GUARDED_REALLOC_ARRAY(236,7248
#define GUARDED_FOPEN(239,7378
#  undef MALLOC_2D_ARRAY243,7498
#  undef FREE_2D_ARRAY247,7557
#define MALLOC_2D_ARRAY(250,7588
#define FREE_2D_ARRAY(256,7777
#define memset_pattern4 338,9833

tz_voxel.h,151
#define _TZ_VOXEL_H_7,94
typedef struct _Voxel 22,285
  int x;23,309
  int y;24,318
  int z;25,327
} Voxel;26,336
typedef Voxel* Voxel_P;28,346

tz_voxel_graph.h,55
#define _TZ_VOXEL_GRAPH_H_8,122
} Voxel_Graph;22,351

tz_voxel_graphics.h,36
#define _TZ_VOXEL_GRAPHICS_H_7,110

tz_voxel_linked_list.h,159
#define _TZ_Voxel_LINKED_LIST_H_14,252
typedef struct _Voxel_List 21,346
  Voxel_P data;22,375
  struct _Voxel_List *next;next23,391
} Voxel_List;24,419

tz_voxel_linked_list_ext.h,43
#define _TZ_VOXEL_LINKED_LIST_EXT_H_8,163

tz_voxeltrans.h,33
#define _TZ_VOXELTRANSH_H_7,111

tz_vrml_defs.h,3028
#define _TZ_VRML_DEFS_H_ 8,127
#define VRML_INDENT 22,419
typedef BOOL SFBool;24,442
typedef double SFFloat;25,463
typedef void* SFNode;26,487
typedef Unipointer_List MFNode;27,509
typedef double SFVec3f[SFVec3f28,541
typedef double SFColor[SFColor29,568
typedef double SFRotation[SFRotation30,595
  VRML_SPHERE 33,641
  VRML_SPHERE = 1, VRML_CONE,33,641
  VRML_SPHERE = 1, VRML_CONE, VRML_BOX,33,641
  VRML_SPHERE = 1, VRML_CONE, VRML_BOX, VRML_CYLINDER,33,641
  VRML_SPHERE = 1, VRML_CONE, VRML_BOX, VRML_CYLINDER, VRML_INDEXED_FACESET33,641
} Vrml_Geometry_e;34,717
  SFNODE_APPEARANCE 37,752
  SFNODE_APPEARANCE = 1, SFNODE_GEOMETRY,37,752
  SFNODE_APPEARANCE = 1, SFNODE_GEOMETRY, SFNODE_MATERIAL,37,752
  SFNODE_APPEARANCE = 1, SFNODE_GEOMETRY, SFNODE_MATERIAL, SFNODE_TEXTURE,37,752
  SFNODE_TEXTURE_TRANSFORM,38,827
  SFNODE_TEXTURE_TRANSFORM, SFNODE_TRANSFORM38,827
} SFNode_Id_e;39,872
typedef struct _Vrml_SFNode 41,888
  SFNode_Id_e id;42,918
  SFNode node;43,936
} Vrml_SFNode;44,951
typedef struct _Vrml_Geometry 46,967
  Vrml_Geometry_e id;47,999
  void *geometry;geometry48,1021
} Vrml_Geometry;49,1039
typedef struct _Vrml_Sphere 51,1057
  Bitmask_t default_mask;52,1087
  SFFloat radius;53,1113
} Vrml_Sphere;54,1131
typedef struct _Vrml_Cone 56,1147
  Bitmask_t default_mask;57,1175
  SFFloat bottom_radius;58,1201
  SFFloat height;59,1226
  SFBool side;60,1244
  SFBool bottom;61,1259
} Vrml_Cone;62,1276
typedef struct _Vrml_Box 64,1290
  SFVec3f size;65,1317
} Vrml_Box;66,1333
typedef struct _Vrml_Cylinder 68,1346
  SFBool bottom;69,1378
  SFFloat height;70,1395
  SFFloat radius;71,1413
  SFBool side;72,1431
  SFBool top;73,1446
} Vrml_Cylinder;74,1460
  AMBIENT_INTENSITY 77,1485
  AMBIENT_INTENSITY = 0, DIFFUSE_COLOR,77,1485
  AMBIENT_INTENSITY = 0, DIFFUSE_COLOR, EMISSIVE_COLOR,77,1485
  AMBIENT_INTENSITY = 0, DIFFUSE_COLOR, EMISSIVE_COLOR, SHININESS,77,1485
  SPECULAR_COLOR,78,1552
  SPECULAR_COLOR, TRANSPARENCY78,1552
typedef struct _Vrml_Material 80,1586
  Bitmask_t default_mask;81,1618
  SFFloat ambient_intensity;82,1644
  SFColor diffuse_color;83,1673
  SFColor emissive_color;84,1698
  SFFloat shininess;85,1724
  SFColor specular_color;86,1745
  SFFloat transparency;87,1771
} Vrml_Material;88,1795
typedef void* Vrml_Texture;90,1813
typedef void* Vrml_Texture_Transform;91,1841
typedef struct _Vrml_Appearance 93,1880
  Vrml_Material material;94,1914
  Vrml_Texture texture;95,1940
  Vrml_Texture_Transform textureTransform;96,1964
} Vrml_Appearance;97,2007
typedef struct _Vrml_Shape 99,2027
  Vrml_Appearance appearance;100,2056
  Vrml_Geometry geometry;101,2086
} Vrml_Shape;102,2112
typedef struct _Vrml_Transform 104,2127
  SFVec3f center;105,2160
  MFNode children;106,2178
  SFRotation rotation;107,2197
  SFVec3f scale;108,2220
  SFRotation  scaleOrientation;109,2237
  SFVec3f translation;110,2269
  SFVec3f bbox_center;111,2292
  SFVec3f bbox_size;112,2315
} Vrml_Transform;113,2336

tz_vrml_io.h,30
#define _TZ_VRML_IO_H_ 8,119

tz_vrml_material.h,36
#define _TZ_VRML_MATERIAL_H_ 8,129

tz_vrml_utils.h,63
#define _TZ_VRML_UTILS_H_8,129
#define VRML_MIN_SCALE 16,239

tz_workspace.h,3379
#define _TZ_WORKSPACE_H_7,96
typedef struct _Receptor_Score_Workspace 17,274
  Stack_Fit_Score fs;18,317
  double (*field_func)field_func19,339
  Stack *mask;mask20,380
} Receptor_Score_Workspace;21,395
#define RECEPTOR_MAX_VAR_NUMBER 23,424
typedef struct _Receptor_Fit_Workspace 24,459
  int var_index[var_index25,500
  int nvar;26,542
  int *var_link;var_link27,554
  double var_min[var_min28,571
  double var_max[var_max29,614
  int pos_adjust;30,657
  Receptor_Score_Workspace *sws;sws31,675
} Receptor_Fit_Workspace;32,708
#define Locseg_Score_Workspace 34,735
#define Locseg_Fit_Workspace 35,791
#define Locseg_Ellipse_Score_Workspace 37,844
#define Locseg_Ellipse_Fit_Workspace 38,908
enum { LOCSEG_LABEL_OPTION_GREY 40,969
enum { LOCSEG_LABEL_OPTION_GREY = 1, LOCSEG_LABEL_OPTION_WEAK,40,969
  LOCSEG_LABEL_OPTION_WEAK_MEAN,41,1033
  LOCSEG_LABEL_OPTION_WEAK_MEAN, LOCSEG_LABEL_OPTION_WEAK_MIN,41,1033
  LOCSEG_LABEL_OPTION_ADD 42,1097
  LOCSEG_LABEL_OPTION_ADD = 6, LOCSEG_LABEL_OPTION_SUB,42,1097
  LOCSEG_LABEL_OPTION_SKEL 43,1153
  LOCSEG_LABEL_OPTION_SKEL = 10, LOCSEG_LABEL_OPTION_DRAW 43,1153
typedef struct _Locseg_Label_Workspace 58,1665
  Stack *signal;signal59,1706
  int option;60,1723
  int flag;61,1737
  color_t color;63,1879
  int value;64,1896
  double sratio;65,1909
  double sdiff;66,1926
  double slimit;67,1942
  Stack *buffer_mask;buffer_mask68,1959
  int range[range69,2028
} Locseg_Label_Workspace;70,2074
#define New_Locseg_Score_Workspace 91,2920
#define Default_Locseg_Score_Workspace 92,2984
#define Delete_Locseg_Score_Workspace 93,3056
#define Clean_Locseg_Score_Workspace 94,3126
#define Kill_Locseg_Score_Workspace 95,3194
#define Locseg_Score_Workspace_Copy 96,3260
#define Print_Locseg_Score_Workspace 97,3326
#define New_Locseg_Ellipse_Score_Workspace 99,3395
#define Default_Locseg_Ellipse_Score_Workspace 100,3467
#define Delete_Locseg_Ellipse_Score_Workspace 101,3547
#define Clean_Locseg_Ellipse_Score_Workspace 102,3625
#define Kill_Locseg_Ellipse_Score_Workspace 103,3701
#define Locseg_Ellipse_Score_Workspace_Copy 104,3775
#define Print_Locseg_Ellipse_Score_Workspace 105,3849
DECLARE_ZOBJECT_INTERFACE(123,4603
#define Delete_Locseg_Fit_Workspace 130,4875
#define Clean_Locseg_Fit_Workspace 131,4941
#define Kill_Locseg_Fit_Workspace 132,5005
#define Locseg_Fit_Workspace_Copy 133,5067
#define Print_Locseg_Fit_Workspace 134,5129
#define Delete_Locseg_Ellipse_Fit_Workspace 140,5397
#define Clean_Locseg_Ellipse_Fit_Workspace 141,5471
#define Kill_Locseg_Ellipse_Fit_Workspace 142,5543
#define Locseg_Ellipse_Fit_Workspace_Copy 143,5613
#define Print_Locseg_Ellipse_Fit_Workspace 144,5683
typedef struct _Locseg_Chain_Skel_Workspace 154,6019
  Locseg_Fit_Workspace *fw;fw155,6065
  double sr;156,6093
  double ss;157,6106
  double er;158,6119
  double es;159,6132
} Locseg_Chain_Skel_Workspace;160,6145
DECLARE_ZOBJECT_INTERFACE(162,6177
typedef struct _Swc_Tree_Svg_Workspace 164,6233
  Geo3d_Scalar_Field *puncta;puncta165,6274
  BOOL *on_root;on_root166,6304
  int *puncta_type;puncta_type167,6321
  BOOL shuffling;168,6341
  BOOL showing_count;169,6359
  BOOL showing_length;170,6381
  int depth_code;171,6404
  int max_vx;172,6422
  int max_vy;173,6436
} Swc_Tree_Svg_Workspace;174,6450
DECLARE_ZOBJECT_INTERFACE(176,6477

tz_xml_utils.h,193
#define _TZ_XML_UTILS_H_7,96
typedef unsigned char xmlChar;20,330
typedef void* xmlNodePtr;21,361
typedef void* xmlDocPtr;22,387
#define XML_STRING(26,447
#define CONST_XML_STRING(27,488

tz_xz_orientation.h,126
#define _TZ_XZ_ORIENTATION_H_8,141
typedef double xz_orientation_t[xz_orientation_t35,942
#define Xz_Orientation_t 37,979

tz_zobject.h,404
#define _TZ_ZOBJECT_H_7,92
#define NEW_ZOBJECT(26,433
#define DEFAULT_ZOBJECT(27,487
#define CLEAN_ZOBJECT(28,549
#define DELETE_ZOBJECT(29,607
#define KILL_ZOBJECT(30,667
#define PRINT_ZOBJECT(31,723
#define DECLARE_ZOBJECT_INTERFACE(33,782
#define DEFINE_NEW_ZOBJECT(41,1108
#define DEFINE_DELETE_ZOBJECT(48,1344
#define DEFINE_KILL_ZOBJECT(55,1503
#define DEFINE_ZOBJECT_INTERFACE(63,1710

../lib/genelib/src/cdf.c,2185
#undef DEBUG19,1039
typedef enum { NORMAL,27,1191
typedef enum { NORMAL, BINOMIAL,27,1191
typedef enum { NORMAL, BINOMIAL, POISSON,27,1191
typedef enum { NORMAL, BINOMIAL, POISSON, BERNOUILLI,27,1191
               GEOMETRIC,28,1245
               GEOMETRIC, EXPONENTIAL,28,1245
               GEOMETRIC, EXPONENTIAL, FAIRCOIN,28,1245
               GEOMETRIC, EXPONENTIAL, FAIRCOIN, UNIFORM 28,1245
               GEOMETRIC, EXPONENTIAL, FAIRCOIN, UNIFORM } ctype;28,1245
typedef struct _cdf30,1312
  { struct _cdf *next;next31,1332
    ctype        kind;32,1429
    double       parm1;33,1526
    double       parm2;34,1623
    int          parm3;35,1720
    int          low;37,1914
    int          spn;38,2011
    double      *tab;tab39,2108
  } Cdf;40,2205
static inline int cdf_tsize(42,2215
typedef struct __Cdf46,2297
  { struct __Cdf *next;next47,2318
    int           tsize;48,2342
    Cdf           cdf;49,2367
  } _Cdf;50,2390
static _Cdf *Free_Cdf_List Free_Cdf_List52,2401
static int    Cdf_Offset,53,2436
static int    Cdf_Offset, Cdf_Inuse;53,2436
static inline void allocate_cdf_tab(55,2474
static inline Cdf *new_cdf(new_cdf65,2806
static inline Cdf *copy_cdf(copy_cdf82,3241
CDF *Copy_CDF(Copy_CDF92,3484
static inline void pack_cdf(95,3553
void Pack_CDF(109,3975
static inline void free_cdf(112,4029
void Free_CDF(119,4204
static inline void kill_cdf(122,4258
void Kill_CDF(130,4458
static inline void reset_cdf(133,4512
void Reset_CDF(143,4720
int CDF_Usage(146,4755
static int bin_search(149,4796
#define UNORM_LEN 173,5274
#define UNORM_MAX 174,5298
static double unorm_table[unorm_table176,5323
static double unorm_scale;177,5398
static int    unorm_defined 178,5425
static void init_unorm(180,5459
static double sample_unorm(212,6224
CDF *Normal_CDF(Normal_CDF240,6811
CDF *Binomial_CDF(Binomial_CDF260,7202
CDF *Poisson_CDF(Poisson_CDF392,9967
CDF *Bernouilli_CDF(Bernouilli_CDF488,11874
CDF *Geometric_CDF(Geometric_CDF519,12400
CDF *Exponential_CDF(Exponential_CDF529,12580
CDF *Uniform_CDF(Uniform_CDF539,12766
CDF *FairCoin_CDF(FairCoin_CDF550,12982
double Sample_CDF(560,13156

../lib/genelib/src/contour_lib.c,1682
static int     Contour_Length_Max 29,1439
static int     Cwidth;30,1479
static int     Carea;31,1502
static uint8  *Value8;Value832,1524
static uint16 *Value16;Value1633,1547
static inline int contour_tsize(35,1572
typedef struct __Contour39,1668
  { struct __Contour *next;next40,1693
    int               tsize;41,1721
    Contour           contour;42,1750
  } _Contour;43,1781
static _Contour *Free_Contour_List Free_Contour_List45,1796
static int    Contour_Offset,46,1839
static int    Contour_Offset, Contour_Inuse;46,1839
static inline void allocate_contour_tour(48,1885
static inline Contour *new_contour(new_contour58,2261
static inline Contour *copy_contour(copy_contour75,2753
Contour *Copy_Contour(Copy_Contour85,3064
static inline void pack_contour(88,3141
void Pack_Contour(102,3631
static inline void free_contour(105,3695
void Free_Contour(112,3910
static inline void kill_contour(115,3974
void Kill_Contour(123,4219
static inline void reset_contour(126,4283
int Contour_Usage(136,4523
void Reset_Contour(139,4572
static inline int legal_move(149,4865
static inline int boundary_pixel(162,5108
static inline int is_le(167,5244
static inline int is_ge(174,5385
static inline int is_eq(181,5526
Contour *Trace_Region(Trace_Region188,5667
Contour *Trace_Level_Set(Trace_Level_Set385,10514
Contour *Trace_Watershed(Trace_Watershed394,10829
Contour_Extent *Contour_Get_Extent(Contour_Get_Extent410,11527
static int RSORT(456,12699
int *Raster_Scan(Raster_Scan463,12817
int *Yaster_Scan(Yaster_Scan563,14977
int Contour_Area(665,17293
int Contour_Center_Of_Mass(680,17645
int Contour_Bright_Center_Of_Mass(709,18327

../lib/genelib/src/draw_lib.c,2130
static uint8   *bytes;bytes23,1117
static uint16  *shorts;shorts24,1140
static float32 *reals;reals25,1164
static int     red;27,1188
static int     green;28,1208
static int     blue;29,1230
static float32 rred;31,1252
static float32 rgreen;32,1273
static float32 rblue;33,1296
static void PAINT_GREY_SET(37,1350
static void PAINT_GREY_ADD(40,1405
static void PAINT_GREY_SUB(48,1531
static void PAINT_GREY_MUL(56,1651
static void PAINT_GREY_MAX(59,1718
static void PAINT_GREY_MIN(65,1811
static void PAINT_GREY16_SET(73,1937
static void PAINT_GREY16_ADD(76,1995
static void PAINT_GREY16_SUB(84,2130
static void PAINT_GREY16_MUL(92,2255
static void PAINT_GREY16_MAX(95,2326
static void PAINT_GREY16_MIN(101,2423
static void PAINT_COLOR_SET(109,2552
static void PAINT_COLOR_ADD(119,2720
static void PAINT_COLOR_SUB(148,3179
static void PAINT_COLOR_MUL(177,3620
static void PAINT_COLOR_MAX(187,3831
static void PAINT_COLOR_MIN(210,4169
static void PAINT_FLOAT32_SET(235,4541
static void PAINT_FLOAT32_ADD(238,4600
static void PAINT_FLOAT32_SUB(241,4660
static void PAINT_FLOAT32_MUL(244,4720
static void PAINT_FLOAT32_MAX(247,4780
static void PAINT_FLOAT32_MIN(253,4882
static void *Painter_Table[Painter_Table259,4984
static void *SETUP_PAINTER(SETUP_PAINTER269,5474
void Draw_Contour_Outline(305,6587
void Draw_Contour_Interior(320,6936
void Draw_Contour_Exterior(343,7433
void Draw_Level_Set_Outline(376,8448
void Draw_Level_Set_Interior(383,8627
void Draw_Level_Set_Exterior(390,8808
void Draw_Watershed_Outline(403,9441
void Draw_Watershed_Interior(410,9634
void Draw_Watershed_Exterior(417,9829
static uint8  *Value8;Value8430,10476
static uint16 *Value16;Value16431,10540
static int     Level;432,10564
static int is_le(434,10587
static int is_ge(441,10710
static int is_eq(448,10833
void Draw_Region(455,10956
void Draw_Watershed(491,11910
void Draw_Level_Set(509,12449
void Draw_Rectangle(525,13302
void Draw_Image(558,13935
void Draw_Point(563,14097
void Draw_Cross(575,14399
void Draw_Circle(605,15033
void Draw_Line(651,16052
#define SCAN_BODY(680,16705

../lib/genelib/src/fct_min.c,1040
#undef  SHOW_MINIMIZATION18,859
#undef  SHOW_MULTI_MIN19,885
#undef  TEST_DRIVER20,908
#undef  FUNC321,928
#define ITMAX 23,943
#define CGOLD 24,1005
#define TINY 25,1085
#define RND 26,1151
#define TOL 27,1228
Min_Bracket *Find_Min_Bracket(Find_Min_Bracket38,1707
static double Min_Fct_NoD(168,5989
static double Min_Fct_wD(310,10841
double Minimize_Fct(470,16257
static void print_vector(489,16919
static int     MFN_n;500,17145
static double *MFN_pc;MFN_pc504,17344
static double *MFN_dir;MFN_dir505,17433
static double *MFN_pe MFN_pe506,17498
static void init_line_min(508,17585
static double f1dim(520,17871
static double df1dim(528,18059
static inline double line_min_nod(538,18343
static inline double line_min_wd(552,18698
double Powell_Minimizer(574,19471
double **Make_Orthogonal_Step(Make_Orthogonal_Step678,21835
double Polak_Rabier_Minimizer(702,22376
double poly(772,23815
double dpoly(775,23870
double poly3(778,23922
double *dpoly3(dpoly3782,24094
int main(792,24299
int main(816,24912

../lib/genelib/src/fct_root.c,425
#define SHOW_ROOT18,860
#define TEST_DRIVER19,878
#define ITMAX 21,899
#define CGOLD 22,961
#define TINY 23,1045
#define EPS 24,1111
Root_Bracket *Find_Root_Bracket(Find_Root_Bracket35,1572
static double Fct_Root_NoD(76,2389
static double Fct_Root_wD(180,5549
double Find_Function_Root(248,7019
double poly(258,7232
double dpoly(261,7293
double poly3(264,7363
double *dpoly3(dpoly3268,7535
int main(276,7726

../lib/genelib/src/fft.c,844
#define TPI 17,836
#undef  DEBUG19,866
#undef  DEBUGn20,880
#undef  DEBUG_COMPn21,895
static void print_complex(25,930
static void print_double(42,1326
int Next_Power_Of_2(61,1805
Complex *FFT(FFT75,2126
Complex *Real_FFT(Real_FFT224,6939
double *Real_FFT_Inverse(Real_FFT_Inverse284,9016
double *FFT_Convolution(FFT_Convolution337,10840
double *FFT_Correlation(FFT_Correlation373,11929
#define DSIZE 406,12747
int main(408,12770
void print_index(429,13069
static void print_complex_n(442,13325
static void print_double_n(466,13892
Complex *FFT_n(FFT_n492,14573
Complex *Real_FFT_n(Real_FFT_n693,21426
double *Real_FFT_Inverse_n(Real_FFT_Inverse_n883,27696
double *FFT_Convolution_n(FFT_Convolution_n1050,32498
double *FFT_Correlation_n(FFT_Correlation_n1092,33751
#define DSIZE 1130,34690
int main(1132,34709

../lib/genelib/src/hash.c,1979
{ int      next;20,970
  int      text;21,1011
  void    *user;user22,1091
} Hash_Entry;23,1125
{ int         size;26,1155
  int         count;27,1204
  int         strtop;28,1265
  int        *vector;vector29,1323
  Hash_Entry *cells;cells30,1364
  char       *strings;strings31,1430
} Table;32,1482
#define CELL_RATIO 34,1492
#define STRING_RATIO 35,1566
#define T(37,1657
static inline int table_vsize(43,1824
static inline int table_csize(46,1907
static inline int table_ssize(49,2018
typedef struct __Table53,2100
  { struct __Table *next;next54,2123
    int             vsize;55,2149
    int             csize;56,2176
    int             ssize;57,2203
    Table           table;58,2230
  } _Table;59,2257
static _Table *Free_Table_List Free_Table_List61,2270
static int    Table_Offset,62,2309
static int    Table_Offset, Table_Inuse;62,2309
static inline void allocate_table_vector(64,2351
static inline void allocate_table_cells(74,2715
static inline void allocate_table_strings(84,3075
static inline Table *new_table(new_table94,3443
static inline Table *copy_table(copy_table115,4095
Hash_Table *Copy_Hash_Table(Copy_Hash_Table131,4665
static inline void pack_table(134,4780
void Pack_Hash_Table(168,5952
static inline void free_table(171,6038
void Free_Hash_Table(178,6233
static inline void kill_table(181,6319
void Kill_Hash_Table(193,6646
static inline void reset_table(196,6732
void Reset_Hash_Table(206,6956
int Hash_Table_Usage(209,7000
static inline int get_string_max(212,7050
static int hash_key(219,7311
static int next_prime(243,8105
void Print_Hash_Table(283,9027
Hash_Table *New_Hash_Table(New_Hash_Table298,9525
static Table *double_hash_table(double_hash_table317,10013
int Hash_Lookup(350,10891
int Hash_Add(367,11380
int Get_Hash_Table_Size(403,12486
char *Get_Hash_String(Get_Hash_String408,12622
void **Get_Hash_User_Hook(Get_Hash_User_Hook413,12817
void Clear_Hash_Table(418,12988

../lib/genelib/src/image_filters.c,536
#undef DEBUG_FILTER23,980
static void print_filter(25,1001
Image *Gaussian_2D_Filter(Gaussian_2D_Filter34,1195
Image *Mexican_Hat_2D_Filter(Mexican_Hat_2D_Filter63,1803
Image *Average_Round_2D_Filter(Average_Round_2D_Filter93,2462
Image *Average_Square_2D_Filter(Average_Square_2D_Filter134,3269
Image *Convolve_Image(Convolve_Image154,3624
Stack *Gaussian_3D_Filter(Gaussian_3D_Filter240,5748
Stack *Mexican_Hat_3D_Filter(Mexican_Hat_3D_Filter270,6419
Stack *Average_Square_3D_Filter(Average_Square_3D_Filter301,7148

../lib/genelib/src/image_lib.c,4734
static void error(24,1349
static char Empty_String[Empty_String33,1572
Stack_Plane *Select_Plane(Select_Plane35,1610
int Set_Stack_Plane(48,2056
  { Tiff_Reader *reader;reader72,2606
    Tiff_Writer *writer;writer73,2631
    int          eof;74,2656
    Tiff_IFD    *ifd;ifd75,2678
    Tiff_Image  *image;image76,2700
  } Tio;77,2724
typedef struct __Tio80,2735
  { struct __Tio *next;next81,2756
    Tio           tio;82,2780
  } _Tio;83,2803
static _Tio *Free_Tio_List Free_Tio_List85,2814
static int    Tio_Offset,86,2849
static int    Tio_Offset, Tio_Inuse;86,2849
static inline Tio *new_tio(new_tio88,2887
static inline Tio *copy_tio(copy_tio107,3352
Tiff *Copy_Tiff(Copy_Tiff122,3775
static inline void pack_tio(125,3850
void Pack_Tiff(135,4067
static inline void free_tio(138,4125
void Free_Tiff(153,4536
static inline void kill_tio(156,4594
void Kill_Tiff(170,4928
static inline void reset_tio(173,4986
void Reset_Tiff(183,5194
int Tiff_Usage(186,5230
static inline int image_asize(191,5328
static inline int image_tsize(194,5426
typedef struct __Image198,5508
  { struct __Image *next;next199,5531
    int             asize;200,5557
    int             tsize;201,5584
    Image           image;202,5611
  } _Image;203,5638
static _Image *Free_Image_List Free_Image_List205,5651
static int    Image_Offset,206,5690
static int    Image_Offset, Image_Inuse;206,5690
static inline void allocate_image_array(208,5732
static inline void allocate_image_text(218,6092
static inline Image *new_image(new_image228,6448
static inline Image *copy_image(copy_image247,7004
Image *Copy_Image(Copy_Image260,7418
static inline void pack_image(263,7483
void Pack_Image(287,8290
static inline void free_image(290,8344
void Free_Image(297,8539
static inline void kill_image(300,8593
void Kill_Image(310,8866
static inline void reset_image(313,8920
void Reset_Image(323,9144
int Image_Usage(326,9183
static inline int stack_vsize(331,9284
static inline int stack_tsize(334,9395
typedef struct __Stack338,9477
  { struct __Stack *next;next339,9500
    int             vsize;340,9526
    int             tsize;341,9553
    Stack           stack;342,9580
  } _Stack;343,9607
static _Stack *Free_Stack_List Free_Stack_List345,9620
static int    Stack_Offset,346,9659
static int    Stack_Offset, Stack_Inuse;346,9659
static inline void allocate_stack_array(348,9701
static inline void allocate_stack_text(358,10061
static inline Stack *new_stack(new_stack368,10417
static inline Stack *copy_stack(copy_stack387,10973
Stack *Copy_Stack(Copy_Stack400,11387
static inline void pack_stack(403,11452
void Pack_Stack(427,12259
static inline void free_stack(430,12313
void Free_Stack(437,12508
static inline void kill_stack(440,12562
void Kill_Stack(450,12835
static inline void reset_stack(453,12889
void Reset_Stack(463,13113
int Stack_Usage(466,13152
Tiff *Open_Tiff(Open_Tiff471,13256
static int determine_kind(505,14236
static void read_directory(523,14748
void Advance_Tiff(574,16099
int Tiff_EOF(591,16466
Image *Read_Tiff(Read_Tiff594,16524
void Write_Tiff(629,17220
void Close_Tiff(685,18773
File_Bundle *Parse_Stack_Name(Parse_Stack_Name704,19165
Image *Read_Image(Read_Image737,19992
static int tz_determine_kind(750,20155
Stack *Read_Stack(Read_Stack765,20423
Stack *Read_Stack_Planes(Read_Stack_Planes843,22089
void Write_Image(914,23833
void Write_Stack(922,23980
void Write_Stack_Planes(934,24326
void Set_Image_Text(953,24864
void Append_To_Image_Text(962,25132
void Set_Stack_Text(972,25462
void Append_To_Stack_Text(981,25730
Image *Make_Image(Make_Image993,26135
Stack *Make_Stack(Make_Stack1006,26384
static Pixel_Range *compute_minmax(compute_minmax1025,26838
Pixel_Range *Image_Range(Image_Range1082,28178
Pixel_Range *Stack_Range(Stack_Range1088,28377
static void scale_values(1097,28707
void Scale_Image(1125,29453
void Scale_Stack(1128,29621
void Scale_Image_To_Range(1133,29818
void Scale_Stack_To_Range(1143,30217
static void translate(1156,30694
Image *Translate_Image(Translate_Image1251,33254
Stack *Translate_Stack(Translate_Stack1293,34306
static void floor_values(1340,35507
void Floor_Image(1379,36387
void Floor_Stack(1382,36531
static void ceiling_values(1389,36769
void Ceiling_Image(1428,37661
void Ceiling_Stack(1431,37813
static void threshold_values(1438,38066
void Threshold_Image(1481,39015
void Threshold_Stack(1484,39169
void split_values(1489,39355
void Split_Color_Image(1500,39550
void Split_Color_Stack(1512,40017
void merge_values(1524,40536
Image *Make_Color_Image(Make_Color_Image1540,40805
Stack *Make_Color_Stack(Make_Color_Stack1573,41985

../lib/genelib/src/level_set.c,3364
#undef  DEBUG_REGIONS20,904
static void error(28,1379
  { int   father;44,2039
    int   set;45,2120
  } pixel;46,2201
  { int    left;51,2271
    int    right;52,2351
    int    size;53,2431
    int    start;54,2511
    uint16 level;55,2591
    uint16 peak;56,2671
  } regtree;57,2751
  { Image   *image_ref;image_ref60,2780
    Stack   *stack_ref;stack_ref61,2804
    regtree *array;array62,2828
    int      iscon4;63,2848
  } Comtree;64,2869
static regtree *regtrees;regtrees76,3375
static uint8   *value8;value877,3443
static uint16  *value16;value1678,3507
static int      cwidth;79,3571
static int      cheight;80,3635
static int      cdepth;81,3699
static int      carea;82,3763
static int      cvolume;83,3827
static Comtree *ctree ctree84,3891
void Set_Current_Component_Tree(86,3922
Component_Tree *Get_Current_Component_Tree(Get_Current_Component_Tree113,4715
Image *Get_Component_Tree_Image(Get_Component_Tree_Image116,4781
Stack *Get_Component_Tree_Stack(Get_Component_Tree_Stack121,4898
int Get_Component_Tree_Connectivity(126,5015
static inline int size(137,5585
static inline int level(144,5694
static inline int peak(153,5873
static inline int start(162,6050
inline Level_Set *Level_Set_Child(Level_Set_Child169,6165
inline Level_Set *Level_Set_Sibling(Level_Set_Sibling190,6585
inline int Level_Set_Size(211,7006
inline int Level_Set_Level(214,7090
inline int Level_Set_Peak(217,7176
inline int Level_Set_Leftmost(220,7260
inline int Level_Set_Background(223,7349
inline int Level_Set_Id(226,7433
inline Level_Set *Level_Set_Root(Level_Set_Root229,7513
void list_level_set(234,7649
void List_Level_Set(246,7893
static int *get_chord(get_chord258,8509
static pixel *get_pixels(get_pixels274,8853
static inline int comtree_asize(292,9273
typedef struct __Comtree301,9561
  { struct __Comtree *next;next302,9586
    int               asize;303,9614
    Comtree           comtree;304,9643
  } _Comtree;305,9674
static _Comtree *Free_Comtree_List Free_Comtree_List307,9689
static int    Comtree_Offset,308,9732
static int    Comtree_Offset, Comtree_Inuse;308,9732
static inline void allocate_comtree_array(310,9778
static inline Comtree *new_comtree(new_comtree320,10158
static inline Comtree *copy_comtree(copy_comtree337,10651
Component_Tree *Copy_Component_Tree(Copy_Component_Tree347,10973
static inline void pack_comtree(350,11116
void Pack_Component_Tree(364,11610
static inline void free_comtree(367,11716
void Free_Component_Tree(374,11931
static inline void kill_comtree(377,12037
void Kill_Component_Tree(385,12283
static inline void reset_comtree(388,12389
int Component_Tree_Usage(398,12629
void Reset_Component_Tree(401,12685
static pixel *pixels;pixels414,13233
static int find(418,13363
static int fuse(437,13814
static int flatten_tree(496,15309
static int chk_width;605,18182
static int chk_height;606,18204
static int chk_depth;607,18227
static int chk_iscon4;608,18249
static inline int *boundary_pixels_2d(boundary_pixels_2d610,18273
static inline int *boundary_pixels_3d(boundary_pixels_3d642,18825
Component_Tree *Build_2D_Component_Tree(Build_2D_Component_Tree703,20031
Component_Tree *Build_3D_Component_Tree(Build_3D_Component_Tree849,23355
static void _print_regions(1010,27457
void Print_Component_Tree(1019,27852

../lib/genelib/src/lu_matrix.c,227
#define TINY 19,953
static inline double pivot_check(21,975
int TDG_Solve(39,1602
void Cubic_Spline(126,3879
int LU_Decompose(201,5436
void Show_LU_Product(297,7670
void LU_Solve(322,8325
double LU_Determinant(351,8883

../lib/genelib/src/tiff_image.c,4722
float halfp_2_fullp(21,1142
#undef DEBUG_ENCODE55,2261
#undef DEBUG_DECODE56,2281
static unsigned char lowbits[lowbits58,2302
static unsigned char cmpbits[cmpbits59,2388
#define LZW_CLEAR_CODE 61,2481
#define LZW_EOI_CODE 62,2508
typedef struct __Tiff_Histogram65,2537
  { struct __Tiff_Histogram *next;next66,2569
    Tiff_Histogram           tiff_histogram;67,2604
  } _Tiff_Histogram;68,2649
static _Tiff_Histogram *Free_Tiff_Histogram_List Free_Tiff_Histogram_List70,2671
static int    Tiff_Histogram_Offset,71,2728
static int    Tiff_Histogram_Offset, Tiff_Histogram_Inuse;71,2728
static inline Tiff_Histogram *new_tiff_histogram(new_tiff_histogram73,2788
static inline Tiff_Histogram *copy_tiff_histogram(copy_tiff_histogram88,3269
Tiff_Histogram *Copy_Tiff_Histogram(Copy_Tiff_Histogram94,3466
static inline void free_tiff_histogram(97,3585
void Free_Tiff_Histogram(104,3870
static inline void kill_tiff_histogram(107,3969
void Kill_Tiff_Histogram(113,4133
static inline void reset_tiff_histogram(116,4232
void Reset_Tiff_Histogram(126,4528
int Tiff_Histogram_Usage(129,4585
static inline int tiff_channel_psize(132,4648
typedef struct __Tiff_Channel136,4780
  { struct __Tiff_Channel *next;next137,4810
    int                    psize;138,4843
    Tiff_Channel           tiff_channel;139,4877
  } _Tiff_Channel;140,4918
static _Tiff_Channel *Free_Tiff_Channel_List Free_Tiff_Channel_List142,4938
static int    Tiff_Channel_Offset,143,4991
static int    Tiff_Channel_Offset, Tiff_Channel_Inuse;143,4991
static inline void allocate_tiff_channel_plane(145,5047
static inline Tiff_Channel *new_tiff_channel(new_tiff_channel155,5477
static inline Tiff_Channel *copy_tiff_channel(copy_tiff_channel173,6082
Tiff_Channel *Copy_Tiff_Channel(Copy_Tiff_Channel185,6575
static inline void pack_tiff_channel(188,6682
void Pack_Tiff_Channel(202,7256
static inline void free_tiff_channel(205,7345
void Free_Tiff_Channel(214,7699
static inline void kill_tiff_channel(217,7788
void Kill_Tiff_Channel(227,8178
static inline void reset_tiff_channel(230,8267
void Reset_Tiff_Channel(240,8547
int Tiff_Channel_Usage(243,8600
static unsigned char *get_code_vector(get_code_vector246,8659
static inline int tiff_image_csize(262,9108
static inline int tiff_image_msize(265,9223
typedef struct __Tiff_Image273,9433
  { struct __Tiff_Image *next;next274,9461
    int                  csize;275,9492
    int                  msize;276,9524
    Tiff_Image           tiff_image;277,9556
  } _Tiff_Image;278,9593
static _Tiff_Image *Free_Tiff_Image_List Free_Tiff_Image_List280,9611
static int    Tiff_Image_Offset,281,9660
static int    Tiff_Image_Offset, Tiff_Image_Inuse;281,9660
static inline void allocate_tiff_image_channels(283,9712
static inline void allocate_tiff_image_map(293,10134
static inline Tiff_Image *new_tiff_image(new_tiff_image303,10536
static inline Tiff_Image *copy_tiff_image(copy_tiff_image322,11174
static inline void pack_tiff_image(335,11711
static inline void free_tiff_image(359,12651
static inline void kill_tiff_image(366,12896
static inline void reset_tiff_image(376,13231
int Tiff_Image_Usage(386,13495
Tiff_Image *Copy_Tiff_Image(Copy_Tiff_Image389,13550
void Pack_Tiff_Image(398,13790
void Free_Tiff_Image(406,13961
void Kill_Tiff_Image(414,14167
void Reset_Tiff_Image(422,14373
static void Print_Plane(429,14502
int PackBits_Decoder(508,17043
int PackBits_Encoder(531,17522
#define MOVE_UNIQUE_STRETCH	535,17672
int LZW_Decoder(570,18464
#define READ_CODE	602,19206
int LZW_Encoder(655,20299
#define WRITE_CODE(683,21064
static void flip_rows(761,22936
static void flip_columns(785,23429
static inline unsigned int get_integer_tag(807,23876
static char Error_String[Error_String837,24484
static inline void *error(error839,24517
char *Tiff_Image_Error(Tiff_Image_Error844,24604
Tiff_Image *Extract_Image_From_IFD(Extract_Image_From_IFD847,24657
#define UNPACK_BITS(1168,36193
Tiff_Image *Create_Tiff_Image(Create_Tiff_Image1543,48615
int Add_Tiff_Image_Channel(1553,48875
Tiff_IFD *Make_IFD_For_Image(Make_IFD_For_Image1590,50045
#define PACK_BITS(1704,54946
#define UPSIZE_AREA(1974,62862
#define DOWNSIZE_AREA(1981,63070
#define SHIFTUP_AREA(1988,63277
#define SHIFTDOWN_AREA(1994,63419
void Scale_Tiff_Channel(2000,63563
void Scale_Tiff_Image(2077,65950
#define RANGE_AREA(2083,66111
void Range_Tiff_Channel(2096,66404
#define SHIFT_AREA(2127,67283
void Shift_Tiff_Channel(2137,67529
void Shift_Tiff_Image(2160,68217
Tiff_Histogram *Histogram_Tiff_Channel(Histogram_Tiff_Channel2166,68378
void Histogram_Tiff_Image_Channels(2246,70436
void Tiff_Histogram_Merge(2254,70679

../lib/genelib/src/tiff_io.c,8419
typedef unsigned char  uint8;50,3084
typedef unsigned short uint16;51,3114
typedef unsigned int   uint32;52,3145
  { uint16  label;55,3192
    uint16  type;56,3211
    uint32  count;57,3229
    uint32  value;58,3248
  } Tif_Tag;59,3348
static int type_sizes[type_sizes61,3404
#define POINTER(64,3557
#define VOID_PTR(66,3599
#define SHORT_PTR(67,3643
#define LONG_PTR(68,3689
#define WORD_MULTIPLE(70,3736
  { int     data_flip;73,3847
    int     numtags;75,3935
    int     initags;76,3989
    int     maxtags;77,4065
    Tif_Tag *tags;tags79,4150
    int      vmax;81,4246
    int      veof;82,4326
    int      vsize;83,4392
    uint8   *values;values84,4471
    int      dsize;86,4535
    uint8   *data;data87,4582
  } TIFD;88,4663
  { int      flip;91,4689
    int      ifd_no;92,4765
    int      lsm;93,4841
    uint32   first_ifd;94,4935
    uint32   ifd_offset;95,4996
    int      file_size;96,5055
    FILE    *input;input97,5147
  } Treader;98,5167
  { int      flip;101,5196
    int      ifd_no;102,5273
    int      lsm;103,5353
    uint32   eof_offset;104,5449
    uint32   ifd_linko;105,5521
    uint32   ano_count;106,5575
    uint32   ano_linko;107,5626
    char    *annotation;annotation108,5701
    FILE    *output;output109,5763
  } Twriter;110,5784
  { int      flip;113,5813
    uint32   ano_cnto;114,5890
    uint32   ano_offset;115,5947
    uint32   ano_count;116,6004
    char    *annotation;annotation117,6055
    FILE    *inout;inout118,6117
  } Tannotator;119,6137
#define LSM_TAG_COUNT 128,6607
#define LSM_NO_CHANNELS 130,6685
#define LSM_SCAN_TYPE 131,6771
#define LSM_VECTOR_OVERLAY 136,6970
#define LSM_INPUT_LUT 137,7018
#define LSM_OUTPUT_LUT 138,7066
#define LSM_CHANNEL_COLORS 139,7114
#define LSM_CHANNEL_DATA_TYPES 140,7185
#define LSM_SCAN_INFORMATION 141,7243
#define LSM_KS_DATA 142,7296
#define LSM_TIME_STAMPS 143,7362
#define LSM_EVENT_LIST 144,7410
#define LSM_ROI 145,7458
#define LSM_BLEACH_ROI 146,7506
#define LSM_NEXT_RECORDING 147,7554
#define LSM_MEAN_OF_ROIS_OVERLAY 148,7626
#define LSM_TOPO_ISOLINE_OVERLAY 149,7707
#define LSM_TOPO_PROFILE_OVERLAY 150,7755
#define LSM_LINE_SCAN_OVERLAY 151,7803
#define LSM_CHANNEL_WAVELENGTH 152,7851
#define LSM_CHANNEL_FACTORS 153,7906
#define LSM_UNMIX_PARAMETERS 154,7965
#define LSM_ASCII_INFORMATION 155,8031
#define LSM_ASCII_SIGNATURE 156,8101
static int lsm_offset_list[lsm_offset_list158,8172
static int lsm_1st_size[lsm_1st_size168,8893
static int lsm_2nd_size[lsm_2nd_size171,9067
static int lsm_zero_size[lsm_zero_size176,9311
typedef struct __Treader186,9857
  { struct __Treader *next;next187,9882
    Treader           treader;188,9910
  } _Treader;189,9941
static _Treader *Free_Treader_List Free_Treader_List191,9956
static int    Treader_Offset,192,9999
static int    Treader_Offset, Treader_Inuse;192,9999
static inline Treader *new_treader(new_treader194,10045
static inline Treader *copy_treader(copy_treader209,10442
Tiff_Reader *Copy_Tiff_Reader(Copy_Tiff_Reader215,10587
static inline void free_treader(218,10712
static inline void kill_treader(225,10927
static inline void reset_treader(231,11049
void Reset_Tiff_Reader(241,11289
int Tiff_Reader_Usage(244,11336
void Free_Tiff_Reader(247,11389
void Kill_Tiff_Reader(253,11512
static inline int twriter_asize(259,11635
typedef struct __Twriter263,11712
  { struct __Twriter *next;next264,11737
    int               asize;265,11765
    Twriter           twriter;266,11794
  } _Twriter;267,11825
static _Twriter *Free_Twriter_List Free_Twriter_List269,11840
static int    Twriter_Offset,270,11883
static int    Twriter_Offset, Twriter_Inuse;270,11883
static inline void allocate_twriter_annotation(272,11929
static inline Twriter *new_twriter(new_twriter282,12329
static inline Twriter *copy_twriter(copy_twriter299,12827
Tiff_Writer *Copy_Tiff_Writer(Copy_Tiff_Writer309,13166
static inline void pack_twriter(312,13291
void Pack_Tiff_Writer(326,13805
static inline void free_twriter(329,13899
void Free_Tiff_Writer(336,14114
static inline void kill_twriter(339,14208
void Kill_Tiff_Writer(347,14459
static inline void reset_twriter(350,14553
void Reset_Tiff_Writer(360,14793
int Tiff_Writer_Usage(363,14840
static inline int tannotator_asize(366,14893
typedef struct __Tannotator370,14976
  { struct __Tannotator *next;next371,15004
    int                  asize;372,15035
    Tannotator           tannotator;373,15067
  } _Tannotator;374,15104
static _Tannotator *Free_Tannotator_List Free_Tannotator_List376,15122
static int    Tannotator_Offset,377,15171
static int    Tannotator_Offset, Tannotator_Inuse;377,15171
static inline void allocate_tannotator_annotation(379,15223
static inline Tannotator *new_tannotator(new_tannotator389,15653
static inline Tannotator *copy_tannotator(copy_tannotator406,16193
Tiff_Annotator *Copy_Tiff_Annotator(Copy_Tiff_Annotator416,16580
static inline void pack_tannotator(419,16729
void Pack_Tiff_Annotator(433,17291
static inline void free_tannotator(436,17403
static inline void kill_tannotator(443,17648
static inline void reset_tannotator(451,17932
void Reset_Tiff_Annotator(461,18196
int Tiff_Annotator_Usage(464,18249
void Free_Tiff_Annotator(467,18308
void Kill_Tiff_Annotator(473,18446
static uint32 *get_ifd_vector(get_ifd_vector479,18584
static uint8 *get_lsm_decode(get_lsm_decode495,18976
static inline int tifd_tsize(511,19424
static inline int tifd_dsize(514,19510
static inline int tifd_vsize(517,19578
typedef struct __TIFD521,19646
  { struct __TIFD *next;next522,19668
    int            tsize;523,19693
    int            vsize;524,19719
    int            dsize;525,19745
    TIFD           tifd;526,19771
  } _TIFD;527,19796
static _TIFD *Free_TIFD_List Free_TIFD_List529,19808
static int    TIFD_Offset,530,19845
static int    TIFD_Offset, TIFD_Inuse;530,19845
static inline void allocate_tifd_tags(532,19885
static inline void allocate_tifd_values(542,20231
static inline void allocate_tifd_data(552,20585
static inline TIFD *new_tifd(new_tifd562,20931
static inline TIFD *copy_tifd(copy_tifd583,21561
Tiff_IFD *Copy_Tiff_IFD(Copy_Tiff_IFD599,22084
static inline void pack_tifd(602,22185
void Pack_Tiff_IFD(636,23307
static inline void free_tifd(639,23383
void Free_Tiff_IFD(646,23568
static inline void kill_tifd(649,23644
void Kill_Tiff_IFD(661,23954
static inline void reset_tifd(664,24030
int Tiff_IFD_Usage(674,24246
void Reset_Tiff_IFD(677,24293
static void flip_short(690,24841
static void flip_long(699,24959
static void flip_quad(711,25116
int Native_Endian(729,25357
static char *Tiff_Estring Tiff_Estring738,25458
static void report_error(740,25493
char *Tiff_Error_String(Tiff_Error_String746,25650
int Tiff_Is_LSM(749,25704
#define INPUT_SHORT(754,25791
#define INPUT_LONG(762,25993
#define OUTPUT_SHORT(770,26193
#define OUTPUT_LONG(777,26346
static int optseek(788,26573
Tiff_Reader *Open_Tiff_Reader(Open_Tiff_Reader806,27311
void Rewind_Tiff_Reader(871,28613
int Advance_Tiff_Reader(877,28753
int End_Of_Tiff(916,29497
void Close_Tiff_Reader(919,29581
static int get_lsm_size(929,29968
Tiff_IFD *Read_Tiff_IFD(Read_Tiff_IFD945,30333
#define LSM_FETCH(1221,38899
Tiff_IFD *Create_Tiff_IFD(Create_Tiff_IFD1497,47419
void *Get_Tiff_Tag(Get_Tiff_Tag1516,47762
void Delete_Tiff_Tag(1537,48313
int Set_Tiff_Tag(1551,48663
unsigned char *Tiff_IFD_Data(Tiff_IFD_Data1614,50224
void Allocate_Tiff_IFD_Data(1617,50304
int Tiff_IFD_Data_Flip(1623,50464
Tiff_Writer *Open_Tiff_Writer(Open_Tiff_Writer1633,50996
static void write_tiff_header(1652,51358
static int TAG_SORT(1685,51915
int Write_Tiff_IFD(1691,52060
void Close_Tiff_Writer(2004,61491
Tiff_IFD *Convert_LSM_2_RGB(Convert_LSM_2_RGB2029,62015
int *Get_LSM_Colors(Get_LSM_Colors2132,65439
static Tiff_Annotator *open_annotator(open_annotator2181,67045
Tiff_Annotator *Open_Tiff_Annotator(Open_Tiff_Annotator2361,71228
Annotator_Status Tiff_Annotation_Status(2364,71317
char *Get_Tiff_Annotation(Get_Tiff_Annotation2370,71444
void Set_Tiff_Annotation(2377,71606
void Close_Tiff_Annotator(2386,71891
int Format_Tiff_For_Annotation(2409,72523
static char *tiff_label[tiff_label2493,74596
static char *tiff_type[tiff_type2585,76558
void Print_Tiff_IFD(2601,76821

../lib/genelib/src/utilities.c,10315
#define OPTION_CHAR 72,5737
#define FLAG_CHAR 73,5762
#define ESCAPE_CHAR 74,5787
#define VALUE_CHAR 75,5813
#undef  DEBUG77,5839
#undef  DEBUG_TREE78,5853
#undef  DEBUG_FA79,5872
#undef  DEBUG_MATCH80,5889
#undef  DEBUG_SEARCH81,5909
#undef  DEBUG_RESULT82,5930
#undef  DEBUG_LOOKUP83,5951
void *Guarded_Malloc(Guarded_Malloc89,6250
void *Guarded_Realloc(Guarded_Realloc101,6481
char *Guarded_Strdup(Guarded_Strdup111,6713
FILE *Guarded_Fopen(Guarded_Fopen121,6925
static char  *Program;Program138,7475
static char **Master_Spec;Master_Spec139,7525
static int    ArgC;141,7592
static char **ArgV;ArgV142,7674
#define INT_TYPE 144,7701
#define DOUBLE_TYPE 145,7747
#define STRING_TYPE 146,7769
static char *Type_Strings[Type_Strings148,7792
  { int type;151,7944
      { int    intval;153,7968
        double dblval;154,7991
        char  *strval;strval155,8014
      } value;156,8037
  } Value;157,8052
typedef unsigned int Alpha_Set[Alpha_Set159,8064
static void print_value(163,8161
#define TYPE 186,8785
#define NAME 187,8859
#define TEXT 188,8922
#define LIST 189,8980
#define DASH 190,9045
#define WHITE 191,9108
#define SYN_L 193,9165
#define SYN_R 194,9209
#define SYN 196,9254
#define OPT 197,9299
#define PLUS 198,9317
#define CAT 199,9335
#define OR 200,9353
typedef struct _node204,9433
  { int           label;205,9454
    short         empty;206,9506
    short         loops;207,9575
    struct _node *left;left208,9637
    struct _node *right;right209,9679
  } Node;210,9736
  { int           label;215,9844
    short         empty;216,9895
    short         loops;217,9968
    char         *name;name218,10034
    short         nlen;220,10211
    short         slen;221,10289
    short         line;222,10372
    short         has_def;223,10432
    Value         def_val;224,10495
  } Atom;225,10587
static Node *new_node(new_node227,10598
static Node *new_atom(new_atom259,11312
static char *Label_String[Label_String292,12222
static char *Type_String[Type_String295,12385
static void print_type(297,12440
static char Print_Buffer[Print_Buffer311,12700
static void _print_tree(313,12733
static void print_tree(338,13537
static char *Scan;Scan356,14088
static char *Specbeg;Specbeg357,14163
static int   Specline;358,14238
static int   In_Curly;359,14313
static char *C2_ERROR C2_ERROR363,14469
static char *RP_ERROR RP_ERROR365,14535
static char *RC_ERROR RC_ERROR366,14616
static char *RB_ERROR RB_ERROR367,14703
static char *RA_ERROR RA_ERROR368,14786
static char *SP_ERROR SP_ERROR369,14875
static char *UT_ERROR UT_ERROR370,14948
static char *PT_ERROR PT_ERROR371,15018
static char *CC_ERROR CC_ERROR372,15095
static char *UO_ERROR UO_ERROR373,15155
static char *UD_ERROR UD_ERROR374,15204
static char *UB_ERROR UB_ERROR375,15260
static char *EI_ERROR EI_ERROR376,15331
static char *ED_ERROR ED_ERROR377,15390
static char *EN_ERROR EN_ERROR378,15456
static char *TO_ERROR TO_ERROR380,15532
static char *TT_ERROR TT_ERROR381,15589
static char *TL_ERROR TL_ERROR382,15684
static char *NR_ERROR NR_ERROR383,15754
static char *NL_ERROR NL_ERROR384,15834
static char *TX_ERROR TX_ERROR385,15913
static char *OP_ERROR OP_ERROR386,15966
static char *BO_ERROR BO_ERROR387,16066
static char *CW_ERROR CW_ERROR388,16131
static char *CT_ERROR CT_ERROR389,16192
static char *CP_ERROR CP_ERROR390,16248
static char *PL_ERROR PL_ERROR391,16317
static char *OL_ERROR OL_ERROR392,16402
static char *DP_ERROR DP_ERROR394,16482
static char *DF_ERROR DF_ERROR395,16564
static void syntax_error(398,16654
static int atom_location(405,16902
static void semantic_error(412,17066
static void dual_error(419,17328
static void check_eol(434,17862
static int parse_type(441,18020
static Node *fact(fact467,18655
static Node *rep(rep621,22835
static Node *cat(cat645,23291
static Node *or(or656,23506
static Node *remove_empty_loops(remove_empty_loops671,23850
#define LOOP_START 721,25139
#define LOOP_FINISH 722,25189
#define START_FLAG 724,25244
#define MORE0_FLAG 725,25296
#define MORE1_FLAG 726,25362
#define FINISH_FLAG 727,25428
typedef struct _state729,25480
  { struct _state *succ[succ730,25502
    struct _state *pred[pred731,25558
    struct _state *loop;loop732,25586
    int            mark;733,25681
    int            flags;734,25754
    short          minlen;735,25828
    short          maxlen;736,25912
    Atom          *atom;atom737,25996
    void          *ulist;ulist738,26049
    int            number;740,26142
  } State;742,26220
  { State *start;start747,26303
    State *final;final748,26353
    int    longest;749,26403
  } Automaton;750,26458
static State *new_state(new_state752,26474
static Automaton *build_enfa(build_enfa771,26883
static void reset_marks(858,29258
static int preorder_number(868,29537
static Automaton *build_automaton(build_automaton878,29839
static char *State_String[State_String911,30613
static void print_state(914,30746
static void print_automaton(968,32341
#define SEE_MARK 1014,34596
#define SEE_TEXT 1015,34673
#define SEE_TYPE 1016,34754
#define CLEAR_MARK 1018,34842
#define SEE_CLEAR 1019,34917
static void compute_unit_lookaheads(1027,35256
static Atom *find_previous_name(find_previous_name1067,36503
static void classify_edge(1078,36807
static void check_automaton_units(1085,37026
static Atom *unit_split(unit_split1232,41485
static Atom *pure_option(pure_option1244,41762
static void compute_unit_finishes(1264,42283
#define OPTION 1331,44645
#define REQUIRED 1332,44701
#define FLAGS 1333,44720
#define OFLAG 1334,44739
typedef struct _Candidate1338,44864
  { struct _Candidate *next;next1339,44890
    int                argp;1340,44967
    Alpha_Set          set;1341,45028
  } Candidate;1342,45120
typedef struct _Match1346,45196
  { struct _Match *next;next1347,45218
    Value         *value;value1348,45286
    int            iter;1349,45341
  } Match;1350,45414
typedef struct _unit1354,45453
  { struct _unit *inext;inext1355,45474
    State        *beg;beg1356,45550
    State        *end;end1357,45624
    Atom        **unit;unit1359,45698
    int           len;1360,45785
    int           nvals;1361,45874
    int           span;1362,45941
    int           kind;1363,46038
    Candidate    *clist;clist1364,46113
    int           equiv;1365,46200
    int           equal;1366,46281
    int           used;1368,46366
    int           maxi;1369,46434
    Match        *alist;alist1370,46504
    int           mlist;1372,46571
    short         hit;1373,46634
    short         prefix;1374,46687
  } Unit;1375,46756
static Unit   *Unit_Table Unit_Table1377,46767
static int     Num_of_Units;1378,46841
static int     Unit_Table_Max 1379,46921
static Value *Vtop;Vtop1381,46957
static char  *Ttop;Ttop1382,47022
static int    Fill_Values;1383,47092
static Alpha_Set Flag_Vector;1385,47163
static Alpha_Set Flag_Space;1386,47229
static void print_unit(1390,47318
static void print_instance(1426,48251
static Atom **AtStk;AtStk1449,49018
static int    Stop;1450,49118
static State *Start_State;Start_State1451,49167
static int    Unit_Span;1452,49244
static int equivalent_option(1457,49465
static int equal_unit(1516,51367
static void add_unit_instance(1606,54753
static void traverse_unit(1665,56247
static void find_unit_starts(1716,57628
static void circularize_equiv_lists(1732,58035
static void circularize_equal_lists(1758,58914
static void check_dups_back(1782,59704
static void check_for_duplicates(1796,60233
static void build_unit_table(1825,61306
static inline Candidate *add_match(add_match1868,62333
static void match_flags(1878,62634
static int match_int(1927,63996
static int match_double(1947,64455
static void push_string(1967,64860
static void pop_type_match(1979,65144
static int match_required_arg(1988,65325
static void match_required(2009,65778
int match_text(2025,66189
int match_option_suffix(2041,66653
static void match_option(2138,69646
static void find_candidate_matches(2153,69972
static void is_match_possible(2176,70605
#define UN_MATCHED 2273,73767
#define FULL_MATCH 2274,73788
#define PART_MATCH 2275,73809
  { int              matched;2280,73945
    Unit            *inst;inst2281,74019
    int              iter;2282,74100
    Alpha_Set        matflag;2283,74179
    Alpha_Set        argflag;2284,74253
  } Match_State;2285,74345
static int             Last_Req;2287,74363
static Match_State    *Match_Vector;Match_Vector2288,74434
static Unit          **Fstack;Fstack2289,74529
static int             Ftop;2290,74629
static int             Num_Matches;2292,74659
static int             Num_Numbers;2293,74740
static Match_State    *A_Match;A_Match2294,74813
static Unit          **F_Path;F_Path2295,74907
static int             Flen;2296,75007
static void traverse_state(2310,75538
static void traverse_edge(2342,76444
static void match_instance(2441,79565
static void find_a_match(2548,82485
static void store_match(2633,85236
void Process_Arguments(2735,88404
static int search_table(2860,91757
static Match *find_iteration(find_iteration3018,96369
static Match *find_value(find_value3035,96723
int Get_Repeat_Count(3053,97084
int Is_Arg_Matched(3065,97313
static Value *get_default(get_default3095,98240
static Value *get_value(get_value3116,98894
#define GET_PARAMS	3184,100864
int Get_Int_Arg(3200,101227
double Get_Double_Arg(3208,101373
char *Get_String_Arg(Get_String_Arg3216,101528
void Print_Argument_Usage(3226,101731
char *Program_Name(Program_Name3247,102228
#undef  SPEC13250,102272
#undef  SPEC23251,102286
#undef  SPEC33252,102300
#undef  OTHER3253,102314
static char *Spec1[Spec13257,102343
int main(3262,102549
static char *Spec2[Spec23285,103134
int main(3289,103297
static char *Spec3[Spec33317,104055
int main(3324,104361
static char *Spec4[Spec43346,104832
static char *Spec5[Spec53351,105027
static char *Spec6[Spec63353,105125
static char *Spec7[Spec73355,105222
static char *Spec8[Spec83357,105315
static char *Spec9[Spec93359,105398
static char *Spec10[Spec103361,105497
int main(3363,105564

../lib/genelib/src/water_shed.c,4290
#undef  DEBUG22,1019
#undef  SHOW_GRAPH23,1033
#define DRAW_WATERSHED24,1052
#undef  DEBUG_COLLAPSE25,1075
static int *get_chord(get_chord35,1599
static int *get_label(get_label52,1986
static inline int watershed_2d_vsize(69,2377
static inline int watershed_2d_esize(72,2481
typedef struct __Watershed_2D76,2603
  { struct __Watershed_2D *next;next77,2633
    int                    vsize;78,2666
    int                    esize;79,2700
    Watershed_2D           watershed_2d;80,2734
  } _Watershed_2D;81,2775
static _Watershed_2D *Free_Watershed_2D_List Free_Watershed_2D_List83,2795
static int    Watershed_2D_Offset,84,2848
static int    Watershed_2D_Offset, Watershed_2D_Inuse;84,2848
static inline void allocate_watershed_2d_verts(86,2904
static inline void allocate_watershed_2d_edges(96,3334
static inline Watershed_2D *new_watershed_2d(new_watershed_2d106,3764
static inline Watershed_2D *copy_watershed_2d(copy_watershed_2d126,4472
Watershed_2D *Copy_Watershed_2D(Copy_Watershed_2D141,5131
static inline void pack_watershed_2d(144,5238
void Pack_Watershed_2D(170,6298
static inline void free_watershed_2d(173,6387
void Free_Watershed_2D(182,6726
static inline void kill_watershed_2d(185,6815
void Kill_Watershed_2D(197,7247
static inline void reset_watershed_2d(200,7336
int Watershed_2D_Usage(210,7616
void Reset_Watershed_2D(213,7675
static int cwidth 225,8218
static int cheight 226,8244
static int carea;227,8270
static int chk_width;229,8289
static int chk_height;230,8311
static int chk_iscon4 231,8334
static int n_nbrs4;233,8364
static int neighbor4[neighbor4234,8418
static inline int *boundary_pixels_2d(boundary_pixels_2d238,8573
static void setup_globals_2D(272,9257
#define WSHED 305,10031
#define ONQUEUE 306,10050
#define MASK 307,10069
#define INIT 308,10088
#define MINIM 309,10107
Watershed_2D *Build_2D_Watershed(Build_2D_Watershed311,10127
#define PUSH(370,11514
#define POP(378,11650
#define APUSH(656,19240
#define APOP(661,19300
static int ESORT(947,27799
static int FSORT(953,27927
static Basin *VERTS;VERTS959,28055
static int FIND(961,28077
static int UNION(975,28294
int *Collapse_2D_Watershed(Collapse_2D_Watershed980,28417
Watershed_2D *Merge_2D_Watershed(Merge_2D_Watershed1147,32810
void fill_region(1395,39707
void flood_canvas(1454,41745
static int black[black1525,44145
static int red[red1526,44189
static int green[green1527,44233
static int blue[blue1528,44277
static int yellow[yellow1529,44321
static int cyan[cyan1530,44365
static int magenta[magenta1531,44409
static int orange[orange1532,44453
static int brown[brown1533,44497
static int *palette[palette1534,44541
Image *Color_Watersheds(Color_Watersheds1536,44627
static inline int watershed_3d_ssize(1585,45996
typedef struct __Watershed_3D1589,46099
  { struct __Watershed_3D *next;next1590,46129
    int                    ssize;1591,46162
    Watershed_3D           watershed_3d;1592,46196
  } _Watershed_3D;1593,46237
static _Watershed_3D *Free_Watershed_3D_List Free_Watershed_3D_List1595,46257
static int    Watershed_3D_Offset,1596,46310
static int    Watershed_3D_Offset, Watershed_3D_Inuse;1596,46310
static inline void allocate_watershed_3d_seeds(1598,46366
static inline Watershed_3D *new_watershed_3d(new_watershed_3d1608,46796
static inline Watershed_3D *copy_watershed_3d(copy_watershed_3d1626,47398
Watershed_3D *Copy_Watershed_3D(Copy_Watershed_3D1638,47873
static inline void pack_watershed_3d(1641,47980
void Pack_Watershed_3D(1657,48628
static inline void free_watershed_3d(1660,48717
void Free_Watershed_3D(1669,49056
static inline void kill_watershed_3d(1672,49145
void Kill_Watershed_3D(1682,49520
static inline void reset_watershed_3d(1685,49609
int Watershed_3D_Usage(1695,49889
void Reset_Watershed_3D(1698,49948
static int cdepth;1703,50023
static int cvolume;1704,50114
static int chk_depth;1705,50134
static int chk_iscon6;1706,50156
static int neighbor6[neighbor61708,50180
static int n_nbrs6;1709,50206
static inline int *boundary_pixels_3d(boundary_pixels_3d1711,50227
static void setup_globals_3D(1772,51433
Watershed_3D *Build_3D_Watershed(Build_3D_Watershed1805,52216
#define PUSH(1867,53663
#define POP(1875,53799

../lib/genelib/src/xfig.c,4952
  { char     *name;name18,849
    FILE     *hfile;hfile19,869
    FILE     *tfile;tfile20,890
    Transform xform;21,911
    int       colortop;22,932
    int       pen_color;24,957
    int       thickness;25,982
    int       line_style;26,1007
    double    dash_width;27,1033
    int       join_style;29,1061
    int       cap_style;30,1087
    int       fill_color;32,1114
    int       fill_style;33,1140
    int       depth;35,1168
    int       point_size;37,1190
    int       font;38,1216
    int       flag;39,1236
    int       alignment;40,1256
    int       arrow_beg;42,1283
    int       arrow_end;43,1308
    int       arrow_style;44,1333
    int       arrow_fill;45,1360
    double    arrow_thick;46,1386
    double    arrow_width;47,1413
    double    arrow_height;48,1440
  } Myfig_Canvas;49,1468
static Myfig_Canvas *current_canvas;current_canvas51,1487
static double        xscale;52,1524
static double        xoffset;53,1553
static double        yscale;54,1583
static double        yoffset;55,1612
static double        PI;57,1643
typedef struct __Point60,1670
  { struct __Point *next;next61,1693
    Point           point;62,1719
  } _Point;63,1746
static _Point *Free_Point_List Free_Point_List65,1759
static int    Point_Offset,66,1798
static int    Point_Offset, Point_Inuse;66,1798
static inline Point *new_point(new_point68,1840
static inline Point *copy_point(copy_point83,2213
Point *Copy_Point(Copy_Point89,2338
static inline void free_point(92,2403
void Free_Point(99,2598
static inline void kill_point(102,2652
void Kill_Point(108,2762
static inline void reset_point(111,2816
void Reset_Point(121,3040
int Point_Usage(124,3079
Point *Make_Point(Make_Point127,3124
typedef struct __Box135,3258
  { struct __Box *next;next136,3279
    Box           box;137,3303
  } _Box;138,3326
static _Box *Free_Box_List Free_Box_List140,3337
static int    Box_Offset,141,3372
static int    Box_Offset, Box_Inuse;141,3372
static inline Box *new_box(new_box143,3410
static inline Box *copy_box(copy_box158,3759
Box *Copy_Box(Copy_Box164,3868
static inline void free_box(167,3921
void Free_Box(174,4096
static inline void kill_box(177,4140
void Kill_Box(183,4238
static inline void reset_box(186,4282
void Reset_Box(196,4490
int Box_Usage(199,4525
Box *Make_Box(Make_Box202,4566
typedef struct __Frame210,4682
  { struct __Frame *next;next211,4705
    Frame           frame;212,4731
  } _Frame;213,4758
static _Frame *Free_Frame_List Free_Frame_List215,4771
static int    Frame_Offset,216,4810
static int    Frame_Offset, Frame_Inuse;216,4810
static inline Frame *new_frame(new_frame218,4852
static inline Frame *copy_frame(copy_frame233,5225
Frame *Copy_Frame(Copy_Frame239,5350
static inline void free_frame(242,5415
void Free_Frame(249,5610
static inline void kill_frame(252,5664
void Kill_Frame(258,5774
static inline void reset_frame(261,5828
void Reset_Frame(271,6052
int Frame_Usage(274,6091
Frame *Make_Frame(Make_Frame277,6136
typedef struct __Transform287,6342
  { struct __Transform *next;next288,6369
    Transform           transform;289,6399
  } _Transform;290,6434
static _Transform *Free_Transform_List Free_Transform_List292,6451
static int    Transform_Offset,293,6498
static int    Transform_Offset, Transform_Inuse;293,6498
static inline Transform *new_transform(new_transform295,6548
static inline Transform *copy_transform(copy_transform310,6969
Transform *Copy_Transform(Copy_Transform316,7126
static inline void free_transform(319,7215
void Free_Transform(326,7450
static inline void kill_transform(329,7524
void Kill_Transform(335,7658
static inline void reset_transform(338,7732
void Reset_Transform(348,7988
int Transform_Usage(351,8035
Transform *Make_Transform(Make_Transform354,8088
void Finish_Xfig_Drawing(367,8521
Xfig_Canvas *Begin_Xfig_Drawing(Begin_Xfig_Drawing386,9105
void Set_Current_Canvas(457,11180
int Add_Color_Xfig_Canvas(465,11474
void Set_Pen_Color(476,11809
void Set_Thickness(479,11879
void Set_Line_Style(482,11949
void Set_Join_Style(488,12118
void Set_Cap_Style(491,12200
void Set_Fill_Style(494,12278
void Set_Fill_Color(497,12360
void Set_Depth(500,12432
void Set_Arrow_Mode(503,12494
void Set_Arrow_Style(508,12605
void Set_Arrow_Sizes(513,12731
static Point *Point_Array Point_Array519,12926
static int    Point_Top;520,12960
static int    Point_Max 521,12985
void First_Line_Point(523,13015
void Next_Line_Point(532,13241
static inline int mapx(541,13506
static inline int mapy(544,13582
static inline int scalex(547,13658
static inline int scaley(550,13726
static void emit_line(553,13794
void Last_Line_Point(591,15199
void Etch_Rectangle(601,15374
void Etch_Ellipse(619,15797
void Etch_Circle(638,16463
void Set_Point_Size(641,16554
void Set_Font(644,16624
void Set_Alignment(663,17095
void Etch_Text(666,17165

../lib/genelib/src/cdf.h,48
#define _SR_CDF13,937
typedef void CDF;15,954

../lib/genelib/src/contour_lib.h,485
#define _CONTOUR_LIB12,759
  { int  length;20,880
    int  boundary;21,932
    int  width;22,1000
    int  iscon4;23,1075
    int *tour;tour24,1143
  } Contour;25,1234
typedef enum { LE,30,1419
typedef enum { LE, EQ,30,1419
typedef enum { LE, EQ, GE 30,1419
typedef enum { LE, EQ, GE } Comparator;30,1419
  { int   min_x;56,2225
    int   max_x;57,2246
    int   min_y;58,2263
    int   max_y;59,2280
  } Contour_Extent;60,2297
  { int x;81,3114
  } Surface;82,3137

../lib/genelib/src/draw_lib.h,547
#define _DRAW_LIB13,848
typedef enum { SET 39,2088
typedef enum { SET = 0, ADD 39,2088
typedef enum { SET = 0, ADD = 1, SUB 39,2088
typedef enum { SET = 0, ADD = 1, SUB = 2, MUL 39,2088
typedef enum { SET = 0, ADD = 1, SUB = 2, MUL = 3, MAX 39,2088
typedef enum { SET = 0, ADD = 1, SUB = 2, MUL = 3, MAX = 4, MIN 39,2088
typedef enum { SET = 0, ADD = 1, SUB = 2, MUL = 3, MAX = 4, MIN = 5 } Pixel_Op;39,2088
  { Pixel_Op op;42,2184
    float    red;43,2201
    float    green;44,2219
    float    blue;45,2239
  } Paint_Brush;46,2258

../lib/genelib/src/fct_min.h,130
#define FUNCTION_MINIMIZATION12,768
  { double lft;15,814
    double mid;16,861
    double rgt;17,912
  } Min_Bracket;18,971

../lib/genelib/src/fct_root.h,108
#define FUNCTION_ROOT_FINDING12,768
  { double lft;15,849
    double rgt;16,865
  } Root_Bracket;17,881

../lib/genelib/src/fft.h,109
#define FAST_FOURIER_TRANSFORMS12,770
  { double  real;15,852
    double  imag;16,870
  } Complex;17,888

../lib/genelib/src/hash.h,58
#define _SR_HASH20,1220
typedef void Hash_Table;22,1238

../lib/genelib/src/image_filters.h,30
#define _IMAGE_FILTERS12,761

../lib/genelib/src/image_lib.h,1374
#define _IMAGE_LIB17,1217
#define GREY 23,1310
#define GREY16 24,1367
#define COLOR 25,1424
#define FLOAT32 26,1474
#define GREY_CHANNEL 28,1522
#define RED_CHANNEL 30,1624
#define GREEN_CHANNEL 31,1648
#define BLUE_CHANNEL 32,1672
typedef unsigned char  uint8;34,1697
typedef unsigned short uint16;35,1760
typedef float          float32;36,1791
  { int      kind;42,1866
    int      width;43,1885
    int      height;44,1906
    char    *text;text45,1927
    uint8   *array;array46,1946
  } Image;47,2031
#define IMAGE_PIXEL_8(53,2396
#define IMAGE_PIXEL_16(56,2513
#define IMAGE_PIXEL_32(59,2631
static inline double Get_Image_Pixel(62,2750
static inline void Set_Image_Pixel(71,3047
typedef void Tiff;89,3887
  { int      kind;131,5095
    int      width;132,5114
    int      height;133,5134
    int      depth;134,5155
    char    *text;text135,5175
    uint8   *array;array136,5194
  } Stack;137,5280
#define STACK_PIXEL_8(143,5573
#define STACK_PIXEL_16(147,5729
#define STACK_PIXEL_32(151,5886
static inline double Get_Stack_Pixel(155,6044
static inline void Set_Stack_Pixel(164,6395
typedef Image Stack_Plane;199,7920
  { char *prefix;prefix218,8923
    int   num_width;219,8941
    int   first_num;220,9021
  } File_Bundle;221,9042
  { double maxval;250,10852
    double minval;251,10871
  } Pixel_Range;252,10890

../lib/genelib/src/level_set.h,95
#define _LEVEL_SET12,757
typedef void Component_Tree;24,1375
typedef void Level_Set;43,2233

../lib/genelib/src/lu_matrix.h,25
#define LU_MATRIX13,848

../lib/genelib/src/tiff_image.h,1100
#define _TIFF_IMAGE15,1034
  { CHAN_WHITE,33,1836
    CHAN_BLACK,34,1910
    CHAN_MAPPED,35,1984
    CHAN_RED,36,2071
    CHAN_GREEN,37,2146
    CHAN_BLUE,38,2223
    CHAN_ALPHA,39,2299
    CHAN_MATTE,40,2358
    CHAN_MASK,41,2436
    CHAN_OTHER 42,2529
  } Channel_Meaning;43,2597
  { CHAN_UNSIGNED,46,2632
    CHAN_SIGNED,47,2722
    CHAN_FLOAT 48,2795
  } Channel_Type;49,2865
  { int          bitshift;52,2899
    int          total;53,2967
    unsigned int counts[counts54,3036
  } Tiff_Histogram;55,3119
  { int             width;58,3197
    int             height;59,3272
    Channel_Meaning interpretation;60,3347
    int             scale;61,3443
    int             bytes_per_pixel;62,3525
    Channel_Type    type;63,3619
    void           *plane;plane64,3686
    Tiff_Histogram *histogram;histogram65,3784
  } Tiff_Channel;66,3877
  { int             width;69,3911
    int             height;70,3986
    int             number_channels;71,4061
    Tiff_Channel  **channels;channels72,4146
    unsigned short *map;map73,4245
  } Tiff_Image;74,4342

../lib/genelib/src/tiff_io.h,5746
#define _TIFF_IO29,2320
  { TIFF_BYTE 39,2443
    TIFF_ASCII 40,2467
    TIFF_SHORT 41,2491
    TIFF_LONG 42,2515
    TIFF_RATIONAL 43,2539
    TIFF_SBTYE 44,2563
    TIFF_UNDEFINED 45,2587
    TIFF_SSHORT 46,2611
    TIFF_SLONG 47,2635
    TIFF_SRATIONAL 48,2659
    TIFF_FLOAT 49,2684
    TIFF_DOUBLE 50,2709
  } Tiff_Type;51,2733
#define TIFF_NEW_SUB_FILE_TYPE 56,2918
#define   TIFF_VALUE_REDUCED_RESOLUTION 57,2973
#define   TIFF_VALUE_MULTI_PAGE 58,3021
#define   TIFF_VALUE_TRANSPARENCY 59,3069
#define TIFF_SUB_FILE_TYPE 60,3117
#define   TIFF_VALUE_FULL_IMAGE 61,3172
#define   TIFF_VALUE_REDUCED_IMAGE 62,3220
#define   TIFF_VALUE_MULI_PAGE_IMAGE 63,3268
#define TIFF_IMAGE_WIDTH 64,3316
#define TIFF_IMAGE_LENGTH 65,3379
#define TIFF_BITS_PER_SAMPLE 66,3442
#define TIFF_COMPRESSION 67,3513
#define   TIFF_VALUE_UNCOMPRESSED 68,3568
#define   TIFF_VALUE_CCITT_1D 69,3610
#define   TIFF_VALUE_GROUP_3_FAX 70,3652
#define   TIFF_VALUE_GROUP_4_FAX 71,3694
#define   TIFF_VALUE_LZW 72,3736
#define   TIFF_VALUE_JPEG 73,3778
#define   TIFF_VALUE_PACK_BITS 74,3820
#define TIFF_PHOTOMETRIC_INTERPRETATION 76,3863
#define   TIFF_VALUE_WHITE_IS_ZERO 77,3922
#define   TIFF_VALUE_BLACK_IS_ZERO 78,3965
#define   TIFF_VALUE_RGB 79,4008
#define   TIFF_VALUE_RGB_PALETTE 80,4051
#define   TIFF_VALUE_TRANSPARENCY_MASK 81,4094
#define   TIFF_VALUE_CMYK 82,4137
#define   TIFF_VALUE_YCBCR 83,4180
#define   TIFF_VALUE_CIELAB 84,4223
#define TIFF_THRESHHOLDING 86,4267
#define   TIFF_VALUE_NO_DITHER 87,4322
#define   TIFF_VALUE_ORDERED_DITHER 88,4370
#define   TIFF_VALUE_RANDOM_DITHER 89,4418
#define TIFF_CELL_WIDTH 90,4466
#define TIFF_CELL_LENGTH 91,4521
#define TIFF_FILL_ORDER 92,4576
#define   TIFF_VALUE_HIGH_TO_LOW_BITS 93,4631
#define   TIFF_VALUE_LOW_TO_HGIH_BITS 94,4679
#define TIFF_DOCUMENT_NAME 96,4728
#define TIFF_IMAGE_DESCRIPTION 97,4779
#define TIFF_MAKE 98,4830
#define TIFF_MODEL 99,4881
#define TIFF_STRIP_OFFSETS 101,4933
#define TIFF_ORIENTATION 102,4996
#define   TIFF_VALUE_TOP_N_LEFT 103,5059
#define   TIFF_VALUE_TOP_N_RIGHT 104,5107
#define   TIFF_VALUE_BOTTOM_N_RIGHT 105,5155
#define   TIFF_VALUE_BOTTOM_N_LEFT 106,5203
#define   TIFF_VALUE_LEFT_N_TOP 107,5251
#define   TIFF_VALUE_RIGHT_N_TOP 108,5299
#define   TIFF_VALUE_RIGHT_N_BOTTOM 109,5347
#define   TIFF_VALUE_LEFT_N_BOTTOM 110,5395
#define TIFF_SAMPLES_PER_PIXEL 111,5443
#define TIFF_ROWS_PER_STRIP 112,5506
#define TIFF_STRIP_BYTE_COUNTS 113,5569
#define TIFF_MIN_SAMPLE_VALUE 115,5648
#define TIFF_MAX_SAMPLE_VALUE 116,5723
#define TIFF_X_RESOLUTION 117,5798
#define TIFF_Y_RESOLUTION 118,5857
#define TIFF_PLANAR_CONFIGURATION 120,5917
#define   TIFF_VALUE_CHUNKY 121,5976
#define   TIFF_VALUE_PLANAR 122,6024
#define TIFF_PAGE_NAME 124,6073
#define TIFF_X_POSITION 125,6125
#define TIFF_Y_POSITION 126,6183
#define TIFF_FREE_OFFSETS 128,6242
#define TIFF_FREE_BYTE_COUNTS 129,6302
#define TIFF_GRAY_RESPONSE_UNIT 131,6364
#define TIFF_GRAY_RESPONSE_CURVE 132,6422
#define TIFF_T4_OPTIONS 133,6497
#define TIFF_T6_OPTIONS 134,6556
#define TIFF_RESOLUTION_UNIT 135,6615
#define   TIFF_VALUE_NO_ABSOLUTE_UNIT 136,6674
#define   TIFF_VALUE_INCH 137,6722
#define   TIFF_VALUE_CENTIMETER 138,6786
#define TIFF_PAGE_NUMBER 139,6834
#define TIFF_TRANSFER_FUNCTION 140,6893
#define TIFF_SOFTWARE 142,6992
#define TIFF_DATE_TIME 143,7044
#define TIFF_ARTIST 144,7134
#define TIFF_HOST_COMPUTER 145,7186
#define TIFF_PREDICTOR 147,7239
#define   TIFF_NO_PREDICTION 148,7298
#define   TIFF_HORIZONTAL_DIFFERENCING 149,7346
#define TIFF_WHITE_POINT 150,7394
#define TIFF_PRIMARY_CHROMATICITIES 151,7453
#define TIFF_COLOR_MAP 152,7512
#define TIFF_HALFTONE_HINTS 153,7589
#define TIFF_TILE_WIDTH 155,7649
#define TIFF_TILE_LENGTH 156,7712
#define TIFF_TILE_OFFSETS 157,7776
#define TIFF_TILE_BYTE_COUNTS 158,7854
#define TIFF_INK_SET 160,7933
#define TIFF_INK_NAMES 161,7997
#define TIFF_NUMBER_OF_INKS 162,8089
#define TIFF_DOT_RANGE 163,8153
#define TIFF_TARGET_PRINTER 164,8237
#define TIFF_EXTRA_SAMPLES 166,8289
#define   TIFF_VALUE_UNSPECIFIED_DATA 167,8383
#define   TIFF_VALUE_ALPHA_DATA 168,8431
#define   TIFF_VALUE_SOFT_MATTE 169,8479
#define   TIFF_VALUE_EXTRA_RED 170,8527
#define   TIFF_VALUE_EXTRA_GREEN 171,8624
#define   TIFF_VALUE_EXTRA_BLUE 172,8721
#define TIFF_SAMPLE_FORMAT 173,8818
#define   TIFF_VALUE_UNSIGNED_INTEGER_DATA 174,8890
#define   TIFF_VALUE_TWOS_COMPLEMENT_DATA 175,8938
#define   TIFF_VALUE_IEEE_FLOATING_POINT_DATA 176,8986
#define   TIFF_VALUE_UNDEFINED_DATA 177,9034
#define TIFF_SMIN_SAMPLE_VALUE 178,9082
#define TIFF_SMAX_SAMPLE_VALUE 179,9154
#define TIFF_TRANSFER_RANGE 180,9226
#define TIFF_JPEG_PROC 182,9283
#define TIFF_JPEG_INTERCHANGE_FORMAT 183,9347
#define TIFF_JPEG_INTERCHANGE_FORMAT_LENGTH 184,9411
#define TIFF_JPEG_RESTART_INTERVAL 185,9475
#define TIFF_JPEG_LOSSLESS_PREDICTORS 186,9539
#define TIFF_JPEG_POINT_TRANSFORMS 187,9618
#define TIFF_JPEG_Q_TABLES 188,9697
#define TIFF_JPEG_DC_TABLES 189,9776
#define TIFF_JPEG_AC_TABLES 190,9855
#define TIFF_YCBCR_COEFFICIENTS 192,9935
#define TIFF_YCBCR_SUBSAMPLING 193,10002
#define TIFF_YCBCR_POSITIONING 194,10069
#define TIFF_REFERENCE_BLACK_WHITE 195,10136
#define TIFF_COPYRIGHT 197,10222
#define TIFF_CZ_LSMINFO 199,10282
#define TIFF_JF_TAGGER 201,10359
#define TIFF_JF_MRCINFO 203,10419
typedef void Tiff_Reader;270,15076
typedef void Tiff_Writer;292,16148
typedef void Tiff_IFD;316,17358
  { ANNOTATOR_CANT_OPEN 382,21211
    ANNOTATOR_GIBBERISH 383,21244
    ANNOTATOR_NOT_FORMATTED 384,21277
    ANNOTATOR_FORMATTED 385,21310
  } Annotator_Status;386,21342
typedef void Tiff_Annotator;390,21419

../lib/genelib/src/utilities.h,52
#define SR_UTILITIES66,5636
#define ASCII 70,5678

../lib/genelib/src/water_shed.h,578
#define _WATERSHED13,849
  { int seed;18,908
    int first;19,960
    int depth;20,1018
    int size;21,1099
  } Basin;22,1145
  { int head;25,1172
    int height;26,1235
  } Dam;27,1328
  { int    iscon4;30,1353
    int    nlabels;31,1417
    Image *labels;labels32,1506
    int    nbasins;33,1575
    Basin *verts;verts34,1635
    Dam   *edges;edges35,1698
  } Watershed_2D;37,1866
  { int    nlabels;93,5181
    Stack *labels;labels94,5270
    int    nbasins;95,5339
    int   *seeds;seeds96,5399
    int    iscon6;97,5484
  } Watershed_3D;98,5549

../lib/genelib/src/xfig.h,1880
#define _XFIG_HEADER12,759
  { double x,17,820
  { double x, y;17,820
  } Point;18,837
  { double w,28,1071
  { double w, h;28,1071
  } Box;29,1088
  { Point corner;39,1296
    Box   window;40,1314
  } Frame;41,1333
  { double xscale,51,1575
  { double xscale, xoffset;51,1575
    double yscale,52,1603
    double yscale, yoffset;52,1603
  } Transform;53,1631
typedef void Xfig_Canvas;67,2122
#define BLACK 79,2464
#define BLUE 80,2543
#define GREEN 81,2562
#define CYAN 82,2581
#define RED 83,2600
#define MAGENTA 84,2619
#define YELLOW 85,2638
#define WHITE 86,2657
#define LT_BLUE 87,2676
#define BROWN 88,2695
#define PINK 89,2714
#define GOLD 90,2733
#define SOLID 97,2954
#define DASH 98,3000
#define DOT 99,3028
#define DASH_DOT 100,3056
#define DASH_DOT_DOT 101,3084
#define DASH_DOT_DOT_DOT 102,3112
#define POINTED_JOIN 108,3374
#define ROUNDED_JOIN 109,3420
#define SQUARED_JOIN 110,3445
#define SQUARED_CAP 112,3471
#define ROUNDED_CAP 113,3516
#define CENTERED_CAP 114,3541
#define NO_FILL 119,3690
#define FULLY_SHADED 120,3714
#define HALF_SHADED 121,3794
#define SOLID_COLOR 122,3818
#define HALF_CLEAR 123,3858
#define FULLY_CLEAR 124,3882
#define LAST_PATTEN 125,3916
#define LINE_STYLE 135,4282
#define FLAT_BASE 136,4332
#define ARROW 137,4354
#define FLINT 138,4376
#define TIMES 165,5534
#define AVANT_GARDE 166,5568
#define BOOKMAN 167,5602
#define COURIER 168,5636
#define HELVETICA 169,5670
#define HELVETICA_NARROW 170,5704
#define NEW_CENTURY_SCHOOLBOOK 171,5738
#define PALATINO 172,5772
#define SYMBOL 173,5806
#define LATEX_ROMAN 177,5886
#define SANS_SERIF 178,5953
#define TYPEWRITER 179,6007
#define PLAIN 183,6076
#define ITALIC 184,6099
#define BOLD 185,6122
#define BOLD_ITALIC 186,6145
#define LEFT_ALIGN 190,6214
#define CENTER_ALIGN 191,6238
#define RIGHT_ALIGN 192,6262

private/alignconf.c,101
static void extract_file_id(1,0
static void align_id(18,298
static void write_align_result(27,489

private/alignstack.c,99
#define STACK_ZPROFILE(2,1
static void stack_zprofile(15,273
static int estimate_chopoff(41,741

private/tz_graph_utils.c,154
#  undef NUMBER_OF_NEIGHBORS2,32
#  undef NEIGHBOR_OF6,93
#define NUMBER_OF_NEIGHBORS(9,122
#define NEIGHBOR_OF(10,180
static int extract_min(12,234

private/tz_image_code.c,674
static int chk_width;6,63
static int chk_height;7,85
static int chk_depth;8,108
static int chk_iscon1 9,130
static int ccon_2d 10,157
static int cwidth 11,181
static int cheight 12,244
static int cdepth 13,307
static int carea 14,330
static int cnpixel 15,352
static void init_imginfo(25,569
static inline int *boundary_pixels_2d(boundary_pixels_2d47,1056
static inline int *boundary_pixels_3d(boundary_pixels_3d91,1849
static inline int *boundary_pixels(boundary_pixels154,3136
static int init_neighbor_2d(162,3299
static int init_neighbor_3d(182,3685
static int init_neighbor(211,4330
static void level_code(275,5865
static void branch_code(342,7379

private/tz_image_lib.c,28
static void map_index(4,59

private/tz_main.c,37
static int rearrange_arguments(3,41

private/tz_neuroseg.c,714
#  define gsl_fcmp 6,78
#define TEST_Z_SCALE_ACCURACY 18,467
inline static int test_zscale(19,502
#undef TEST_Z_SCALE_ACCURACY23,613
#define COMPARE_ANGLE_ACCURACY 36,886
static inline int compare_angle(37,922
#undef COMPARE_ANGLE_ACCURACY41,1036
#define COMPARE_RADIUS_ACCURACY 52,1265
static inline int compare_radius(53,1302
#undef COMPARE_RADIUS_ACCURACY57,1418
#define COMPARE_HEIGHT_ACCURACY 68,1651
static inline int compare_height(69,1688
#undef COMPARE_HEIGHT_ACCURACY73,1804
static inline double normalize_angle(77,1895
static inline int is_valid_radius(94,2243
static inline int is_valid_height(105,2442
PRIVATE inline void field_range(118,2661
PRIVATE void print_field_range(213,5639

private/tz_neurotrace.c,327
static double Neuroseg_Max_Radius 6,74
#define NEUROTRACE_MIN_SCORE 7,116
#undef NEUROTRACE_MIN_SCORE8,150
#define NEUROTRACE_MIN_SCORE 9,178
PRIVATE double refit_local_neuroseg(11,212
static BOOL is_trace_valid(45,1185
void update_cache_seg(146,3823
void find_soma_range(157,4071
double soma_score_from_area(218,5200

private/tz_stack_bwdist.c,195
#define FLOAT_INF 8,104
#define square(10,135
float *dt1d(dt1d17,280
static void dt1d_m(69,1179
void dt2d(107,1992
void dt3d(178,3443
void dt2d_binary(345,6633
void dt3d_binary(381,7425

private/tz_stack_bwdist_mu16.c,249
#define UINT16_INF 10,150
#define FLOAT_INF 14,202
static void dt1d_first_m_mu16(22,299
static void dt1d_second_m_mu16(74,1084
void dt3d_mu16(147,2395
void dt3d_mu16_p(267,4683
void dt3d_binary_mu16(361,6733
void dt3d_binary_mu16_p(392,7215

private/tz_stack_bwdist_u16.c,133
static void dt1d_first_m_u16(13,170
static void dt1d_second_m_u16(63,1153
static void dt1d_m_u16(112,2060
void dt3d_u16(159,2939

private/tz_stack_bwmorph.c,210
static int Se_In_Use 6,66
static void se_boundbox(16,332
static void se_indices(41,824
static Struct_Element* se_expand(54,1113
static Struct_Element* se_dilate(82,1752
static inline int hit_out(105,2330

private/tz_stack_lib.c,577
#define STACK_ORIENTATION_DF 5,63
const static int scan_mask[scan_mask8,166
const static int scan_mask_depth[scan_mask_depth41,2378
const static int scan_mask_height[scan_mask_height46,2574
const static int scan_mask_width[scan_mask_width51,2770
static void init_scan_array(55,2947
static const int* get_scan_array_mask(74,3773
static void copy_scan_array_mask(79,3848
static void scan_array_mask_depth(84,3964
static void scan_array_mask_height(92,4119
static void scan_array_mask_width(100,4276
#define ARRAY_CMP(108,4431
static int boundary_offset(157,5897

private/tz_stack_objlabel.c,100
static void stack_label_object_recover_chord(7,120
static void stack_label_object_by_chord(21,392

private/tz_voxel_graphics.c,496
  VOXEL_GRAPH_X,7,75
  VOXEL_GRAPH_X, VOXEL_GRAPH_Y,7,75
  VOXEL_GRAPH_X, VOXEL_GRAPH_Y, VOXEL_GRAPH_Z 7,75
} Voxel_Graph_Axis_e;8,122
  FORWARD,11,161
  FORWARD, BACKWARD 11,161
} Voxel_Graph_Direction_e;12,182
typedef struct tagVoxel_Graph_Conversion 14,211
  int control_axis;15,254
  int order;16,274
} Voxel_Graph_Conversion;17,287
void voxel_graph_line_standarize(19,314
void voxel_graph_line_inverse_conversion(60,1247
void voxel_graph_line_inverse_conversion_object(75,1531

private/tzp_geo3d_ball.c,36
static void geo3d_ball_field_u(1,0

private/tzp_local_neuroseg.c,925
#define DELTA_R1 8,81
#define DELTA_C 9,102
#define DELTA_H 10,122
#define DELTA_THETA 11,142
#define DELTA_PSI 12,168
#define DELTA_CURVATURE 13,193
#define DELTA_ALPHA 14,222
#define DELTA_SCALE 15,248
#define DELTA_POS 16,273
#define DELTA_ZSCALE 17,295
#define LAMDA 18,320
#define MAX_ITER 19,339
static const double Delta[Delta23,428
#  define gsl_fcmp 30,631
#define TEST_Z_SCALE_ACCURACY 39,853
static int test_zscale(40,888
#undef TEST_Z_SCALE_ACCURACY44,992
static void local_neuroseg_axis_position(47,1028
static void local_neuroseg_bottom_position(54,1276
static void local_neuroseg_top_position(80,1890
static void local_neuroseg_center_position(106,2496
static void local_neuroseg_stack_position(142,3393
PRIVATE double neuroseg_correlation(161,3851
PRIVATE double neuroseg_overlap(173,4068
PRIVATE double neuroseg_significance(187,4304
PRIVATE double neuroseg_fit_statistic(226,5260

private/tzp_locseg_chain.c,31
static double path_length(1,0

private/tzp_random.c,627
#define N 49,2174
#define M 50,2188
#define MATRIX_A 51,2202
#define UMASK 52,2258
#define LMASK 53,2317
#define MIXBITS(54,2375
#define TWIST(55,2430
static unsigned long state[state57,2501
static int left 58,2570
static int initf 59,2591
static unsigned long *next;next60,2613
static void init_genrand(63,2681
static void init_by_array(83,3406
static void next_state(110,4289
static unsigned long genrand_int32(132,4775
static long genrand_int31(150,5105
static double genrand_real1(168,5434
static double genrand_real2(187,5812
static double genrand_real3(205,6181
static double genrand_res53(223,6566

private/tzp_swc_tree.c,48
static void swc_tree_dendrogram_position(5,134

tz_neurobiseg.h,0
