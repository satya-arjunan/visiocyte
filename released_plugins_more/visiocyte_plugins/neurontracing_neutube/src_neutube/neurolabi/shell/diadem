#!/bin/bash

 
if [ $# -eq 0 ]
then
    id=e3
else
    id=$1; shift
fi

source assert_succ.sh

usage="Usage: $prog_name [dataid -t trace_args]"

trace_args="-r no_recon"
recon_args="-o struct.txt -minlen 0 -z 1.0 -res ../data/diadem_e3.res -screen -sl -rz"
parsing=1

while getopts t:r: option
do
    case $option in
	t)
	    trace_args="$trace_args $OPTARG";;
	r)
	    recon_args="$recon_args $OPTARG";;
	\?)
	    echo $usage
	    exit 2;;
    esac
done
	    
cd ../c
if [ $id == 'e1' ] || [ $id == 'e2' ] || [ $id == 'e3' ] || [ $id == 'e4' ] || [ $id == 'e5' ] || [ $id == 'e6' ]
then
    #sh trace_all.sh diadem_$id $trace_args
    #assert_succ
    xy_th=3.94
    z_th=6.068
fi

args=$recon_args

name=$id

case "$id" in
e3)
bin/reconstruct_neuron -D../data/diadem_e3 -I../data/diadem_e3.tif -root 94 179 38 $args
assert_succ
id=5
;;
e2)
bin/reconstruct_neuron -D../data/diadem_e2 -I../data/diadem_e2.tif -root 1 391 25 $args
assert_succ
id=5
;;
e1)
bin/reconstruct_neuron -D../data/diadem_e1 -I../data/diadem_e1.tif -root 31 430 0 $args
assert_succ
id=5
;;
e4)
bin/reconstruct_neuron -D../data/diadem_$name -I../data/diadem_$name.tif -root 182.2 504.37 0.303 $args
assert_succ
id=5
;;
e5)
bin/reconstruct_neuron -D../data/diadem_$name -I../data/diadem_$name.tif -root 185.7 264.02 33 $args
assert_succ
id=5
;;
e6)
bin/reconstruct_neuron -D../data/diadem_$name -I../data/diadem_$name.tif -root 15.074 412.01 10 $args
assert_succ
id=5
;;
'a1')
args=" -o struct.txt -minlen 15 -screen -z 1.0 -dist 30"
diadem_a1_ds=diadem_a1_part3
bin/reconstruct_neuron -D../data/$diadem_a1_ds -I../data/$diadem_a1_ds.tif $args
assert_succ
bin/edswc -resize 2 2 1 ../data/$diadem_a1_ds/graph_d.swc -o ../data/$diadem_a1_ds/graph_d2.swc
assert_succ
bin/edswc ../data/$diadem_a1_ds/graph_d2.swc -root 4882 1797 19 -clean_root -o ../data/diadem_a1/graph_d.swc
assert_succ
xy_th=37.33
z_th=26.4
id=1
;;
'b1')
args=" -o struct.txt -minlen 15 -z 1.0 -dist 20 -rtlist ../data/diadem_b1_ds_root.txt -ct -al 0.2 -res ../data/diadem_b1_ds.res"
diadem_b1_ds=diadem_b1_cbg_ds
bin/reconstruct_neuron -D../data/$diadem_b1_ds -I../data/diadem_b1_ds.tif $args
assert_succ
i=1
while [ $i -le 14 ]
do
    bin/edswc -resize 2 2 8 ../data/$diadem_b1_ds/graph$i.swc -o ../data/diadem_b1/graph$i.swc
    i=`expr $i + 1`
done
assert_succ
id=2
parsing=0
;;
'c1')
#../app/Extension_Chains ../data/diadem_c1.tif ../data/diadem_c1_root_org.txt ../data/diadem_c1/oldchain ../data/diadem_c1 ../data/diadem_c1
#args="-o struct.txt -minlen 5 -z 1.0 -res ../data/diadem_c1.res -screen -sl -rz -ct -rtlist ../data/diadem_c1_root.txt -trans 0 -14 -21 -al 0.2 -sup_root -screenz 0.4 -ct_break 15.0 -force_merge 20.0"
args="-o struct.txt -minlen 5 -z 1.0 -res ../data/diadem_c1.res -sl -rz
-ct -rtlist ../data/diadem_c1_root.txt -trans 0 -14 -21 -al 0.2 -sup_root
-screenz 0.4 -ct_break 15.0 -force_merge 20.0 -jumpz 50.0"
#bin/reconstruct_neuron -D../data/tmp -I../data/diadem_c1.tif $args
#mv ../data/tmp/*.swc ../data/diadem_c1
bin/reconstruct_neuron -D../data/diadem_c1 $args
cd ../shell
./diadem_c1 > diadem_c1_score.txt
id=3
parsing=0
esac

if [ $parsing -eq 1 ]
then
    cd ../shell
#java -jar DiademMetric.jar -G /Users/zhaot/Data/diadem/OP_"$id".swc -T /Users/zhaot/Work/neurolabi/data/diadem_e$id/graph_d.swc -D 5 -m true | pdm "e$id"
#java -classpath JSAP-2.1.jar:bin org/krasnow/cng/diadem/DiademMetric  -G /Users/zhaot/Data/diadem/OP_"$id".swc -T /Users/zhaot/Work/neurolabi/data/diadem_e$id/graph_d.swc -D 5 -m true | diadem_sort "e$id"

    java -jar DiademMetric.jar -G /Users/zhaot/Data/diadem/"$name".swc -T /Users/zhaot/Work/neurolabi/data/diadem_$name/graph_d.swc -D $id -m true | diadem_sort "$name" $xy_th $z_th
    assert_succ

    cd ../c
    bin/parsediadem $name
    assert_succ
fi
